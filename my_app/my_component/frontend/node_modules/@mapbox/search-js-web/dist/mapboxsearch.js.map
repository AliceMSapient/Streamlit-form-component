{
  "version": 3,
  "sources": ["../../../node_modules/mersenne-twister/src/mersenne-twister.js", "../../../node_modules/polyfill-crypto.getrandomvalues/index.js", "../../../node_modules/no-scroll/index.js", "../../../node_modules/@mapbox/sphericalmercator/sphericalmercator.js", "../src/index.ts", "../../../node_modules/@popperjs/core/lib/dom-utils/getWindow.js", "../../../node_modules/@popperjs/core/lib/dom-utils/instanceOf.js", "../../../node_modules/@popperjs/core/lib/utils/math.js", "../../../node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js", "../../../node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js", "../../../node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js", "../../../node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js", "../../../node_modules/@popperjs/core/lib/dom-utils/getNodeName.js", "../../../node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js", "../../../node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js", "../../../node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js", "../../../node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js", "../../../node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js", "../../../node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js", "../../../node_modules/@popperjs/core/lib/dom-utils/getParentNode.js", "../../../node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js", "../../../node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js", "../../../node_modules/@popperjs/core/lib/dom-utils/isTableElement.js", "../../../node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js", "../../../node_modules/@popperjs/core/lib/enums.js", "../../../node_modules/@popperjs/core/lib/utils/orderModifiers.js", "../../../node_modules/@popperjs/core/lib/utils/debounce.js", "../../../node_modules/@popperjs/core/lib/utils/getBasePlacement.js", "../../../node_modules/@popperjs/core/lib/utils/mergeByName.js", "../../../node_modules/@popperjs/core/lib/utils/getVariation.js", "../../../node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js", "../../../node_modules/@popperjs/core/lib/utils/computeOffsets.js", "../../../node_modules/@popperjs/core/lib/createPopper.js", "../../../node_modules/@popperjs/core/lib/modifiers/eventListeners.js", "../../../node_modules/@popperjs/core/lib/modifiers/popperOffsets.js", "../../../node_modules/@popperjs/core/lib/modifiers/computeStyles.js", "../../../node_modules/@popperjs/core/lib/modifiers/applyStyles.js", "../../../node_modules/@popperjs/core/lib/popper-lite.js", "../src/utils/dom.ts", "../src/utils/class_name_transformers.ts", "../../core/src/search/constants.ts", "../../core/src/LngLat.ts", "../../core/src/LngLatBounds.ts", "../../core/src/utils/uuid.ts", "../../core/src/SessionToken.ts", "../../core/src/MapboxError.ts", "../../core/src/fetch.ts", "../../core/src/utils/queryParams.ts", "../../core/src/search/MapboxSearch.ts", "../../core/src/autofill/constants.ts", "../../core/src/autofill/MapboxAutofill.ts", "../../core/src/autofill/types.ts", "../../core/src/utils/Evented.ts", "../../core/src/utils/debounce.ts", "../../core/src/SearchSession.ts", "../../core/src/featureToSuggestion.ts", "../src/utils/map.ts", "../src/constants.ts", "../src/utils/index.ts", "../src/components/HTMLScopedElement.ts", "../src/MapboxHTMLEvent.ts", "../src/theme.ts", "../src/components/MapboxSearchListbox.ts", "../src/utils/aria.ts", "../src/utils/autofill.ts", "../src/utils/confirmation.ts", "../src/config.ts", "../src/utils/contribute.ts", "../src/components/MapboxAddressConfirmationFeature.ts", "../src/components/MapboxAddressConfirmationNoFeature.ts", "../src/components/MapboxAddressConfirmation.ts", "../../../node_modules/tabbable/src/index.js", "../../../node_modules/focus-trap/index.js", "../src/components/MapboxAddressAutofill.ts", "../../../node_modules/@turf/helpers/dist/es/index.js", "../../../node_modules/@turf/meta/dist/es/index.js", "../../../node_modules/@turf/bbox/dist/es/index.js", "../../../node_modules/@turf/bbox-polygon/dist/es/index.js", "../src/components/MapboxSearchBox.ts", "../src/utils/minimap.ts", "../src/components/MapboxAddressMinimap.ts", "../src/autofill.ts", "../src/confirmAddress.ts"],
  "sourcesContent": ["/*\n  https://github.com/banksean wrapped Makoto Matsumoto and Takuji Nishimura's code in a namespace\n  so it's better encapsulated. Now you can have multiple random number generators\n  and they won't stomp all over eachother's state.\n\n  If you want to use this as a substitute for Math.random(), use the random()\n  method like so:\n\n  var m = new MersenneTwister();\n  var randomNumber = m.random();\n\n  You can also call the other genrand_{foo}() methods on the instance.\n\n  If you want to use a specific seed in order to get a repeatable random\n  sequence, pass an integer into the constructor:\n\n  var m = new MersenneTwister(123);\n\n  and that will always produce the same random sequence.\n\n  Sean McCullough (banksean@gmail.com)\n*/\n\n/*\n   A C-program for MT19937, with initialization improved 2002/1/26.\n   Coded by Takuji Nishimura and Makoto Matsumoto.\n\n   Before using, initialize the state by using init_seed(seed)\n   or init_by_array(init_key, key_length).\n\n   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\n   All rights reserved.\n\n   Redistribution and use in source and binary forms, with or without\n   modification, are permitted provided that the following conditions\n   are met:\n\n     1. Redistributions of source code must retain the above copyright\n        notice, this list of conditions and the following disclaimer.\n\n     2. Redistributions in binary form must reproduce the above copyright\n        notice, this list of conditions and the following disclaimer in the\n        documentation and/or other materials provided with the distribution.\n\n     3. The names of its contributors may not be used to endorse or promote\n        products derived from this software without specific prior written\n        permission.\n\n   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n   \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n   Any feedback is very welcome.\n   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html\n   email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)\n*/\n\nvar MersenneTwister = function(seed) {\n\tif (seed == undefined) {\n\t\tseed = new Date().getTime();\n\t}\n\n\t/* Period parameters */\n\tthis.N = 624;\n\tthis.M = 397;\n\tthis.MATRIX_A = 0x9908b0df;   /* constant vector a */\n\tthis.UPPER_MASK = 0x80000000; /* most significant w-r bits */\n\tthis.LOWER_MASK = 0x7fffffff; /* least significant r bits */\n\n\tthis.mt = new Array(this.N); /* the array for the state vector */\n\tthis.mti=this.N+1; /* mti==N+1 means mt[N] is not initialized */\n\n\tif (seed.constructor == Array) {\n\t\tthis.init_by_array(seed, seed.length);\n\t}\n\telse {\n\t\tthis.init_seed(seed);\n\t}\n}\n\n/* initializes mt[N] with a seed */\n/* origin name init_genrand */\nMersenneTwister.prototype.init_seed = function(s) {\n\tthis.mt[0] = s >>> 0;\n\tfor (this.mti=1; this.mti<this.N; this.mti++) {\n\t\tvar s = this.mt[this.mti-1] ^ (this.mt[this.mti-1] >>> 30);\n\t\tthis.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253)\n\t\t+ this.mti;\n\t\t/* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n\t\t/* In the previous versions, MSBs of the seed affect   */\n\t\t/* only MSBs of the array mt[].                        */\n\t\t/* 2002/01/09 modified by Makoto Matsumoto             */\n\t\tthis.mt[this.mti] >>>= 0;\n\t\t/* for >32 bit machines */\n\t}\n}\n\n/* initialize by an array with array-length */\n/* init_key is the array for initializing keys */\n/* key_length is its length */\n/* slight change for C++, 2004/2/26 */\nMersenneTwister.prototype.init_by_array = function(init_key, key_length) {\n\tvar i, j, k;\n\tthis.init_seed(19650218);\n\ti=1; j=0;\n\tk = (this.N>key_length ? this.N : key_length);\n\tfor (; k; k--) {\n\t\tvar s = this.mt[i-1] ^ (this.mt[i-1] >>> 30)\n\t\tthis.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525)))\n\t\t+ init_key[j] + j; /* non linear */\n\t\tthis.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n\t\ti++; j++;\n\t\tif (i>=this.N) { this.mt[0] = this.mt[this.N-1]; i=1; }\n\t\tif (j>=key_length) j=0;\n\t}\n\tfor (k=this.N-1; k; k--) {\n\t\tvar s = this.mt[i-1] ^ (this.mt[i-1] >>> 30);\n\t\tthis.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941))\n\t\t- i; /* non linear */\n\t\tthis.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n\t\ti++;\n\t\tif (i>=this.N) { this.mt[0] = this.mt[this.N-1]; i=1; }\n\t}\n\n\tthis.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */\n}\n\n/* generates a random number on [0,0xffffffff]-interval */\n/* origin name genrand_int32 */\nMersenneTwister.prototype.random_int = function() {\n\tvar y;\n\tvar mag01 = new Array(0x0, this.MATRIX_A);\n\t/* mag01[x] = x * MATRIX_A  for x=0,1 */\n\n\tif (this.mti >= this.N) { /* generate N words at one time */\n\t\tvar kk;\n\n\t\tif (this.mti == this.N+1)  /* if init_seed() has not been called, */\n\t\t\tthis.init_seed(5489);  /* a default initial seed is used */\n\n\t\tfor (kk=0;kk<this.N-this.M;kk++) {\n\t\t\ty = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk+1]&this.LOWER_MASK);\n\t\t\tthis.mt[kk] = this.mt[kk+this.M] ^ (y >>> 1) ^ mag01[y & 0x1];\n\t\t}\n\t\tfor (;kk<this.N-1;kk++) {\n\t\t\ty = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk+1]&this.LOWER_MASK);\n\t\t\tthis.mt[kk] = this.mt[kk+(this.M-this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];\n\t\t}\n\t\ty = (this.mt[this.N-1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);\n\t\tthis.mt[this.N-1] = this.mt[this.M-1] ^ (y >>> 1) ^ mag01[y & 0x1];\n\n\t\tthis.mti = 0;\n\t}\n\n\ty = this.mt[this.mti++];\n\n\t/* Tempering */\n\ty ^= (y >>> 11);\n\ty ^= (y << 7) & 0x9d2c5680;\n\ty ^= (y << 15) & 0xefc60000;\n\ty ^= (y >>> 18);\n\n\treturn y >>> 0;\n}\n\n/* generates a random number on [0,0x7fffffff]-interval */\n/* origin name genrand_int31 */\nMersenneTwister.prototype.random_int31 = function() {\n\treturn (this.random_int()>>>1);\n}\n\n/* generates a random number on [0,1]-real-interval */\n/* origin name genrand_real1 */\nMersenneTwister.prototype.random_incl = function() {\n\treturn this.random_int()*(1.0/4294967295.0);\n\t/* divided by 2^32-1 */\n}\n\n/* generates a random number on [0,1)-real-interval */\nMersenneTwister.prototype.random = function() {\n\treturn this.random_int()*(1.0/4294967296.0);\n\t/* divided by 2^32 */\n}\n\n/* generates a random number on (0,1)-real-interval */\n/* origin name genrand_real3 */\nMersenneTwister.prototype.random_excl = function() {\n\treturn (this.random_int() + 0.5)*(1.0/4294967296.0);\n\t/* divided by 2^32 */\n}\n\n/* generates a random number on [0,1) with 53-bit resolution*/\n/* origin name genrand_res53 */\nMersenneTwister.prototype.random_long = function() {\n\tvar a=this.random_int()>>>5, b=this.random_int()>>>6;\n\treturn(a*67108864.0+b)*(1.0/9007199254740992.0);\n}\n\n/* These real versions are due to Isaku Wada, 2002/01/09 added */\n\nmodule.exports = MersenneTwister;\n", "var MersenneTwister = require('mersenne-twister')\n\nvar twister = new MersenneTwister(Math.random()*Number.MAX_SAFE_INTEGER)\n\nmodule.exports = getRandomValues\n\n\nfunction getRandomValues (abv) {\n  var l = abv.length\n  while (l--) {\n    abv[l] = Math.floor(randomFloat() * 256)\n  }\n  return abv\n}\n\nfunction randomFloat() {\n  return twister.random()\n}", "(function(root) {\n  var isOn = false;\n  var scrollbarSize;\n  var scrollTop;\n\n  function getScrollbarSize() {\n    if (typeof scrollbarSize !== 'undefined') return scrollbarSize;\n\n    var doc = document.documentElement;\n    var dummyScroller = document.createElement('div');\n    dummyScroller.setAttribute('style', 'width:99px;height:99px;' + 'position:absolute;top:-9999px;overflow:scroll;');\n    doc.appendChild(dummyScroller);\n    scrollbarSize = dummyScroller.offsetWidth - dummyScroller.clientWidth;\n    doc.removeChild(dummyScroller);\n    return scrollbarSize;\n  }\n\n  function hasScrollbar() {\n    return document.documentElement.scrollHeight > window.innerHeight;\n  }\n\n  function on(options) {\n    if (typeof document === 'undefined' || isOn) return;\n    var doc = document.documentElement;\n    scrollTop = window.pageYOffset;\n    if (hasScrollbar()) {\n      doc.style.width = 'calc(100% - '+ getScrollbarSize() +'px)';\n    } else {\n      doc.style.width = '100%';\n    }\n    doc.style.position = 'fixed';\n    doc.style.top = -scrollTop + 'px';\n    doc.style.overflow = 'hidden';\n    isOn = true;\n  }\n\n  function off() {\n    if (typeof document === 'undefined' || !isOn) return;\n    var doc = document.documentElement;\n    doc.style.width = '';\n    doc.style.position = '';\n    doc.style.top = '';\n    doc.style.overflow = '';\n    window.scroll(0, scrollTop);\n    isOn = false;\n  }\n\n  function toggle() {\n    if (isOn) {\n      off();\n      return;\n    }\n    on();\n  }\n\n  var noScroll = {\n    on: on,\n    off: off,\n    toggle: toggle,\n  };\n\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = noScroll;\n  } else {\n    root.noScroll = noScroll;\n  }\n})(this);\n", "var SphericalMercator = (function(){\n\n// Closures including constants and other precalculated values.\nvar cache = {},\n    EPSLN = 1.0e-10,\n    D2R = Math.PI / 180,\n    R2D = 180 / Math.PI,\n    // 900913 properties.\n    A = 6378137.0,\n    MAXEXTENT = 20037508.342789244;\n\nfunction isFloat(n){\n    return Number(n) === n && n % 1 !== 0;\n}\n\n// SphericalMercator constructor: precaches calculations\n// for fast tile lookups.\nfunction SphericalMercator(options) {\n    options = options || {};\n    this.size = options.size || 256;\n    this.expansion = (options.antimeridian === true) ? 2 : 1;\n    if (!cache[this.size]) {\n        var size = this.size;\n        var c = cache[this.size] = {};\n        c.Bc = [];\n        c.Cc = [];\n        c.zc = [];\n        c.Ac = [];\n        for (var d = 0; d < 30; d++) {\n            c.Bc.push(size / 360);\n            c.Cc.push(size / (2 * Math.PI));\n            c.zc.push(size / 2);\n            c.Ac.push(size);\n            size *= 2;\n        }\n    }\n    this.Bc = cache[this.size].Bc;\n    this.Cc = cache[this.size].Cc;\n    this.zc = cache[this.size].zc;\n    this.Ac = cache[this.size].Ac;\n};\n\n// Convert lon lat to screen pixel value\n//\n// - `ll` {Array} `[lon, lat]` array of geographic coordinates.\n// - `zoom` {Number} zoom level.\nSphericalMercator.prototype.px = function(ll, zoom) {\n  if (isFloat(zoom)) {\n    var size = this.size * Math.pow(2, zoom);\n    var d = size / 2;\n    var bc = (size / 360);\n    var cc = (size / (2 * Math.PI));\n    var ac = size;\n    var f = Math.min(Math.max(Math.sin(D2R * ll[1]), -0.9999), 0.9999);\n    var x = d + ll[0] * bc;\n    var y = d + 0.5 * Math.log((1 + f) / (1 - f)) * -cc;\n    (x > ac * this.expansion) && (x = ac * this.expansion);\n    (y > ac) && (y = ac);\n    //(x < 0) && (x = 0);\n    //(y < 0) && (y = 0);\n    return [x, y];\n  } else {\n    var d = this.zc[zoom];\n    var f = Math.min(Math.max(Math.sin(D2R * ll[1]), -0.9999), 0.9999);\n    var x = Math.round(d + ll[0] * this.Bc[zoom]);\n    var y = Math.round(d + 0.5 * Math.log((1 + f) / (1 - f)) * (-this.Cc[zoom]));\n    (x > this.Ac[zoom] * this.expansion) && (x = this.Ac[zoom] * this.expansion);\n    (y > this.Ac[zoom]) && (y = this.Ac[zoom]);\n    //(x < 0) && (x = 0);\n    //(y < 0) && (y = 0);\n    return [x, y];\n  }\n};\n\n// Convert screen pixel value to lon lat\n//\n// - `px` {Array} `[x, y]` array of geographic coordinates.\n// - `zoom` {Number} zoom level.\nSphericalMercator.prototype.ll = function(px, zoom) {\n  if (isFloat(zoom)) {\n    var size = this.size * Math.pow(2, zoom);\n    var bc = (size / 360);\n    var cc = (size / (2 * Math.PI));\n    var zc = size / 2;\n    var g = (px[1] - zc) / -cc;\n    var lon = (px[0] - zc) / bc;\n    var lat = R2D * (2 * Math.atan(Math.exp(g)) - 0.5 * Math.PI);\n    return [lon, lat];\n  } else {\n    var g = (px[1] - this.zc[zoom]) / (-this.Cc[zoom]);\n    var lon = (px[0] - this.zc[zoom]) / this.Bc[zoom];\n    var lat = R2D * (2 * Math.atan(Math.exp(g)) - 0.5 * Math.PI);\n    return [lon, lat];\n  }\n};\n\n// Convert tile xyz value to bbox of the form `[w, s, e, n]`\n//\n// - `x` {Number} x (longitude) number.\n// - `y` {Number} y (latitude) number.\n// - `zoom` {Number} zoom.\n// - `tms_style` {Boolean} whether to compute using tms-style.\n// - `srs` {String} projection for resulting bbox (WGS84|900913).\n// - `return` {Array} bbox array of values in form `[w, s, e, n]`.\nSphericalMercator.prototype.bbox = function(x, y, zoom, tms_style, srs) {\n    // Convert xyz into bbox with srs WGS84\n    if (tms_style) {\n        y = (Math.pow(2, zoom) - 1) - y;\n    }\n    // Use +y to make sure it's a number to avoid inadvertent concatenation.\n    var ll = [x * this.size, (+y + 1) * this.size]; // lower left\n    // Use +x to make sure it's a number to avoid inadvertent concatenation.\n    var ur = [(+x + 1) * this.size, y * this.size]; // upper right\n    var bbox = this.ll(ll, zoom).concat(this.ll(ur, zoom));\n\n    // If web mercator requested reproject to 900913.\n    if (srs === '900913') {\n        return this.convert(bbox, '900913');\n    } else {\n        return bbox;\n    }\n};\n\n// Convert bbox to xyx bounds\n//\n// - `bbox` {Number} bbox in the form `[w, s, e, n]`.\n// - `zoom` {Number} zoom.\n// - `tms_style` {Boolean} whether to compute using tms-style.\n// - `srs` {String} projection of input bbox (WGS84|900913).\n// - `@return` {Object} XYZ bounds containing minX, maxX, minY, maxY properties.\nSphericalMercator.prototype.xyz = function(bbox, zoom, tms_style, srs) {\n    // If web mercator provided reproject to WGS84.\n    if (srs === '900913') {\n        bbox = this.convert(bbox, 'WGS84');\n    }\n\n    var ll = [bbox[0], bbox[1]]; // lower left\n    var ur = [bbox[2], bbox[3]]; // upper right\n    var px_ll = this.px(ll, zoom);\n    var px_ur = this.px(ur, zoom);\n    // Y = 0 for XYZ is the top hence minY uses px_ur[1].\n    var x = [ Math.floor(px_ll[0] / this.size), Math.floor((px_ur[0] - 1) / this.size) ];\n    var y = [ Math.floor(px_ur[1] / this.size), Math.floor((px_ll[1] - 1) / this.size) ];\n    var bounds = {\n        minX: Math.min.apply(Math, x) < 0 ? 0 : Math.min.apply(Math, x),\n        minY: Math.min.apply(Math, y) < 0 ? 0 : Math.min.apply(Math, y),\n        maxX: Math.max.apply(Math, x),\n        maxY: Math.max.apply(Math, y)\n    };\n    if (tms_style) {\n        var tms = {\n            minY: (Math.pow(2, zoom) - 1) - bounds.maxY,\n            maxY: (Math.pow(2, zoom) - 1) - bounds.minY\n        };\n        bounds.minY = tms.minY;\n        bounds.maxY = tms.maxY;\n    }\n    return bounds;\n};\n\n// Convert projection of given bbox.\n//\n// - `bbox` {Number} bbox in the form `[w, s, e, n]`.\n// - `to` {String} projection of output bbox (WGS84|900913). Input bbox\n//   assumed to be the \"other\" projection.\n// - `@return` {Object} bbox with reprojected coordinates.\nSphericalMercator.prototype.convert = function(bbox, to) {\n    if (to === '900913') {\n        return this.forward(bbox.slice(0, 2)).concat(this.forward(bbox.slice(2,4)));\n    } else {\n        return this.inverse(bbox.slice(0, 2)).concat(this.inverse(bbox.slice(2,4)));\n    }\n};\n\n// Convert lon/lat values to 900913 x/y.\nSphericalMercator.prototype.forward = function(ll) {\n    var xy = [\n        A * ll[0] * D2R,\n        A * Math.log(Math.tan((Math.PI*0.25) + (0.5 * ll[1] * D2R)))\n    ];\n    // if xy value is beyond maxextent (e.g. poles), return maxextent.\n    (xy[0] > MAXEXTENT) && (xy[0] = MAXEXTENT);\n    (xy[0] < -MAXEXTENT) && (xy[0] = -MAXEXTENT);\n    (xy[1] > MAXEXTENT) && (xy[1] = MAXEXTENT);\n    (xy[1] < -MAXEXTENT) && (xy[1] = -MAXEXTENT);\n    return xy;\n};\n\n// Convert 900913 x/y values to lon/lat.\nSphericalMercator.prototype.inverse = function(xy) {\n    return [\n        (xy[0] * R2D / A),\n        ((Math.PI*0.5) - 2.0 * Math.atan(Math.exp(-xy[1] / A))) * R2D\n    ];\n};\n\nreturn SphericalMercator;\n\n})();\n\nif (typeof module !== 'undefined' && typeof exports !== 'undefined') {\n    module.exports = exports = SphericalMercator;\n}\n", "/* eslint-disable @typescript-eslint/triple-slash-reference */\n/* eslint-disable spaced-comment */\n\n/// <reference path=\"./types/custom_elements.d.ts\" />\n/// <reference path=\"./types/typehead.d.ts\" />\n\nimport './components/MapboxSearchListbox';\nimport './components/MapboxAddressConfirmationFeature';\nimport './components/MapboxAddressConfirmationNoFeature';\n\nexport {\n  MapboxAddressConfirmation,\n  AddressConfirmOptions,\n  ConfirmationMinimapOptions\n} from './components/MapboxAddressConfirmation';\n\nexport { MapboxAddressAutofill } from './components/MapboxAddressAutofill';\nexport { MapboxSearchBox } from './components/MapboxSearchBox';\n\nexport { MapboxAddressMinimap } from './components/MapboxAddressMinimap';\n\nexport { MapboxHTMLEvent } from './MapboxHTMLEvent';\nexport { Theme } from './theme';\n\nexport { autofill } from './autofill';\nexport { confirmAddress } from './confirmAddress';\n\nexport { MapStyleMode, Anchor } from './utils/minimap';\nexport { AddressConfirmShowResult } from './utils/confirmation';\nexport { getFormAutofillValues, getAutofillSearchText } from './utils/autofill';\n\nexport { config } from './config';\n", "export default function getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== '[object Window]') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}", "import getWindow from \"./getWindow.js\";\n\nfunction isElement(node) {\n  var OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\nfunction isHTMLElement(node) {\n  var OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  var OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nexport { isElement, isHTMLElement, isShadowRoot };", "export var max = Math.max;\nexport var min = Math.min;\nexport var round = Math.round;", "import { isHTMLElement } from \"./instanceOf.js\";\nimport { round } from \"../utils/math.js\";\nexport default function getBoundingClientRect(element, includeScale) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  var rect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1;\n\n  if (isHTMLElement(element) && includeScale) {\n    var offsetHeight = element.offsetHeight;\n    var offsetWidth = element.offsetWidth; // Do not attempt to divide by 0, otherwise we get `Infinity` as scale\n    // Fallback to 1 in case both values are `0`\n\n    if (offsetWidth > 0) {\n      scaleX = round(rect.width) / offsetWidth || 1;\n    }\n\n    if (offsetHeight > 0) {\n      scaleY = round(rect.height) / offsetHeight || 1;\n    }\n  }\n\n  return {\n    width: rect.width / scaleX,\n    height: rect.height / scaleY,\n    top: rect.top / scaleY,\n    right: rect.right / scaleX,\n    bottom: rect.bottom / scaleY,\n    left: rect.left / scaleX,\n    x: rect.left / scaleX,\n    y: rect.top / scaleY\n  };\n}", "import getWindow from \"./getWindow.js\";\nexport default function getWindowScroll(node) {\n  var win = getWindow(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}", "export default function getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}", "import getWindowScroll from \"./getWindowScroll.js\";\nimport getWindow from \"./getWindow.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getHTMLElementScroll from \"./getHTMLElementScroll.js\";\nexport default function getNodeScroll(node) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}", "export default function getNodeName(element) {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}", "import { isElement } from \"./instanceOf.js\";\nexport default function getDocumentElement(element) {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\n  element.document) || window.document).documentElement;\n}", "import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nexport default function getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}", "import getWindow from \"./getWindow.js\";\nexport default function getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}", "import getComputedStyle from \"./getComputedStyle.js\";\nexport default function isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = getComputedStyle(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}", "import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getNodeScroll from \"./getNodeScroll.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport { round } from \"../utils/math.js\";\n\nfunction isElementScaled(element) {\n  var rect = element.getBoundingClientRect();\n  var scaleX = round(rect.width) / element.offsetWidth || 1;\n  var scaleY = round(rect.height) / element.offsetHeight || 1;\n  return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\n\nexport default function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}", "import getBoundingClientRect from \"./getBoundingClientRect.js\"; // Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\n\nexport default function getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}", "import getNodeName from \"./getNodeName.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport { isShadowRoot } from \"./instanceOf.js\";\nexport default function getParentNode(element) {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ( // DOM Element detected\n    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}", "import getParentNode from \"./getParentNode.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nexport default function getScrollParent(node) {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}", "import getScrollParent from \"./getScrollParent.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getWindow from \"./getWindow.js\";\nimport isScrollParent from \"./isScrollParent.js\";\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/\n\nexport default function listScrollParents(element, list) {\n  var _element$ownerDocumen;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = getScrollParent(element);\n  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n  var win = getWindow(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents(getParentNode(target)));\n}", "import getNodeName from \"./getNodeName.js\";\nexport default function isTableElement(element) {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}", "import getWindow from \"./getWindow.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport isTableElement from \"./isTableElement.js\";\nimport getParentNode from \"./getParentNode.js\";\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;\n  var isIE = navigator.userAgent.indexOf('Trident') !== -1;\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = getComputedStyle(element);\n\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  var currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nexport default function getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}", "export var top = 'top';\nexport var bottom = 'bottom';\nexport var right = 'right';\nexport var left = 'left';\nexport var auto = 'auto';\nexport var basePlacements = [top, bottom, right, left];\nexport var start = 'start';\nexport var end = 'end';\nexport var clippingParents = 'clippingParents';\nexport var viewport = 'viewport';\nexport var popper = 'popper';\nexport var reference = 'reference';\nexport var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nexport var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nexport var beforeRead = 'beforeRead';\nexport var read = 'read';\nexport var afterRead = 'afterRead'; // pure-logic modifiers\n\nexport var beforeMain = 'beforeMain';\nexport var main = 'main';\nexport var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nexport var beforeWrite = 'beforeWrite';\nexport var write = 'write';\nexport var afterWrite = 'afterWrite';\nexport var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];", "import { modifierPhases } from \"../enums.js\"; // source: https://stackoverflow.com/questions/49875255\n\nfunction order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nexport default function orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = order(modifiers); // order based on phase\n\n  return modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}", "export default function debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}", "import { auto } from \"../enums.js\";\nexport default function getBasePlacement(placement) {\n  return placement.split('-')[0];\n}", "export default function mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign({}, existing, current, {\n      options: Object.assign({}, existing.options, current.options),\n      data: Object.assign({}, existing.data, current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}", "export default function getVariation(placement) {\n  return placement.split('-')[1];\n}", "export default function getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}", "import getBasePlacement from \"./getBasePlacement.js\";\nimport getVariation from \"./getVariation.js\";\nimport getMainAxisFromPlacement from \"./getMainAxisFromPlacement.js\";\nimport { top, right, bottom, left, start, end } from \"../enums.js\";\nexport default function computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n\n      case end:\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n\n      default:\n    }\n  }\n\n  return offsets;\n}", "import getCompositeRect from \"./dom-utils/getCompositeRect.js\";\nimport getLayoutRect from \"./dom-utils/getLayoutRect.js\";\nimport listScrollParents from \"./dom-utils/listScrollParents.js\";\nimport getOffsetParent from \"./dom-utils/getOffsetParent.js\";\nimport getComputedStyle from \"./dom-utils/getComputedStyle.js\";\nimport orderModifiers from \"./utils/orderModifiers.js\";\nimport debounce from \"./utils/debounce.js\";\nimport validateModifiers from \"./utils/validateModifiers.js\";\nimport uniqueBy from \"./utils/uniqueBy.js\";\nimport getBasePlacement from \"./utils/getBasePlacement.js\";\nimport mergeByName from \"./utils/mergeByName.js\";\nimport detectOverflow from \"./utils/detectOverflow.js\";\nimport { isElement } from \"./dom-utils/instanceOf.js\";\nimport { auto } from \"./enums.js\";\nvar INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';\nvar INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';\nvar DEFAULT_OPTIONS = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === 'function');\n  });\n}\n\nexport function popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(setOptionsAction) {\n        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, state.options, options);\n        state.scrollParents = {\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n          popper: listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        }); // Validate the provided modifiers so that the consumer will get warned\n        // if one of the modifiers is invalid for any reason\n\n        if (process.env.NODE_ENV !== \"production\") {\n          var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function (_ref) {\n            var name = _ref.name;\n            return name;\n          });\n          validateModifiers(modifiers);\n\n          if (getBasePlacement(state.options.placement) === auto) {\n            var flipModifier = state.orderedModifiers.find(function (_ref2) {\n              var name = _ref2.name;\n              return name === 'flip';\n            });\n\n            if (!flipModifier) {\n              console.error(['Popper: \"auto\" placements require the \"flip\" modifier be', 'present and enabled to work.'].join(' '));\n            }\n          }\n\n          var _getComputedStyle = getComputedStyle(popper),\n              marginTop = _getComputedStyle.marginTop,\n              marginRight = _getComputedStyle.marginRight,\n              marginBottom = _getComputedStyle.marginBottom,\n              marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can\n          // cause bugs with positioning, so we'll warn the consumer\n\n\n          if ([marginTop, marginRight, marginBottom, marginLeft].some(function (margin) {\n            return parseFloat(margin);\n          })) {\n            console.warn(['Popper: CSS \"margin\" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '));\n          }\n        }\n\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update \u2013 it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(INVALID_ELEMENT_ERROR);\n          }\n\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\n          popper: getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n        var __debug_loops__ = 0;\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (process.env.NODE_ENV !== \"production\") {\n            __debug_loops__ += 1;\n\n            if (__debug_loops__ > 100) {\n              console.error(INFINITE_LOOP_ERROR);\n              break;\n            }\n          }\n\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === 'function') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update \u2013 it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(INVALID_ELEMENT_ERROR);\n      }\n\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref3) {\n        var name = _ref3.name,\n            _ref3$options = _ref3.options,\n            options = _ref3$options === void 0 ? {} : _ref3$options,\n            effect = _ref3.effect;\n\n        if (typeof effect === 'function') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\nexport var createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules\n\nexport { detectOverflow };", "import getWindow from \"../dom-utils/getWindow.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar passive = {\n  passive: true\n};\n\nfunction effect(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: function fn() {},\n  effect: effect,\n  data: {}\n};", "import computeOffsets from \"../utils/computeOffsets.js\";\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n};", "import { top, left, right, bottom, end } from \"../enums.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getWindow from \"../dom-utils/getWindow.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getComputedStyle from \"../dom-utils/getComputedStyle.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport { round } from \"../utils/math.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsetsByDPR(_ref) {\n  var x = _ref.x,\n      y = _ref.y;\n  var win = window;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: round(x * dpr) / dpr || 0,\n    y: round(y * dpr) / dpr || 0\n  };\n}\n\nexport function mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      variation = _ref2.variation,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive,\n      roundOffsets = _ref2.roundOffsets,\n      isFixed = _ref2.isFixed;\n  var _offsets$x = offsets.x,\n      x = _offsets$x === void 0 ? 0 : _offsets$x,\n      _offsets$y = offsets.y,\n      y = _offsets$y === void 0 ? 0 : _offsets$y;\n\n  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref3.x;\n  y = _ref3.y;\n  var hasX = offsets.hasOwnProperty('x');\n  var hasY = offsets.hasOwnProperty('y');\n  var sideX = left;\n  var sideY = top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = getOffsetParent(popper);\n    var heightProp = 'clientHeight';\n    var widthProp = 'clientWidth';\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n\n      if (getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n\n    offsetParent = offsetParent;\n\n    if (placement === top || (placement === left || placement === right) && variation === end) {\n      sideY = bottom;\n      var offsetY = isFixed && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]\n      offsetParent[heightProp];\n      y -= offsetY - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === left || (placement === top || placement === bottom) && variation === end) {\n      sideX = right;\n      var offsetX = isFixed && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]\n      offsetParent[widthProp];\n      x -= offsetX - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref4.x;\n  y = _ref4.y;\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\n\nfunction computeStyles(_ref5) {\n  var state = _ref5.state,\n      options = _ref5.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n      _options$roundOffsets = options.roundOffsets,\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var transitionProperty = getComputedStyle(state.elements.popper).transitionProperty || '';\n\n    if (adaptive && ['transform', 'top', 'right', 'bottom', 'left'].some(function (property) {\n      return transitionProperty.indexOf(property) >= 0;\n    })) {\n      console.warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: \"transform\", \"top\", \"right\", \"bottom\", \"left\".', '\\n\\n', 'Disable the \"computeStyles\" modifier\\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\\n\\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '));\n    }\n  }\n\n  var commonStyles = {\n    placement: getBasePlacement(state.placement),\n    variation: getVariation(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration,\n    isFixed: state.options.strategy === 'fixed'\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: 'absolute',\n      adaptive: false,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-placement': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n};", "import getNodeName from \"../dom-utils/getNodeName.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    } // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0'\n    },\n    arrow: {\n      position: 'absolute'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = '';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect: effect,\n  requires: ['computeStyles']\n};", "import { popperGenerator, detectOverflow } from \"./createPopper.js\";\nimport eventListeners from \"./modifiers/eventListeners.js\";\nimport popperOffsets from \"./modifiers/popperOffsets.js\";\nimport computeStyles from \"./modifiers/computeStyles.js\";\nimport applyStyles from \"./modifiers/applyStyles.js\";\nvar defaultModifiers = [eventListeners, popperOffsets, computeStyles, applyStyles];\nvar createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper, popperGenerator, defaultModifiers, detectOverflow };", "/**\n * Used below in {@link createCSSStyleSheet}.\n */\nconst subdoc = document.implementation.createHTMLDocument();\n\nexport function bindElements<\n  Binding extends { [key: string | symbol | number]: Element }\n>(root: Element, elements: { [key in keyof Binding]: string }): Binding {\n  const binding: Binding = {} as Binding;\n  for (const [key, selector] of Object.entries(elements)) {\n    binding[key as keyof Binding] = root.querySelector(selector);\n  }\n\n  return binding;\n}\n\n/**\n * Gets all child elements for a given node.\n */\nexport function getChildElements(node: Node): HTMLElement[] {\n  return Array.from(node.childNodes || []).filter(\n    (el) => el.nodeType === Node.ELEMENT_NODE\n  ) as HTMLElement[];\n}\n\n/**\n * Creates an HTML element from a string and returns it.\n */\nexport function createElementFromString<T extends Element>(\n  innerHTML: string\n): T {\n  const template = document.createElement('template');\n  template.innerHTML = innerHTML;\n  return template.content.firstElementChild as T;\n}\n\n/**\n * Returns a {@link CSSStyleSheet} that can be used to traverse a\n * CSS file.\n *\n * NOTE: We need to use a sub-document to avoid the styles being\n * applied to the current page.\n */\nexport function createCSSStyleSheet(text: string): CSSStyleSheet {\n  const style = subdoc.createElement('style');\n  style.textContent = text;\n  subdoc.head.appendChild(style);\n  return style.sheet;\n}\n\n/**\n * Returns if the property has \"display: none\" set on itself.\n *\n * Reference: https://stackoverflow.com/questions/19669786/check-if-element-is-visible-in-dom\n */\nexport function isVisible(element: HTMLElement): boolean {\n  const style = window.getComputedStyle(element);\n  return style.display !== 'none';\n}\n\nexport type InputFormElement =\n  | HTMLInputElement\n  | HTMLSelectElement\n  | HTMLTextAreaElement;\n\ntype ReactInputEvent = Event & {\n  simulated: boolean;\n};\n\ntype ReactInputWrapperState = InputFormElement & {\n  _valueTracker?: {\n    getValue: () => string;\n    setValue: (value: string) => void;\n    stopTracking: () => void;\n  };\n};\n\n/**\n * Sets the value of the given input element and triggers an `input` event.\n *\n * This should also work for React, which overrides the `value` setter with\n * a custom tracker. Due to this, a naive `input.value = value` will not\n * work correctly in React.\n *\n * Reference: https://github.com/facebook/react/blob/c88fb49d37fd01024e0a254a37b7810d107bdd1d/packages/react-dom/src/client/inputValueTracking.js#L53\n * Reference: https://github.com/facebook/react/issues/11488\n */\nexport function setValue(\n  input: InputFormElement | undefined,\n  value: string\n): void {\n  if (!input) {\n    return;\n  }\n\n  const set = Object.getOwnPropertyDescriptor(\n    input.constructor.prototype,\n    'value'\n  ).set;\n  set.call(input, value);\n\n  // Make this work in React 16+.\n  const wrapperState = input as ReactInputWrapperState;\n  if (wrapperState._valueTracker) {\n    wrapperState._valueTracker.setValue('');\n  }\n\n  const onInputEvent = new Event('input', {\n    bubbles: true\n  }) as ReactInputEvent;\n  onInputEvent.simulated = true;\n\n  input.dispatchEvent(onInputEvent);\n\n  const onChangeEvent = new Event('change', {\n    bubbles: true\n  }) as ReactInputEvent;\n  onChangeEvent.simulated = true;\n\n  input.dispatchEvent(onChangeEvent);\n}\n\n/**\n * Pre-calculate the size of an element, handling cases where the element is not yet rendered\n * @param element - The element to measure\n * @param deep - If true, include node's descendents in calculation. Defaults to false.\n * @returns Object with height and width properties as numbers\n */\nexport function getElementSize(\n  element: HTMLElement,\n  deep = false\n): {\n  height: number;\n  width: number;\n} {\n  let width: number;\n  let height: number;\n  const elementRect = element.getBoundingClientRect();\n  if (\n    element.style.display === 'none' ||\n    (elementRect.height === 0 && elementRect.width === 0)\n  ) {\n    const clone = element.cloneNode(deep) as HTMLElement;\n    element.parentElement.appendChild(clone);\n    clone.style.setProperty('display', 'block', 'important');\n    const cloneRect = clone.getBoundingClientRect();\n    width = cloneRect.width;\n    height = cloneRect.height;\n    clone.style.setProperty('display', 'none');\n    clone.remove();\n  } else {\n    width = elementRect.width;\n    height = elementRect.height;\n  }\n  return {\n    height: Math.floor(height),\n    width: Math.floor(width)\n  };\n}\n", "import { createCSSStyleSheet } from './dom';\n\n/**\n * W3C spec:\n *\n * In CSS, identifiers (including element names, classes, and IDs in selectors)\n * can contain only the characters [a-z0-9] and ISO 10646 characters U+00A0 and\n * higher, plus the hyphen (-) and the underscore (_); they cannot start with a\n * digit, or a hyphen followed by a digit. Identifiers can also contain escaped\n * characters and any ISO 10646 character as a numeric code (see next item).\n *\n * For instance, the identifier \"B&W?\" may be written as \"B&W?\" or \"B\\26 W\\3F\".\n *\n * Reference: https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors\n */\nconst IDENTIFIER_REGEX = new RegExp('[_a-zA-Z]+[_a-zA-Z0-9-]*', 'g');\nconst CLASS_NAME_REGEX = new RegExp(`\\\\.${IDENTIFIER_REGEX.source}`, 'g');\n\n/**\n * Of the format @IDENFIFIER (RULE) { }\n *\n * Only catches the media and supports identifiers.\n *\n * Reference: https://developer.mozilla.org/en-US/docs/Web/CSS/At-rule\n */\nconst CONDITION_RULE_REGEX = new RegExp(\n  `^\\\\s*(@(?:media|supports)[^{]*){(.*)}\\\\s*$`\n);\n\nexport function transformClassSelectors(\n  css: string,\n  transform: (className: string) => string\n): string {\n  return css.replace(CLASS_NAME_REGEX, (className: string) => {\n    return '.' + transform(className.slice(1));\n  });\n}\n\n/**\n * Returns a version of the CSS string with each class name transformed\n * by {@link transform}.\n *\n * The main reason why this function exists is to allow for CSS class\n * encapsulation without Shadow DOM.\n */\nexport function transformCSSClassRules(\n  text: string,\n  transform: (className: string) => string\n): string {\n  // Create a CSSStyleSheet so we can traverse the CSS rules,\n  // without having to parse ourselves.\n  const sheet = createCSSStyleSheet(text);\n  const rules = sheet.cssRules;\n\n  /**\n   * No guarantees of in-place mutation.\n   */\n  function transformCSSRule(rule: CSSRule): string {\n    /**\n     * [CSSStyleRule](https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleRule)\n     * represents a single CSS declaration block, like `h1 { color: red; }`.\n     *\n     * Make sure to transform the \"selector\", which in the example above is \"h1\".\n     */\n    if (rule instanceof CSSStyleRule) {\n      const selector = transformClassSelectors(rule.selectorText, transform);\n      return `${selector} { ${rule.style.cssText} }`;\n    }\n\n    /**\n     * Condition-rules are like `@media print { ... }`, or `@supports (display: grid) { ... }`.\n     *\n     * This should be covered by [CSSConditionRule](https://developer.mozilla.org/en-US/docs/Web/API/CSSConditionRule)\n     * however browser support for CSSConditionRule is not great: namely, Safari\n     * versions earlier than 14.1 (early 2021) do not support it.\n     *\n     * Because of this, we need to traverse the text of the at-rule with\n     * a regular expression.\n     *\n     * Useful helper: https://regexr.com/\n     */\n    const atRule = CONDITION_RULE_REGEX.exec(rule.cssText.split('\\n').join(''));\n    if (atRule && atRule.length > 2) {\n      const rule = atRule[1];\n      const contents = atRule[2];\n\n      // Recursively transform the contents of the at-rule.\n      return `${rule} { ${transformCSSClassRules(contents, transform)} }`;\n    }\n\n    /**\n     * Otherwise, just pass through fonts, animations, etc...\n     */\n    return rule.cssText;\n  }\n\n  // Construct a new CSS string by traversing the rules and serializing\n  // them to a string.\n  let style = '';\n  for (const rule of Array.from(rules)) {\n    style += transformCSSRule(rule) + '\\n\\n';\n  }\n\n  return style.trim();\n}\n\n/**\n * Manipulates {@param content} in place, with each class attribute transformed\n * by {@link transform}.\n *\n * The main reason why this function exists is to allow for CSS class\n * encapsulation without Shadow DOM.\n */\nexport function transformDOMClassAttributes(\n  content: HTMLElement,\n  transform: (className: string) => string\n): HTMLElement {\n  // Perform the transformation on each class attribute in-place,\n  // on the clone.\n  const elements = Array.from(content.querySelectorAll('[class]'));\n  // Add the current node!\n  elements.push(content);\n\n  for (const element of elements) {\n    const { classList } = element;\n    for (const className of Array.from(classList)) {\n      classList.remove(className);\n      classList.add(transform(className));\n    }\n  }\n\n  // Return the element.\n  return content;\n}\n", "export const SEARCH_URL = `https://api.mapbox.com/search/v1`;\n\nexport const ENDPOINT_SUGGEST = 'suggest';\nexport const ENDPOINT_RETRIEVE = 'retrieve';\nexport const ENDPOINT_FORWARD = 'forward';\nexport const ENDPOINT_REVERSE = 'reverse';\n\nexport const SUGGEST_URL = `${SEARCH_URL}/${ENDPOINT_SUGGEST}`;\nexport const RETRIEVE_URL = `${SEARCH_URL}/${ENDPOINT_RETRIEVE}`;\n\nexport const FORWARD_URL = `${SEARCH_URL}/${ENDPOINT_FORWARD}`;\nexport const PERMANENT_FORWARD_URL = `${SEARCH_URL}/permanent/${ENDPOINT_FORWARD}`;\n\nexport const REVERSE_URL = `${SEARCH_URL}/${ENDPOINT_REVERSE}`;\nexport const PERMANENT_REVERSE_URL = `${SEARCH_URL}/permanent/${ENDPOINT_REVERSE}`;\n", "/**\n * A `LngLat` object represents a given longitude and latitude coordinate, measured in degrees.\n * These coordinates use longitude, latitude coordinate order (as opposed to latitude, longitude)\n * to match the [GeoJSON specification](https://datatracker.ietf.org/doc/html/rfc7946#section-4),\n * which is equivalent to the OGC:CRS84 coordinate reference system.\n *\n * Note that any method that accepts a `LngLat` object as an argument or option\n * can also accept an `Array` of two numbers and will perform an implicit conversion.\n * This flexible type is documented as {@link LngLatLike}.\n *\n * @class LngLat\n * @param lng - Longitude, measured in degrees.\n * @param lat - Latitude, measured in degrees.\n * @example\n * ```typescript\n * const ll = new LngLat(-123.9749, 40.7736);\n * console.log(ll.lng); // = -123.9749\n * ```\n */\nexport class LngLat {\n  /**\n   * @name lng\n   * @instance\n   * @memberof LngLat\n   */\n  readonly lng: number;\n  /**\n   * @name lat\n   * @instance\n   * @memberof LngLat\n   */\n  readonly lat: number;\n\n  constructor(lng: number, lat: number) {\n    if (isNaN(lng) || isNaN(lat)) {\n      throw new Error(`Invalid LngLat object: (${lng}, ${lat})`);\n    }\n    this.lng = +lng;\n    this.lat = +lat;\n    if (this.lat > 90 || this.lat < -90) {\n      throw new Error(\n        'Invalid LngLat latitude value: must be between -90 and 90'\n      );\n    }\n    if (this.lng > 180 || this.lng < -180) {\n      throw new Error(\n        'Invalid LngLat longitude value: must be between -180 and 180'\n      );\n    }\n  }\n\n  /**\n   * Returns the coordinates represented as an array of two numbers.\n   *\n   * @returns The coordinates represeted as an array of longitude and latitude.\n   * @example\n   * ```typescript\n   * const ll = new LngLat(-73.9749, 40.7736);\n   * ll.toArray(); // = [-73.9749, 40.7736]\n   * ```\n   */\n  toArray(): [number, number] {\n    return [this.lng, this.lat];\n  }\n\n  /**\n   * Returns the coordinates represent as a string.\n   *\n   * @returns The coordinates represented as a string of the format `'LngLat(lng, lat)'`.\n   * @example\n   * ```typescript\n   * const ll = new LngLat(-73.9749, 40.7736);\n   * ll.toString(); // = \"LngLat(-73.9749, 40.7736)\"\n   * ```\n   */\n  toString(): string {\n    return `LngLat(${this.lng}, ${this.lat})`;\n  }\n\n  /**\n   * Converts an array of two numbers or an object with `lng` and `lat` or `lon` and `lat` properties\n   * to a `LngLat` object.\n   *\n   * If a `LngLat` object is passed in, the function returns a copy.\n   *\n   * @param input - An array of two numbers or object to convert, or a `LngLat` object to return.\n   * @returns A new `LngLat` object, if a conversion occurred, or the original `LngLat` object.\n   * @example\n   * ```typescript\n   * const arr = [-73.9749, 40.7736];\n   * const ll = LngLat.convert(arr);\n   * console.log(ll);   // = LngLat {lng: -73.9749, lat: 40.7736}\n   * ```\n   */\n  static convert(\n    input:\n      | LngLat\n      | { lng: number; lat: number }\n      | { lon: number; lat: number }\n      | [number, number]\n  ): LngLat {\n    // Make a copy if already an LngLat.\n    if (input instanceof LngLat) {\n      return new LngLat(input.lng, input.lat);\n    }\n\n    if (Array.isArray(input) && input.length === 2) {\n      return new LngLat(Number(input[0]), Number(input[1]));\n    }\n\n    if (\n      !Array.isArray(input) &&\n      typeof input == 'object' &&\n      input !== null &&\n      ('lng' in input || 'lon' in input) &&\n      'lat' in input\n    ) {\n      return new LngLat(\n        Number('lng' in input ? input.lng : input.lon),\n        Number(input.lat)\n      );\n    }\n\n    throw new Error(\n      '`LngLatLike` argument must be specified as an object {lng: <lng>, lat: <lat>}, an object {lon: <lng>, lat: <lat>}, or an array of [<lng>, <lat>]'\n    );\n  }\n}\n\n/**\n * A {@link LngLat} object, an array of two numbers representing longitude and latitude,\n * or an object with `lng` and `lat` or `lon` and `lat` properties.\n *\n * @typedef LngLatLike\n * @type {LngLat | [number, number] | { lng: number, lat: number } | { lon: number, lat: number }}\n * @example\n * ```typescript\n * const v1 = new LngLat(-122.420679, 37.772537);\n * const v2 = [-122.420679, 37.772537];\n * const v3 = {lon: -122.420679, lat: 37.772537};\n * ```\n */\nexport type LngLatLike =\n  | LngLat\n  | { lng: number; lat: number }\n  | { lon: number; lat: number }\n  | [number, number];\n", "import { LngLat, LngLatLike } from './LngLat';\n\n/**\n * A `LngLatBounds` object represents a geographical bounding box,\n * defined by its southwest and northeast points in longitude and latitude.\n *\n * Note that any method that accepts a `LngLatBounds` object as an argument or option\n * can also accept an `Array` of two {@link LngLatLike} constructs and will perform an implicit conversion.\n * This flexible type is documented as {@link LngLatBoundsLike}.\n *\n * @class LngLatBounds\n */\nexport class LngLatBounds {\n  private _ne: LngLat;\n  private _sw: LngLat;\n\n  /**\n   * @param sw - The southwest corner of the bounding box.\n   * @param ne - The northeast corner of the bounding box.\n   * @example\n   * ```typescript\n   * const sw = new LngLat(-73.9876, 40.7661);\n   * const ne = new LngLat(-73.9397, 40.8002);\n   * const llb = new LngLatBounds(sw, ne);\n   * ```\n   */\n  constructor(sw: LngLatLike, ne: LngLatLike) {\n    this._sw = LngLat.convert(sw);\n    this._ne = LngLat.convert(ne);\n  }\n\n  /**\n   * Returns the southwest corner of the bounding box.\n   *\n   * @returns The southwest corner of the bounding box.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.getSouthWest(); // LngLat {lng: -73.9876, lat: 40.7661}\n   * ```\n   */\n  getSouthWest(): LngLat {\n    return this._sw;\n  }\n\n  /**\n   * Returns the northeast corner of the bounding box.\n   *\n   * @returns The northeast corner of the bounding box.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.getNorthEast(); // LngLat {lng: -73.9397, lat: 40.8002}\n   * ```\n   */\n  getNorthEast(): LngLat {\n    return this._ne;\n  }\n\n  /**\n   * Returns the northwest corner of the bounding box. This is commonly used\n   * as the 'min' point in the bounding box.\n   *\n   * @returns The northwest corner of the bounding box.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.getNorthWest(); // LngLat {lng: -73.9876, lat: 40.8002}\n   * ```\n   */\n  getNorthWest(): LngLat {\n    return new LngLat(this.getWest(), this.getNorth());\n  }\n\n  /**\n   * Returns the southeast corner of the bounding box. This is commonly used\n   * as the 'max' point in the bounding box.\n   *\n   * @returns The southeast corner of the bounding box.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.getSouthEast(); // LngLat {lng: -73.9397, lat: 40.7661}\n   * ```\n   */\n  getSouthEast(): LngLat {\n    return new LngLat(this.getEast(), this.getSouth());\n  }\n\n  /**\n   * Returns the west edge of the bounding box.\n   *\n   * @returns The west edge of the bounding box.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.getWest(); // -73.9876\n   * ```\n   */\n  getWest(): number {\n    return this._sw.lng;\n  }\n\n  /**\n   * Returns the south edge of the bounding box.\n   *\n   * @returns The south edge of the bounding box.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.getSouth(); // 40.7661\n   * ```\n   */\n  getSouth(): number {\n    return this._sw.lat;\n  }\n\n  /**\n   * Returns the east edge of the bounding box.\n   *\n   * @returns The east edge of the bounding box.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.getEast(); // -73.9397\n   * ```\n   */\n  getEast(): number {\n    return this._ne.lng;\n  }\n\n  /**\n   * Returns the north edge of the bounding box.\n   *\n   * @returns The north edge of the bounding box.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.getNorth(); // 40.8002\n   * ```\n   */\n  getNorth(): number {\n    return this._ne.lat;\n  }\n\n  /**\n   * Returns the bounding box represented as an array.\n   *\n   * @returns The bounding box represented as an array, consisting of the\n   *   southwest and northeast coordinates of the bounding represented as arrays of numbers.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.toArray(); // = [[-73.9876, 40.7661], [-73.9397, 40.8002]]\n   * ```\n   */\n  toArray(): [[number, number], [number, number]] {\n    return [this._sw.toArray(), this._ne.toArray()];\n  }\n\n  /**\n   * Returns the bounding box represented as a flattened array.\n   *\n   * @returns The bounding box represented as an array of numbers in [west, south, east, north] order.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.toFlatArray(); // = [-73.9876, 40.7661, -73.9397, 40.8002]\n   * ```\n   */\n  toFlatArray(): [number, number, number, number] {\n    return [this._sw.lng, this._sw.lat, this._ne.lng, this._ne.lat];\n  }\n\n  /**\n   * Return the bounding box represented as a string.\n   *\n   * @returns The bounding box represents as a string of the format\n   *   `'LngLatBounds(LngLat(lng, lat), LngLat(lng, lat))'`.\n   * @example\n   * ```typescript\n   * const llb = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n   * llb.toString(); // = \"LngLatBounds(LngLat(-73.9876, 40.7661), LngLat(-73.9397, 40.8002))\"\n   * ```\n   */\n  toString(): string {\n    return `LngLatBounds(${this._sw.toString()}, ${this._ne.toString()})`;\n  }\n\n  /**\n   * Converts an array to a `LngLatBounds` object.\n   *\n   * If a `LngLatBounds` object is passed in, the function returns a copy.\n   *\n   * Internally, the function calls `LngLat#convert` to convert arrays to `LngLat` values.\n   *\n   * @param input - An array of two coordinates to convert, or a `LngLatBounds` object to return.\n   * @returns A new `LngLatBounds` object, if a conversion occurred, or the original `LngLatBounds` object.\n   * @example\n   * ```typescript\n   * const arr = [[-73.9876, 40.7661], [-73.9397, 40.8002]];\n   * const llb = LngLatBounds.convert(arr);\n   * console.log(llb);   // = LngLatBounds {_sw: LngLat {lng: -73.9876, lat: 40.7661}, _ne: LngLat {lng: -73.9397, lat: 40.8002}}\n   * ```\n   */\n  static convert(\n    input:\n      | LngLatBounds\n      | [LngLatLike, LngLatLike]\n      | [number, number, number, number]\n  ): LngLatBounds {\n    if (!input) {\n      throw new Error('Invalid LngLatBounds convert value: falsy');\n    }\n\n    // Make a copy if already an LngLatBounds.\n    if (input instanceof LngLatBounds) {\n      return new LngLatBounds(input.getSouthWest(), input.getNorthEast());\n    }\n\n    if (Array.isArray(input) && input.length === 2) {\n      return new LngLatBounds(\n        LngLat.convert(input[0]),\n        LngLat.convert(input[1])\n      );\n    }\n\n    if (Array.isArray(input) && input.length === 4) {\n      return new LngLatBounds(\n        LngLat.convert([input[0], input[1]]),\n        LngLat.convert([input[2], input[3]])\n      );\n    }\n\n    throw new Error(\n      '`LngLatBoundsLike` argument must be specified as an array [<LngLatLike>, <LngLatLike>] or an array [<west>, <south>, <east>, <north>]'\n    );\n  }\n}\n\n/**\n * A {@link LngLatBounds} object, an array of {@link LngLatLike} objects in [sw, ne] order,\n * or an array of numbers in [west, south, east, north] order.\n *\n * @typedef LngLatBoundsLike\n * @type {LngLatBounds | [LngLatLike, LngLatLike] | [number, number, number, number]}\n * @example\n * ```typescript\n * const v1 = new LngLatBounds(\n *   new LngLat(-73.9876, 40.7661),\n *   new LngLat(-73.9397, 40.8002)\n * );\n * const v2 = new LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\n * const v3 = [[-73.9876, 40.7661], [-73.9397, 40.8002]];\n * ```\n */\nexport type LngLatBoundsLike =\n  | LngLatBounds\n  | [LngLatLike, LngLatLike]\n  | [number, number, number, number];\n", "import getRandomValuesPolyfill from 'polyfill-crypto.getrandomvalues';\n\n/**\n * `getRandomValues` is supported on all browsers and Node.js 15+.\n *\n * If our target is **not** one of these platforms, use a semi-secure polyfill.\n *\n * IMPORTANT: THIS IS NOT CRYPTO-GRAPHICALLY SECURE!\n *\n * Since we're using this to generate a random UUID, essentially as an SKU,\n * we don't need to worry about the randomness of the values as much.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\n * @see https://github.com/uuidjs/uuid/issues/416\n */\nfunction getRandomValues<T extends ArrayBufferView | null>(arr: T): T {\n  if (\n    typeof globalThis.crypto === 'undefined' ||\n    typeof globalThis.crypto.getRandomValues !== 'function'\n  ) {\n    return getRandomValuesPolyfill(arr);\n  }\n\n  return globalThis.crypto.getRandomValues(arr);\n}\n\n// Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.\n\n/**\n * Converts the byte array to a UUID string\n * @param bytes - Used to convert Byte to Hex\n */\nexport function bytesToUuid(bytes: number[] | Uint8Array): string {\n  const bits = [...bytes].map((bit) => {\n    const s = bit.toString(16);\n    return bit < 0x10 ? '0' + s : s;\n  });\n  return [\n    ...bits.slice(0, 4),\n    '-',\n    ...bits.slice(4, 6),\n    '-',\n    ...bits.slice(6, 8),\n    '-',\n    ...bits.slice(8, 10),\n    '-',\n    ...bits.slice(10, 16)\n  ].join('');\n}\n\nconst UUID_RE =\n  /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n\n/**\n * Validates the UUID v4.\n * @param id - UUID value.\n */\nexport function validateUUID(id: string): boolean {\n  return UUID_RE.test(id);\n}\n\n/** Generates a RFC4122 v4 UUID (pseudo-randomly-based) */\nexport function generateUUID(): string {\n  const rnds = getRandomValues(new Uint8Array(16));\n\n  rnds[6] = (rnds[6] & 0x0f) | 0x40; // Version 4\n  rnds[8] = (rnds[8] & 0x3f) | 0x80; // Variant 10\n\n  return bytesToUuid(rnds);\n}\n", "import { generateUUID } from './utils/uuid';\n\nconst SESSION_TOKEN_EXPIRY = 60 * 60 * 1000; // 60 minutes\n\n/**\n * A `SessionToken` object is a unique identifier that groups together `suggest` / `retrieve` calls as part of the\n * [Mapbox Search API](https://docs.mapbox.com/api/search/search/#retrieve-a-suggestion).\n *\n * Session tokens are used for [billing](https://docs.mapbox.com/api/search/search/#search-api-pricing) and\n * customer-accessible analytics.\n *\n * A [UUIDv4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)) value is recommended,\n * and is generated if an `id` is not provided.\n *\n * Note that any method that accepts a `SessionToken` object as an argument or option\n * can also accept a unique `string` and will perform an implicit conversion.\n * This flexible type is documented as {@link SessionTokenLike}.\n *\n * @name SessionToken\n * @example\n * ```typescript\n * const token = new SessionToken();\n * console.log(token.id); // = I am a UUIDv4 value!\n * ```\n */\nexport class SessionToken {\n  /**\n   * The session token in string format.\n   */\n  readonly id: string;\n  /**\n   * Returns the timestamp of when the session token was initialized.\n   */\n  readonly ts: number;\n\n  constructor(id?: string, ts: number = Date.now()) {\n    this.id = id ?? generateUUID();\n    this.ts = ts;\n  }\n\n  /**\n   * Returns the session token in string format.\n   *\n   * This is the same as calling `token.id`, and is okay to be used for serialization.\n   */\n  toString(): string {\n    return this.id;\n  }\n\n  /**\n   * Converts a string to a `SessionToken` object.\n   *\n   * If a `SessionToken` object is passed in, the function returns a copy.\n   */\n  static convert(token: SessionToken | string): SessionToken {\n    return new SessionToken(\n      token instanceof SessionToken ? token.id : token.toString(),\n      token instanceof SessionToken ? token.ts : Date.now()\n    );\n  }\n\n  /**\n   * Returns `true` if the session token has expired (expired after 60 minutes).\n   */\n  isExpired(): boolean {\n    return Date.now() - this.ts > SESSION_TOKEN_EXPIRY;\n  }\n}\n\n/**\n * A {@link SessionToken} object or string representing a Mapbox Search API session token.\n *\n * It's recommended this value is a [UUIDv4](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)) value.\n *\n * @typedef SessionTokenLike\n * @type {SessionToken | string}\n * @example\n * const v1 = new SessionToken();\n * const v2 = new SessionToken('f06e7531-6373-4d5a-8614-b6f313488050');\n * const v3 = 'f06e7531-6373-4d5a-8614-b6f313488050';\n */\nexport type SessionTokenLike = string | SessionToken;\n", "export const UNKNOWN_ERROR = 'Unknown error';\n\n/**\n * Thrown from Search JS Core functions when a network request fails.\n *\n * See common errors here:\n * - [MapboxSearch](https://docs.mapbox.com/api/search/search/#search-api-errors)\n * - [MapboxAutofill](https://docs.mapbox.com/api/search/geocoding/#geocoding-api-errors)\n */\nexport class MapboxError extends Error {\n  readonly statusCode: number;\n\n  constructor(json: Record<string, unknown>, statusCode: number) {\n    super(String(json.message || json.error || UNKNOWN_ERROR));\n    this.name = 'MapboxError';\n    this.statusCode = statusCode;\n  }\n\n  /**\n   * Modified Error toString() method to include the status code.\n   */\n  toString(): string {\n    return `${this.name} (${this.statusCode}): ${this.message}`;\n  }\n}\n\n/**\n * Utility function to see if the result is \"ok\" (in 200 range).\n *\n * If not, throw a {@link MapboxError} filled out by the\n * [JSON error format](https://docs.mapbox.com/api/search/search/#search-api-errors).\n */\nexport async function handleNonOkRes(res: Response): Promise<void> {\n  if (!res.ok) {\n    const json = await res.json();\n    throw new MapboxError(json, res.status);\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n\n// GLOBALS\nlet _fetchImpl: typeof fetch = globalThis.fetch;\nlet _abortControllerImpl: typeof AbortController = globalThis.AbortController;\n\ninterface FetchImplementation {\n  fetch: typeof fetch;\n  AbortController: typeof AbortController;\n}\n\n/**\n * Polyfills {@link fetch} implementation used in Search JS Core.\n *\n * If a `fetch` implementation is already available, the polyfill will be\n * silently ignored.\n *\n * Search JS Core will automatically use `node-fetch` if running in Node.js,\n * making this function unnecessary for most use cases.\n *\n * @param opts Options for the polyfill.\n * @param {fetch} opts.fetch Required. A custom `fetch` implementation.\n * @param {AbortController} opts.AbortController Required. A custom `AbortController` implementation.\n * @param {boolean} force If `true`, the polyfill will be forced to load. Otherwise, it will only load if `fetch` is not available.\n */\nexport function polyfillFetch(\n  { fetch, AbortController }: FetchImplementation,\n  force = false\n): void {\n  if (!fetch) {\n    throw new Error(\n      'Fetch implementation must include implementations of `fetch`.'\n    );\n  }\n\n  if (_fetchImpl && !force) {\n    return;\n  }\n  _fetchImpl = fetch;\n  _abortControllerImpl = AbortController;\n}\n\n/**\n * Returns the {@link FetchImplementation} used by Search JS Core.\n */\nexport function getFetch(): FetchImplementation {\n  if (!_fetchImpl) {\n    throw new Error(\n      'Fetch implementation not found. Please use `polyfillFetch` from `@mapbox/search-js-core` to fix this issue.'\n    );\n  }\n\n  return {\n    fetch: _fetchImpl,\n    AbortController: _abortControllerImpl\n  };\n}\n\n/**\n * Trick ESBuild here into using Node.js require.\n */\nfunction nodeRequire(fn: typeof require, str: string): any {\n  return fn(str);\n}\n\n/**\n * Check for Node.js environment on launch and import `node-fetch` if necessary.\n * https://github.com/node-fetch/node-fetch#commonjs\n */\nif (!_fetchImpl && typeof 'process' !== 'undefined' && process.versions.node) {\n  // Separate the import statement so bundlers can optimize it out.\n  const { default: fetch } = nodeRequire(require, 'node-fetch');\n  const AbortController = nodeRequire(require, 'abort-controller');\n\n  polyfillFetch({\n    fetch,\n    AbortController\n  });\n}\n", "type Primitive = string | number | boolean | null;\n\n/**\n * tl;dr - [classnames](https://www.npmjs.com/package/classnames) for query parameters.\n *\n * Encodes query parameters into a stringified form, good for use with {@link URL#search}.\n * Objects are key-value pairs, and if a falsy object is passed, it will be omitted.\n *\n * Null and undefined values are ignored.\n * Array values are encoded as comma-separated values.\n *\n * @example\n * ```typescript\n * const limit = 0;\n * const offset = null;\n * const params = queryParams(\n *  {\n *    q: 'pizza',\n *    c: null\n *  },\n *  (limit != null) && { limit },\n *  (offset != null) && { offset }\n * );\n * console.log(params); // = 'q=pizza&limit=0'\n * ```\n */\nexport function queryParams<T extends Record<string, Primitive>>(\n  ...objects: (T | false)[]\n): string {\n  const params = [];\n  for (const obj of objects) {\n    if (!obj) continue;\n\n    const entries = Object.entries(obj);\n    for (const [key, value] of entries) {\n      if (value == null) continue;\n      params.push(`${key}=${encodeURIComponent(String(value))}`);\n    }\n  }\n\n  return params.join('&');\n}\n", "import {\n  ENDPOINT_RETRIEVE,\n  ENDPOINT_SUGGEST,\n  FORWARD_URL,\n  PERMANENT_FORWARD_URL,\n  PERMANENT_REVERSE_URL,\n  RETRIEVE_URL,\n  REVERSE_URL,\n  SUGGEST_URL\n} from './constants';\nimport {\n  AdministrativeUnitTypes,\n  Suggestion,\n  FeatureSuggestion\n} from './types';\n\nimport { LngLat, LngLatLike } from '../LngLat';\nimport { LngLatBounds, LngLatBoundsLike } from '../LngLatBounds';\nimport { SessionToken, SessionTokenLike } from '../SessionToken';\n\nimport { handleNonOkRes } from '../MapboxError';\nimport { getFetch } from '../fetch';\nimport { queryParams } from '../utils/queryParams';\n\ninterface AccessTokenOptions {\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   */\n  accessToken: string;\n}\n\ninterface FetchOptions {\n  /**\n   * If specified, the connected {@link AbortController} can be used to\n   * abort the current network request(s).\n   *\n   * This mechanism works in the same way as the [`fetch` API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API#aborting_a_fetch).\n   *\n   * Reference:\n   * https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal#examples\n   */\n  signal?: AbortSignal;\n}\n\ninterface SessionTokenOptions {\n  /**\n   * A customer-provided session token value, which groups a series of requests\n   * together for [billing purposes](https://docs.mapbox.com/api/search/search/#search-api-pricing).\n   *\n   * Reference:\n   * https://docs.mapbox.com/api/search/search/#session-based-pricing\n   */\n  sessionToken: SessionTokenLike;\n}\n\n/**\n * @typedef Options\n */\nexport interface Options {\n  /**\n   * The [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag) to be returned.\n   *\n   * If not specified, `en` will be used.\n   */\n  language: string;\n  /**\n   * An [ISO 3166 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) to be returned.\n   *\n   * If not specified, results will not be filtered by country.\n   */\n  country: string;\n\n  /**\n   * Limit results to only those contained within the supplied bounding box.\n   */\n  bbox: string | LngLatBoundsLike;\n  /**\n   * The number of results to return, up to `10`.\n   */\n  limit: string | number;\n  /**\n   * The navigation routing profile to use for distance/eta calculations.\n   *\n   * For distance calculations, both {@link Options#navigation_profile} and\n   * {@link Options#origin} must be specified.\n   *\n   * For ETA calculations: {@link Options#navigation_profile},\n   * {@link Options#origin}, and {@link Options#eta_type} must be specified.\n   */\n  navigation_profile?: 'driving' | 'walking' | 'cycling';\n  /**\n   * The location from which to calculate distance. **This parameter may incur additional latency.**\n   *\n   * When both {@link Options#proximity} and {@link Options#origin} are specified, `origin` is interpreted as the\n   * target of a route, while `proximity` indicates the current user location.\n   *\n   * For distance calculations, both {@link Options#navigation_profile} and\n   * {@link Options#origin} must be specified.\n   *\n   * For ETA calculations: {@link Options#navigation_profile},\n   * {@link Options#origin}, and {@link Options#eta_type} must be specified.\n   */\n  origin: string | LngLatLike;\n  /**\n   * Bias the response to favor results that are closer to this location.\n   *\n   * When both {@link Options#proximity} and {@link Options#origin} are specified, `origin` is interpreted as the\n   * target of a route, while `proximity` indicates the current user location.\n   */\n  proximity: string | LngLatLike;\n  /**\n   * Used to estimate the time of arrival from {@link Options#origin}. **This parameter may incur additional latency.**\n   *\n   * For ETA calculations: {@link Options#navigation_profile},\n   * {@link Options#origin}, and {@link Options#eta_type} must be specified.\n   */\n  eta_type?: 'navigation';\n  /**\n   * Limit results to one or more types of features. If no types are specified, all possible types may be returned.\n   *\n   * Reference:\n   * https://docs.mapbox.com/api/search/search/#administrative-unit-types\n   */\n  types?: string | Set<AdministrativeUnitTypes>;\n}\n\ninterface PermanentOptions {\n  /**\n   * The permanent endpoints are used for use cases that require storing\n   * position data. If 'true', the permanent endpoints will be used, which are\n   * billed separately.\n   *\n   * If you're interested in using {@link PermanentOptions#permanent}, contact\n   * [Mapbox sales](https://www.mapbox.com/contact/sales/).\n   *\n   * It's important to speak with an Account Manager on the Sales team prior to making requests\n   * with {@link PermanentOptions#permanent} set to `true`, as unsuccessful requests\n   * made by an account that does not have access to the endpoint may be billable.\n   */\n  permanent: boolean;\n}\n\n/**\n * @typedef SuggestionResponse\n */\nexport interface SuggestionResponse {\n  /**\n   * The attribution data for results.\n   */\n  attribution?: string;\n  /**\n   * The returned suggestion objects.\n   *\n   * @see {@link Suggestion}\n   */\n  suggestions: Suggestion[];\n}\n\n/**\n * @typedef RetrieveResponse\n */\nexport interface RetrieveResponse {\n  type: 'FeatureCollection';\n  /**\n   * The attribution data for results.\n   */\n  attribution?: string;\n  /**\n   * The returned feature objects.\n   *\n   * @see {@link FeatureSuggestion}\n   */\n  features: FeatureSuggestion[];\n}\n\n/**\n * A `MapboxSearch` object is an application's main entrypoint to the [Mapbox Search API](https://docs.mapbox.com/api/search/search/).\n *\n * `MapboxSearch` is focused on the two-step, interactive search experience. These steps are:\n *   1. {@link MapboxSearch#suggest}: The user enters a search term, and a list of suggested results is returned with\n *      optional data such as: eta, distance calculations, etc.\n *   2. {@link MapboxSearch#retrieve}: The user selects a result from the list of suggested results, and the\n *     corresponding geographic coordinates are returned for displaying on a map or otherwise manipulating.\n *\n * A [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) is required to use `MapboxSearch`, and\n * other options may be specified either in the constructor or in the {@link MapboxSearch#suggest} call.\n *\n * @class MapboxSearch\n * @param {Options} [options]\n * @param {string} [options.accessToken]\n *\n * @example\n * ```typescript\n * const search = new MapboxSearch({ accessToken: 'pk.my-mapbox-access-token' });\n *\n * const sessionToken = new SessionToken();\n * const result = await search.suggest('Washington D.C.', { sessionToken });\n * if (result.suggestions.length === 0) return;\n *\n * const suggestion = result.suggestions[0];\n * if (search.canRetrieve(suggestion)) {\n *  const { features } = await search.retrieve(suggestion, { sessionToken });\n *  doSomethingWithCoordinates(features);\n * } else if (search.canSuggest(suggestion)) {\n *   // .. go through suggest flow again ..\n * }\n * ```\n */\nexport class MapboxSearch {\n  static defaults: Partial<Options> = {\n    language: 'en'\n  };\n\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   */\n  accessToken: string;\n\n  /**\n   * Any default options ({@link Options}) to be merged into options in the following methods:\n   * - {@link MapboxSearch#suggest}\n   * - {@link MapboxSearch#forward}\n   * - {@link MapboxSearch#reverse}\n   */\n  defaults: Partial<Options>;\n\n  constructor(options: Partial<AccessTokenOptions & Options> = {}) {\n    const { accessToken, ...defaults } = options;\n\n    this.accessToken = accessToken;\n\n    // Assign defaults to this.defaults.\n    this.defaults = {\n      ...MapboxSearch.defaults,\n      ...defaults\n    };\n  }\n\n  /** @section {Interactive search} */\n\n  /**\n   * {@link MapboxSearch#suggest} is \"part one\" of the two-step interactive search experience, and includes\n   * useful information such as: {@link Suggestion#feature_name}, {@link Suggestion#description}, and {@link Suggestion#maki}.\n   *\n   * Suggestion objects **do not include geographic coordinates**. To get the coordinates of the result, use {@link MapboxSearch#retrieve}.\n   *\n   * It may be useful to call {@link MapboxSearch#canRetrieve} before calling this method, as the suggestion may be a reference to\n   * another suggest query. This can also be tested with {@link MapboxSearch#canSuggest}, and further calls to {@link MapboxSearch#suggest}.\n   *\n   * For tracking purposes, it is useful for any follow-up requests based on this suggestion to include same\n   * {@link Suggestion#sessionToken} as the original request.\n   *\n   * If you'd like session tokens to be handled automatically, see {@link SearchSession}.\n   *\n   * @param {string} searchText\n   * @param {Options} optionsArg\n   * @param {SessionTokenLike} optionsArg.sessionToken\n   * @param {AbortSignal} [optionsArg.signal]\n   */\n  async suggest(\n    searchText: string,\n    optionsArg: SessionTokenOptions & Partial<FetchOptions & Options>\n  ): Promise<SuggestionResponse> {\n    if (!searchText) {\n      throw new Error('searchText is required');\n    }\n    if (!this.accessToken) {\n      throw new Error('accessToken is required');\n    }\n    if (!optionsArg || !optionsArg.sessionToken) {\n      throw new Error('sessionToken is required');\n    }\n\n    const { sessionToken, signal } = optionsArg;\n\n    const options = {\n      ...this.defaults,\n      ...optionsArg,\n      sessionToken\n    };\n\n    if (options.eta_type && (!options.origin || !options.navigation_profile)) {\n      throw new Error(\n        'to provide eta estimate: eta, navigation_profile, and origin are required'\n      );\n    }\n    if (options.origin && !options.navigation_profile) {\n      throw new Error(\n        'to provide distance estimate: both navigation_profile and origin are required'\n      );\n    }\n\n    const url = new URL(`${SUGGEST_URL}/${encodeURIComponent(searchText)}`);\n    url.search = this.#getQueryParams(options);\n\n    const { fetch } = getFetch();\n    const res = await fetch(url.toString(), {\n      signal\n    });\n\n    // Throw custom error if status code is not 200.\n    await handleNonOkRes(res);\n\n    const json = (await res.json()) as SuggestionResponse;\n    return json;\n  }\n\n  /**\n   * {@link MapboxSearch#retrieve} is \"part two\" of the two-step interactive search experience and includes\n   * geographic coordinates in [GeoJSON](https://docs.mapbox.com/help/glossary/geojson/) format.\n   *\n   * {@link suggestion} is usually a {@link Suggestion} returned from \"part one,\" {@link MapboxSearch#suggest}.\n   *\n   * Multiple feature suggestions may be returned from a single search query, for example in an airport with\n   * multiple terminals.\n   *\n   * **Legal terms:**\n   *\n   * Due to legal terms from our data sources, if the results are to be cached/stored in a customer database,\n   * feature suggestions should come from the {@link MapboxSearch#forward} method\n   * with {@link PermanentOptions#permanent} enabled.\n   *\n   * Otherwise, results should be used ephemerally and not persisted.\n   *\n   * This permanent policy is consistent with the [Mapbox Terms of Service](https://www.mapbox.com/tos/) and failure to comply\n   * may result in modified or discontinued service.\n   *\n   * Additionally, the [Mapbox Terms of Service](https://www.mapbox.com/tos/) states any rendering of a feature suggestion\n   * must be using Mapbox map services (for example, displaying results on Google Maps or MapKit JS is not allowed).\n   *\n   * **Disclaimer:**\n   *\n   * The failure of Mapbox to exercise or enforce any right or provision of these Terms will not constitute a waiver of such right or provision.\n   *\n   * @param {any} optionsArg\n   * @param {SessionTokenLike} optionsArg.sessionToken\n   * @param {AbortSignal} [optionsArg.signal]\n   */\n  async retrieve(\n    suggestion: Suggestion,\n    optionsArg: SessionTokenOptions & Partial<FetchOptions>\n  ): Promise<RetrieveResponse> {\n    if (!suggestion) {\n      throw new Error('suggestion is required');\n    }\n    if (!this.accessToken) {\n      throw new Error('accessToken is required');\n    }\n    if (!this.canRetrieve(suggestion)) {\n      throw new Error('suggestion cannot be retrieved');\n    }\n    if (!optionsArg || !optionsArg.sessionToken) {\n      throw new Error('sessionToken is required');\n    }\n\n    const { sessionToken: sessionTokenLike, signal } = optionsArg;\n\n    const sessionToken = SessionToken.convert(sessionTokenLike);\n\n    const url = new URL(RETRIEVE_URL);\n    url.search = queryParams({\n      access_token: this.accessToken,\n      session_token: sessionToken.id\n    });\n\n    const { fetch } = getFetch();\n    const res = await fetch(url.toString(), {\n      ...this.#getFetchInfo(suggestion),\n      signal\n    });\n\n    // Throw custom error if status code is not 200.\n    await handleNonOkRes(res);\n\n    const json = (await res.json()) as RetrieveResponse;\n    return json;\n  }\n\n  /**\n   * Returns true if {@link MapboxSearch#retrieve} can be called on this suggestion,\n   * false otherwise.\n   *\n   * This indicates the [Mapbox Search API](https://docs.mapbox.com/api/search/search/) has geographic coordinates\n   * for this suggestion.\n   *\n   * This method is mutually exclusive with {@link MapboxSearch#canSuggest}.\n   */\n  canRetrieve(suggestion: Suggestion): boolean {\n    const action = suggestion.action;\n    if (!action) {\n      return false;\n    }\n\n    return action.method === 'POST' && action.endpoint === ENDPOINT_RETRIEVE;\n  }\n\n  /**\n   * Returns true if {@link MapboxSearch#suggest} can be called on this suggestion,\n   * false otherwise.\n   *\n   * This indicates the [Mapbox Search API](https://docs.mapbox.com/api/search/search/) wants to do another\n   * suggestion search on this result, and does not have geographic coordinates.\n   *\n   * This method is mutually exclusive with {@link MapboxSearch#canRetrieve}.\n   */\n  canSuggest(suggestion: Suggestion): boolean {\n    const action = suggestion.action;\n    if (!action) {\n      return false;\n    }\n\n    return action.method === 'POST' && action.endpoint === ENDPOINT_SUGGEST;\n  }\n\n  /** @section {Programmatic search} */\n\n  /**\n   * {@link MapboxSearch#forward} is our programmatic one-step search experience and includes\n   * geographic coordinates in [GeoJSON](https://docs.mapbox.com/help/glossary/geojson/) format.\n   *\n   * Multiple feature suggestions may be returned from a single search query, for example in an airport with\n   * multiple terminals.\n   *\n   * **Legal terms:**\n   *\n   * Due to legal terms from our data sources, if the results are to be cached/stored in a customer database,\n   * {@link PermanentOptions#permanent} should be enabled. This requires contacting Mapbox support.\n   *\n   * Otherwise, results should be used ephemerally and not persisted.\n   *\n   * This permanent policy is consistent with the [Mapbox Terms of Service](https://www.mapbox.com/tos/) and failure to comply\n   * may result in modified or discontinued service.\n   *\n   * Additionally, the [Mapbox Terms of Service](https://www.mapbox.com/tos/) states any rendering of a feature suggestion\n   * must be using Mapbox map services (for example, displaying results on Google Maps or MapKit JS is not allowed).\n   *\n   * **Disclaimer:**\n   *\n   * The failure of Mapbox to exercise or enforce any right or provision of these Terms will not constitute a waiver of such right or provision.\n   *\n   * @param {Options} optionsArg\n   * @param {AbortSignal} [optionsArg.signal]\n   * @param {boolean} [optionsArg.permanent]\n   */\n  async forward(\n    searchText: string,\n    optionsArg: Partial<FetchOptions & Options & PermanentOptions> = {}\n  ): Promise<RetrieveResponse> {\n    if (!searchText) {\n      throw new Error('searchText is required');\n    }\n    if (!this.accessToken) {\n      throw new Error('accessToken is required');\n    }\n\n    const options = {\n      ...this.defaults,\n      ...optionsArg\n    };\n\n    const baseUrl = options.permanent ? PERMANENT_FORWARD_URL : FORWARD_URL;\n    const url = new URL(`${baseUrl}/${encodeURIComponent(searchText)}`);\n    url.search = this.#getQueryParams(options);\n\n    const { fetch } = getFetch();\n    const res = await fetch(url.toString(), {\n      signal: options.signal\n    });\n\n    // Throw custom error if status code is not 200.\n    await handleNonOkRes(res);\n\n    const json = (await res.json()) as RetrieveResponse;\n    return json;\n  }\n\n  /**\n   * {@link MapboxSearch#reverse} allows you to look up a geographic coordinate pair\n   * and returns the feature(s) in [GeoJSON](https://docs.mapbox.com/help/glossary/geojson/) format.\n   *\n   * Multiple feature suggestions may be returned from a single search query, for example in an airport with\n   * multiple terminals.\n   *\n   * **Legal terms:**\n   *\n   * Due to legal terms from our data sources, if the results are to be cached/stored in a customer database,\n   * {@link PermanentOptions#permanent} should be enabled. This requires contacting Mapbox support.\n   *\n   * Otherwise, results should be used ephemerally and not persisted.\n   *\n   * This permanent policy is consistent with the [Mapbox Terms of Service](https://www.mapbox.com/tos/) and failure to comply\n   * may result in modified or discontinued service.\n   *\n   * Additionally, the [Mapbox Terms of Service](https://www.mapbox.com/tos/) states any rendering of a feature suggestion\n   * must be using Mapbox map services (for example, displaying results on Google Maps or MapKit JS is not allowed).\n   *\n   * **Disclaimer:**\n   *\n   * The failure of Mapbox to exercise or enforce any right or provision of these Terms will not constitute a waiver of such right or provision.\n   *\n   * @param lngLat - Either a {@link LngLatLike} object or string in 'lng,lat' comma-separated format.\n   * @param {Options} optionsArg\n   * @param {AbortSignal} [optionsArg.signal]\n   * @param {boolean} [optionsArg.permanent]\n   */\n  async reverse(\n    lngLat: string | LngLatLike,\n    optionsArg: Partial<FetchOptions & Options & PermanentOptions> = {}\n  ): Promise<RetrieveResponse> {\n    if (!lngLat) {\n      throw new Error('lngLat is required');\n    }\n    if (!this.accessToken) {\n      throw new Error('accessToken is required');\n    }\n\n    const options = {\n      ...this.defaults,\n      ...optionsArg\n    };\n\n    const searchText =\n      typeof lngLat === 'string'\n        ? lngLat\n        : LngLat.convert(lngLat).toArray().join(',');\n\n    const baseUrl = options.permanent ? PERMANENT_REVERSE_URL : REVERSE_URL;\n    const url = new URL(`${baseUrl}/${encodeURIComponent(searchText)}`);\n    url.search = queryParams(\n      {\n        access_token: this.accessToken,\n        language: options.language,\n        limit: options.limit\n      },\n      options.types && {\n        types:\n          typeof options.types === 'string'\n            ? options.types\n            : [...options.types].join(',')\n      }\n    );\n\n    const { fetch } = getFetch();\n    const res = await fetch(url.toString(), {\n      signal: options.signal\n    });\n\n    // Throw custom error if status code is not 200.\n    await handleNonOkRes(res);\n\n    const json = (await res.json()) as RetrieveResponse;\n    return json;\n  }\n\n  /**\n   * Returns the query parameters used by {@link MapboxSearch#suggest} and\n   * {@link MapboxSearch#forward}.\n   */\n  #getQueryParams(options: Partial<Options & SessionTokenOptions>): string {\n    return queryParams(\n      {\n        access_token: this.accessToken,\n        language: options.language,\n        country: options.country,\n        limit: options.limit,\n        navigation_profile: options.navigation_profile,\n        eta_type: options.eta_type\n      },\n      options.sessionToken && {\n        session_token: SessionToken.convert(options.sessionToken).id\n      },\n      options.origin && {\n        origin:\n          typeof options.origin === 'string'\n            ? options.origin\n            : LngLat.convert(options.origin).toArray().join(',')\n      },\n      options.proximity && {\n        proximity:\n          typeof options.proximity === 'string'\n            ? options.proximity\n            : LngLat.convert(options.proximity).toArray().join(',')\n      },\n      options.bbox && {\n        bbox:\n          typeof options.bbox === 'string'\n            ? options.bbox\n            : LngLatBounds.convert(options.bbox).toFlatArray().join(',')\n      },\n      options.types && {\n        types:\n          typeof options.types === 'string'\n            ? options.types\n            : [...options.types].join(',')\n      }\n    );\n  }\n\n  /**\n   * Gets a partial fetch request from this suggestion's action.\n   */\n  #getFetchInfo(suggestion: Suggestion): Partial<RequestInit> {\n    if (!this.canRetrieve(suggestion) && !this.canSuggest(suggestion)) {\n      throw new Error('Suggestion cannot be retrieved or suggested');\n    }\n\n    const action = suggestion.action;\n    const body = JSON.stringify(action.body);\n\n    return {\n      method: action.method,\n      body,\n      headers: {\n        'Content-Type': 'application/json',\n        'Content-Length': body.length.toString()\n      }\n    };\n  }\n}\n", "export const SEARCH_URL = `https://api.mapbox.com/autofill/v1`;\n\nexport const ENDPOINT_SUGGEST = 'suggest';\nexport const ENDPOINT_RETRIEVE = 'retrieve';\n\nexport const SUGGEST_URL = `${SEARCH_URL}/${ENDPOINT_SUGGEST}`;\nexport const RETRIEVE_URL = `${SEARCH_URL}/${ENDPOINT_RETRIEVE}`;\n", "import { RETRIEVE_URL, SUGGEST_URL } from './constants';\nimport { AutofillSuggestion, AutofillFeatureSuggestion } from './types';\n\nimport { LngLat, LngLatLike } from '../LngLat';\nimport { LngLatBounds, LngLatBoundsLike } from '../LngLatBounds';\nimport { SessionToken, SessionTokenLike } from '../SessionToken';\n\nimport { handleNonOkRes } from '../MapboxError';\nimport { getFetch } from '../fetch';\nimport { queryParams } from '../utils/queryParams';\n\ninterface AccessTokenOptions {\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   */\n  accessToken: string;\n}\n\ninterface FetchOptions {\n  /**\n   * If specified, the connected {@link AbortController} can be used to\n   * abort the current network request(s).\n   *\n   * This mechanism intentionally works in the same way as the\n   * [`fetch` API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API#aborting_a_fetch).\n   *\n   * Reference:\n   * https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal#examples\n   */\n  signal?: AbortSignal;\n}\n\ninterface SessionTokenOptions {\n  /**\n   * A customer-provided session token value, which groups a series of requests together for [billing purposes](https://docs.mapbox.com/api/search/search/#search-api-pricing).\n   *\n   * Reference:\n   * https://docs.mapbox.com/api/search/search/#session-based-pricing\n   */\n  sessionToken: SessionTokenLike;\n}\n\n/**\n * @typedef AutofillOptions\n */\nexport interface AutofillOptions {\n  /**\n   * The [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag) to be returned.\n   *\n   * If not specified, `en` will be used.\n   */\n  language: string;\n  /**\n   * An [ISO 3166 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) to be returned.\n   *\n   * If not specified, results will not be filtered by country.\n   */\n  country: string;\n  /**\n   * Limit results to only those contained within the supplied bounding box.\n   */\n  bbox: string | LngLatBoundsLike;\n  /**\n   * The number of results to return, up to `10`.\n   */\n  limit: string | number;\n  /**\n   * Bias the response to favor results that are closer to this location.\n   *\n   * When both {@link AutofillOptions#proximity} and {@link AutofillOptions#origin} are specified, `origin` is interpreted as the\n   * target of a route, while `proximity` indicates the current user location.\n   */\n  proximity: string | LngLatLike;\n}\n\n/**\n * @typedef AutofillSuggestionResponse\n */\nexport interface AutofillSuggestionResponse {\n  /**\n   * The attribution data for results.\n   */\n  attribution?: string;\n  /**\n   * The returned suggestion objects.\n   *\n   * @see {@link Suggestion}\n   */\n  suggestions: AutofillSuggestion[];\n}\n\n/**\n * @typedef AutofillRetrieveResponse\n */\nexport interface AutofillRetrieveResponse {\n  type: 'FeatureCollection';\n  /**\n   * The attribution data for results.\n   */\n  attribution?: string;\n  /**\n   * The returned feature objects.\n   *\n   * @see {@link FeatureSuggestion}\n   */\n  features: AutofillFeatureSuggestion[];\n}\n\n/**\n * A `MapboxAutofill` object is an application's main entrypoint to the\n * Mapbox Autofill API. The Mapbox Autofill API is an API similar to {@link MapboxSearch},\n * but targeted towards **address** autocomplete.\n *\n * Only address types are returned by the API.\n *\n * `MapboxAutofill` is focused on the two-step, interactive search experience. These steps are:\n *   1. {@link MapboxAutofill#suggest}: The user enters a search term, and a list of suggested results is returned with\n *     address data.\n *   2. {@link MapboxAutofill#retrieve}: The user selects a result from the list of suggested results, and the\n *     corresponding geographic coordinates are returned.\n *\n * A [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) is required to use `MapboxAutofill`, and\n * other options may be specified either in the constructor or in the {@link MapboxAutofill#suggest} call.\n *\n * @class MapboxAutofill\n * @param {AutofillOptions} [options]\n * @param {string} [options.accessToken]\n */\nexport class MapboxAutofill {\n  static defaults: Partial<AutofillOptions> = {\n    language: 'en',\n    proximity: 'ip'\n  };\n\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   */\n  accessToken: string;\n\n  /**\n   * Any default options ({@link AutofillOptions}) to be merged into options in the following methods:\n   * - {@link MapboxAutofill#suggest}\n   *\n   * @type {AutofillOptions}\n   */\n  defaults: Partial<AutofillOptions>;\n\n  constructor(options: Partial<AccessTokenOptions & AutofillOptions> = {}) {\n    const { accessToken, ...defaults } = options;\n\n    this.accessToken = accessToken;\n\n    // Assign defaults to this.defaults.\n    this.defaults = {\n      ...MapboxAutofill.defaults,\n      ...defaults\n    };\n  }\n\n  /** @section {Methods} */\n\n  /**\n   * {@link MapboxAutofill#suggest} is \"part one\" of the two-step autofill experience, and includes\n   * autofill information.\n   *\n   * Suggestion objects **do not include geographic coordinates**. To get the coordinates of the result, use {@link MapboxSearch#retrieve}.\n   *\n   * For tracking purposes, it is useful for any follow-up requests based on this suggestion to include same\n   * {@link Suggestion#sessionToken} as the original request.\n   *\n   * If you'd like session tokens to be handled automatically, see {@link SearchSession}.\n   *\n   * @param {AutofillOptions} optionsArg\n   * @param {SessionTokenLike} optionsArg.sessionToken\n   * @param {AbortSignal} [optionsArg.signal]\n   */\n  async suggest(\n    searchText: string,\n    optionsArg: SessionTokenOptions & Partial<FetchOptions & AutofillOptions>\n  ): Promise<AutofillSuggestionResponse> {\n    if (!searchText) {\n      throw new Error('searchText is required');\n    }\n    if (!this.accessToken) {\n      throw new Error('accessToken is required');\n    }\n    if (!optionsArg || !optionsArg.sessionToken) {\n      throw new Error('sessionToken is required');\n    }\n\n    const { sessionToken, signal } = optionsArg;\n\n    const options = {\n      ...this.defaults,\n      ...optionsArg,\n      sessionToken\n    };\n\n    const url = new URL(`${SUGGEST_URL}/${encodeURIComponent(searchText)}`);\n    url.search = this.#getQueryParams(options);\n\n    const { fetch } = getFetch();\n    const res = await fetch(url.toString(), {\n      signal\n    });\n\n    // Throw custom error if status code is not 200.\n    await handleNonOkRes(res);\n\n    const json = (await res.json()) as AutofillSuggestionResponse;\n\n    // Add 'original_search_text' so we can retrieve.\n    return {\n      ...json,\n      suggestions: json.suggestions.map((suggestion) => {\n        return {\n          ...suggestion,\n          original_search_text: searchText\n        };\n      })\n    };\n  }\n\n  /**\n   * {@link MapboxAutofill#retrieve} is \"part two\" of the two-step autofill experience and includes\n   * geographic coordinates in [GeoJSON](https://docs.mapbox.com/help/glossary/geojson/) format.\n   *\n   * {@link suggestion} is usually a {@link AutofillSuggestion} returned from \"part one,\"\n   * {@link MapboxAutofill#suggest}.\n   *\n   * Multiple feature suggestions may be returned from a single address,\n   * for example an address with multiple buildings.\n   *\n   * **Legal terms:**\n   *\n   * Geographic coordinates should be used ephemerally and not persisted.\n   *\n   * This permanent policy is consistent with the [Mapbox Terms of Service](https://www.mapbox.com/tos/) and failure to comply\n   * may result in modified or discontinued service.\n   *\n   * Additionally, the [Mapbox Terms of Service](https://www.mapbox.com/tos/) states any rendering of a feature suggestion\n   * must be using Mapbox map services (for example, displaying results on Google Maps or MapKit JS is not allowed).\n   *\n   * **Disclaimer:**\n   *\n   * The failure of Mapbox to exercise or enforce any right or provision of these Terms will not constitute a waiver of such right or provision.\n   *\n   * @param {AutofillOptions} optionsArg\n   * @param {SessionTokenLike} optionsArg.sessionToken\n   * @param {AbortSignal} [optionsArg.signal]\n   */\n  async retrieve(\n    suggestion: string | AutofillSuggestion,\n    optionsArg: SessionTokenOptions & Partial<FetchOptions & AutofillOptions>\n  ): Promise<AutofillRetrieveResponse> {\n    if (!suggestion) {\n      throw new Error('suggestion is required');\n    }\n    if (!this.accessToken) {\n      throw new Error('accessToken is required');\n    }\n    if (!optionsArg || !optionsArg.sessionToken) {\n      throw new Error('sessionToken is required');\n    }\n\n    const { sessionToken, signal } = optionsArg;\n\n    const options = {\n      ...this.defaults,\n      ...optionsArg,\n      sessionToken\n    };\n\n    const isRichSuggestion = typeof suggestion !== 'string';\n\n    const searchText = isRichSuggestion\n      ? suggestion.original_search_text\n      : suggestion;\n    const url = new URL(`${RETRIEVE_URL}/${encodeURIComponent(searchText)}`);\n    url.search = this.#getQueryParams(options);\n\n    const { fetch } = getFetch();\n    const res = await fetch(url.toString(), {\n      signal\n    });\n\n    // Throw custom error if status code is not 200.\n    await handleNonOkRes(res);\n\n    const json = (await res.json()) as AutofillRetrieveResponse;\n    if (!isRichSuggestion) {\n      return json;\n    }\n\n    return {\n      ...json,\n      features: json.features.filter((feature) => {\n        return feature.properties.full_address === suggestion.full_address;\n      })\n    };\n  }\n\n  /**\n   * Returns the query parameters used by {@link MapboxSearch#suggest} and\n   * {@link MapboxSearch#forward}.\n   */\n  #getQueryParams(\n    options: Partial<AutofillOptions & SessionTokenOptions>\n  ): string {\n    return queryParams(\n      {\n        access_token: this.accessToken,\n        language: options.language,\n        country: options.country,\n        limit: options.limit\n      },\n      options.sessionToken && {\n        session_token: SessionToken.convert(options.sessionToken).id\n      },\n      options.proximity && {\n        proximity:\n          typeof options.proximity === 'string'\n            ? options.proximity\n            : LngLat.convert(options.proximity).toArray().join(',')\n      },\n      options.bbox && {\n        bbox:\n          typeof options.bbox === 'string'\n            ? options.bbox\n            : LngLatBounds.convert(options.bbox).toFlatArray().join(',')\n      }\n    );\n  }\n}\n", "// Type definitions for /suggest endpoint suggestions.\n\nimport { LngLatBoundsLike } from '../LngLatBounds';\n\n/**\n * @typedef AutofillMatchCodeConfidence\n */\nexport enum AutofillMatchCodeConfidence {\n  /**\n   * An exact match.\n   */\n  exact = 'exact',\n  /**\n   * High confidence of a match.\n   */\n  high = 'high',\n  /**\n   * Medium confidence of a match.\n   */\n  medium = 'medium',\n  /**\n   * Low confidence of a match.\n   */\n  low = 'low'\n}\n\n/**\n * An object describing the level of confidence that the given response feature matches the address intended by the request query.\n * Includes boolean flags denoting matches for each address sub-component.\n *\n * @typedef AutofillMatchCode\n */\nexport interface AutofillMatchCode {\n  /**\n   * A measure of confidence that the returned feature suggestion matches the intended address, based on the search text provided.\n   */\n  confidence: AutofillMatchCodeConfidence;\n  /**\n   * True if the confidence value is \"exact\".\n   */\n  exact_match: boolean;\n  /**\n   * True if the house number component was matched.\n   */\n  house_number: boolean;\n  /**\n   * True if the street component was matched.\n   */\n  street: boolean;\n  /**\n   * True if the postcode was matched.\n   */\n  postcode: boolean;\n  /**\n   * True if the place component was matched.\n   */\n  place: boolean;\n  /**\n   * True if the region component was matched.\n   */\n  region?: boolean;\n  /**\n   * True if the locality component was matched.\n   */\n  locality?: boolean;\n}\n\n/**\n * An `AutofillSuggestion` object represents a suggestion\n * result from the Mapbox Autofill API.\n *\n * Suggestion objects are \"part one\" of the two-step interactive autofill experience.\n * Suggestion objects do not include geographic coordinates.\n *\n * To get the coordinates of the result, use {@link MapboxAutofill#retrieve}.\n *\n * For tracking purposes, it is useful for any follow-up requests based on this suggestion to include same\n * {@link SessionToken} as the original request.\n *\n * @typedef AutofillSuggestion\n * @example\n * ```typescript\n * const autofill = new MapboxAutofill({ accessToken: 'pk.my-mapbox-access-token' });\n *\n * const sessionToken = new SessionToken();\n * const result = await search.autofill('Washington D.C.', { sessionToken });\n * if (result.suggestions.length === 0) return;\n *\n * const suggestion = result.suggestions[0];\n * const { features } = await autofill.retrieve(suggestion, { sessionToken });\n * doSomethingWithCoordinates(features);\n * ```\n */\nexport interface AutofillSuggestion {\n  /**\n   * This is added by {@link MapboxAutofill} and is **not** part of the\n   * Autofill API.\n   *\n   * @ignore\n   */\n  original_search_text: string;\n\n  /**\n   * The name of the feature.\n   */\n  feature_name: string;\n  /**\n   * The feature name, as matched by the search algorithm.\n   */\n  matching_name: string;\n  /**\n   * Additional details, such as city and state for addresses.\n   */\n  description: string;\n  /**\n   * The name of the [Maki](https://labs.mapbox.com/maki-icons/) icon associated with the feature.\n   */\n  maki?: string;\n  /**\n   * The [IETF language tag](https://en.wikipedia.org/wiki/IETF_language_tag) of the feature.\n   */\n  language: string;\n\n  address?: string;\n  /**\n   * The full address of the suggestion.\n   */\n  full_address?: string;\n\n  /**\n   * Address line 1 from the [WHATWG Autocomplete Specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill)\n   */\n  address_line1?: string;\n  /**\n   * Address line 2 from the [WHATWG Autocomplete Specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill)\n   */\n  address_line2?: string;\n  /**\n   * Address line 3 from the [WHATWG Autocomplete Specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill)\n   */\n  address_line3?: string;\n\n  /**\n   * Address level 1 from the [WHATWG Autocomplete Specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill)\n   */\n  address_level1?: string;\n  /**\n   * Address level 2 from the [WHATWG Autocomplete Specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill)\n   */\n  address_level2?: string;\n  /**\n   * Address level 3 from the [WHATWG Autocomplete Specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill)\n   */\n  address_level3?: string;\n\n  /**\n   * Long form country name, for example: \"United States\"\n   */\n  country?: string;\n  /**\n   * Postal code.\n   */\n  postcode?: string;\n\n  /**\n   * Address metadata fields of the feature.\n   *\n   * Includes the short form country name, for example: \"us\". This follows the\n   * [ISO 3166 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) specification.\n   */\n  metadata: {\n    iso_3166_1: string;\n  };\n\n  /**\n   * A string representing the feature in the requested language, if specified, and its full result hierarchy.\n   */\n  place_name?: string;\n\n  /**\n   * An object describing the level of confidence that the given response feature matches the address intended by the request query.\n   * Includes boolean flags denoting matches for each address sub-component.\n   */\n  match_code: AutofillMatchCode;\n}\n\n/**\n * An `AutofillFeatureSuggestion` object represents [GeoJSON](https://docs.mapbox.com/help/glossary/geojson/)\n * suggestion results from the Mapbox Autofill API.\n *\n * As per the Mapbox Autofill API, this will always be [Point](https://geojson.org/geojson-spec.html#point).\n *\n * @typedef AutofillFeatureSuggestion\n * @example\n * ```typescript\n * const featureSuggestion = {\n *   type: 'Feature',\n *   geometry: {\n *     type: 'Point',\n *     coordinates: [0,0]\n *   },\n *   properties: {\n *     feature_name: 'Washington D.C.',\n *   }\n * };\n * ```\n */\nexport type AutofillFeatureSuggestion = GeoJSON.Feature<\n  GeoJSON.Point,\n  AutofillSuggestion\n> & {\n  /**\n   * A bounding box for the feature. This may be significantly\n   * larger than the geometry.\n   */\n  bbox?: LngLatBoundsLike;\n};\n", "/**\n * `Evented` mixes methods into other classes for event capabilities.\n *\n * If you are an end-user, you will most likely use these methods through\n * classes like {@link SearchSession}.\n *\n * For lists of events you can listen for, see API documentation for\n * specific classes.\n *\n * @class Evented\n */\nexport class Evented<T> {\n  #listeners: Partial<{\n    [key in keyof T]: ((arg0: T[key]) => void)[];\n  }> = {};\n\n  /**\n   * Adds a listener to a specified event type.\n   *\n   * @param type - The event type to add a listen for.\n   * @param listener - The function to be called when the event is fired.\n   */\n  addEventListener<K extends keyof T>(\n    type: K,\n    listener: (arg0: T[K]) => void\n  ): void {\n    const listenersArr = this.#listeners;\n\n    // Create listener if doesn't already exist.\n    if (!listenersArr[type]) {\n      listenersArr[type] = [];\n    }\n\n    listenersArr[type].push(listener);\n  }\n\n  /**\n   * Removes a previously registered event listener.\n   *\n   * @param type - The event type to remove listeners for.\n   * @param listener - The listener function to remove.\n   */\n  removeEventListener<K extends keyof T>(\n    type: K,\n    listener: (arg0: T[K]) => void\n  ): void {\n    const listenersArr = this.#listeners;\n\n    // If a type doesn't exist, return early.\n    if (!listenersArr[type]) {\n      return;\n    }\n\n    const listeners = listenersArr[type];\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n  }\n\n  fire<K extends keyof T>(type: K, arg0: T[K]): void {\n    const listenersArr = this.#listeners;\n\n    // If a type doesn't exist, return early.\n    if (!listenersArr[type]) {\n      return;\n    }\n\n    const listeners = listenersArr[type];\n    for (const listener of listeners) {\n      listener(arg0);\n    }\n  }\n}\n", "/**\n * Version of the classic `debounce` function that accepts a `signalFn`\n * argument, which can return an {@link AbortSignal}.\n */\nexport function debounce<F extends (...args: unknown[]) => unknown>(\n  func: F,\n  wait: number,\n  signalFn?: () => AbortSignal\n): F {\n  let timeout = null;\n\n  return ((...args: Parameters<F>) => {\n    if (timeout !== null) {\n      clearTimeout(timeout);\n    }\n\n    const signal = signalFn && signalFn();\n    timeout = setTimeout(() => {\n      timeout = null;\n      if (signal?.aborted) {\n        return;\n      }\n      func(...args);\n    }, wait);\n  }) as F;\n}\n", "/* eslint-disable prefer-const */\nimport { SessionToken, SessionTokenLike } from './SessionToken';\n\nimport { getFetch } from './fetch';\n\nimport { Evented } from './utils/Evented';\nimport { debounce } from './utils/debounce';\n\nconst SESSION_TOKEN_NUM = 50;\n\n/**\n * Shortcut function to create a new AbortController from the polyfill.\n */\nfunction createAbortController(): AbortController {\n  const { AbortController } = getFetch();\n  return new AbortController();\n}\n\ninterface EventTypes<SuggestionResponse, RetrieveResponse> {\n  suggest: SuggestionResponse;\n  suggesterror: Error;\n  retrieve: RetrieveResponse;\n}\n\n/**\n * TypeScript magic section: what is this?\n *\n * Despite the name {@link SearchSession}, in Search JS Web we use it to control\n * both {@link MapboxSearch} **and** {@link MapboxAutofill} instances. Both\n * of these have similar workflows, but are separate APIs with different options\n * and responses.\n *\n * In order to make TypeScript happy, this type is an \"approximation\" of what\n * {@link SearchSession} uses. When you construct a new {@link SearchSession},\n * because of this type [Options, Suggestion, SuggestionResponse, RetrieveResponse]\n * are automatically inferred.\n *\n * @internal\n * @example\n * ```typescript\n * const autofill = new MapboxAutofill({\n *  accessToken: 'pk.my-fancy-token',\n * });\n *\n * const session = new SearchSession(autofill);\n *\n * `session` has inferred type = SearchSession<\n *   AutofillOptions,\n *   AutofillSuggestion,\n *   AutofillSuggestionResponse,\n *   AutofillRetrieveResponse\n * >\n * ```\n */\ntype SuggestSearch<Options, Suggestion, SuggestionResponse, RetrieveResponse> =\n  {\n    suggest: (\n      text: string,\n      options: Partial<Options> & {\n        sessionToken: SessionTokenLike;\n        signal: AbortSignal;\n      }\n    ) => Promise<SuggestionResponse>;\n    retrieve: (\n      suggestion: Suggestion,\n      options: Partial<Options> & {\n        sessionToken: SessionTokenLike;\n      }\n    ) => Promise<RetrieveResponse>;\n    canRetrieve?: (suggestion: Suggestion) => boolean;\n    canSuggest?: (suggestion: Suggestion) => boolean;\n  };\n\n/**\n * A `SearchSession` object is a managed entrypoint to the [Mapbox Search API](https://docs.mapbox.com/api/search/search/)\n * or Mapbox Autocomplete API.\n *\n * `SearchSession` abstracts the suggest/retrieve flow of the two-step interactive search experience.\n *\n * Compared to using these APIs directly, you can use a `SearchSession` to:\n * 1. Automatically manage the session token lifecycle.\n * 2. Debounce calls to {@link SearchSession#suggest}.\n * 2. Abort in-flight requests with an imperative API.\n *\n * @class SearchSession\n * @example\n * ```typescript\n * const search = new MapboxSearch({ accessToken: 'pk.my-mapbox-access-token' });\n * const session = new SearchSession(search);\n *\n * session.addEventListener('suggest', (res) => {\n *   presentResultsToUser(res.suggestions);\n * });\n *\n * session.addEventListener('retrieve', (res) => {\n *   doSomethingWithFeatureCollection(res);\n * });\n *\n * document.querySelector('button').addEventListener('click', (event) => {\n *   const suggestions = session.suggestions?.suggestions;\n *   if (!suggestions || !suggestions.length) {\n *     return;\n *   }\n *\n *   const suggestion = suggestions[0];\n *   if (session.canRetrieve(suggestion)) {\n *     session.retrieve(suggestion);\n *   } else if (session.canSuggest(suggestion)) {\n *     // .. go through suggest flow again ..\n *     session.suggest(suggestion.text);\n *   }\n * });\n *\n * session.suggest('Washington D.C.');\n * ```\n * @param {MapboxSearch | MapboxAutofill} search - The search interface to wrap.\n * @param {number} wait - The time in milliseconds to wait before sending a new request to the {@link SearchSession#suggest} call.\n */\nexport class SearchSession<\n  Options,\n  Suggestion,\n  SuggestionResponse,\n  RetrieveResponse\n> extends Evented<EventTypes<SuggestionResponse, RetrieveResponse>> {\n  readonly search: SuggestSearch<\n    Options,\n    Suggestion,\n    SuggestionResponse,\n    RetrieveResponse\n  >;\n\n  /**\n   * The time in milliseconds to wait before sending a new request to the\n   * {@link SearchSession#suggest} call.\n   */\n  readonly debounce: number;\n\n  /**\n   * If true, the existing session token will continue to be used regardless\n   * of is expiration state or the number of suggest calls made with it.\n   *\n   * This is used among Autofill components to ensure that a session endures\n   * across the lifecycle of an Autofill checkout process.\n   */\n  #persistSessionToken = false;\n\n  /**\n   * The session token is an SKU (billing token) used to identify the current\n   * search session and provide analytics to the customer.\n   *\n   * As per {@link SessionToken}, this is a UUIDv4 value.\n   *\n   * In the following instances, a new session token is generated:\n   * - On a successful {@link SearchSession#retrieve} call.\n   * - After a certain time (60 min).\n   * - After 50 suggests.\n   */\n  #sessionToken = new SessionToken();\n\n  /**\n   * The {@link SessionToken} used within the current session.\n   *\n   * By default, this value is managed internally and automatically regenerated\n   * according to its lifecycle criteria, i.e. time, number of calls to suggest,\n   * and a call to retrieve.\n   *\n   * This value should not be explicitly set except within the Autofill web\n   * component library, as doing so will persist the token for the duration\n   * of those component lifecycles.\n   */\n  get sessionToken(): SessionToken {\n    return this.#sessionToken;\n  }\n  set sessionToken(token: SessionToken) {\n    this.#sessionToken = token;\n    this.#persistSessionToken = true;\n  }\n\n  /**\n   * Number of times the session token has been used.\n   *\n   * Kept in sync by {@link SearchSession##getSessionTokenForSuggest}.\n   */\n  #sessionTokenRef = 0;\n\n  #getSessionTokenForSuggest(): SessionToken {\n    if (!this.#persistSessionToken) {\n      // 1. If the session token is expired.\n      // 2. If the session token has been used more than 50 times.\n      if (\n        this.#sessionToken.isExpired() ||\n        this.#sessionTokenRef >= SESSION_TOKEN_NUM\n      ) {\n        this.#sessionToken = new SessionToken();\n        // Reset counter.\n        this.#sessionTokenRef = 0;\n      }\n    }\n\n    this.#sessionTokenRef++;\n    return this.#sessionToken;\n  }\n\n  #suggestions: SuggestionResponse | null;\n\n  /**\n   * The suggestions from the last successful suggest call, if any.\n   */\n  get suggestions(): SuggestionResponse | null {\n    return this.#suggestions;\n  }\n\n  constructor(\n    search: SuggestSearch<\n      Options,\n      Suggestion,\n      SuggestionResponse,\n      RetrieveResponse\n    >,\n    wait = 0\n  ) {\n    super();\n\n    // Set 'suggest' method using debounce.\n    this.#suggestDebounce = debounce(\n      async (\n        searchText: string,\n        options: Partial<Options> = {}\n      ): Promise<void> => {\n        // Refresh abort controller.\n        this.#abort.abort();\n        this.#abort = createAbortController();\n\n        if (!searchText) {\n          this.#suggestions = null;\n          this.fire('suggest', this.#suggestions);\n          return;\n        }\n\n        const sessionToken = this.#getSessionTokenForSuggest();\n\n        try {\n          const res = await this.search.suggest(searchText, {\n            sessionToken,\n            ...options,\n            signal: this.#abort.signal\n          });\n\n          this.#suggestions = res;\n          this.fire('suggest', res);\n        } catch (err) {\n          if (err.name === 'AbortError') {\n            return;\n          }\n\n          this.fire('suggesterror', err);\n        }\n      },\n      wait,\n      () => this.#abort.signal\n    );\n\n    /**\n     * Define properties using {@link Object#defineProperties} so they are readonly during runtime,\n     * not just in TypeScript.\n     */\n    Object.defineProperties(this, {\n      search: {\n        value: search,\n        writable: false\n      },\n      debounce: {\n        value: wait,\n        writable: false\n      }\n    });\n  }\n\n  /**\n   * The {@link AbortController} is used to abort the current suggest, either\n   * because of a new {@link SearchSession#suggest} call, or because\n   * of {@link SearchSession#abort}.\n   *\n   * In both of these cases, a new {@link AbortController} is created,\n   * and the old one is aborted.\n   */\n  #abort = createAbortController();\n\n  #suggestDebounce: (searchText: string, options?: Partial<Options>) => void;\n\n  /** @section {Methods} */\n\n  /**\n   * {@link SearchSession#suggest} is \"part one\" of the two-step interactive search experience,\n   * and each suggestion includes metadata to present to the user.\n   *\n   * Suggestion objects **do not include geographic coordinates**. To get the coordinates of the result, use {@link SearchSession#retrieve}.\n   *\n   * It may be useful to call {@link SearchSession#canRetrieve} before calling this method, as the suggestion may be a reference to\n   * another suggest query. This can also be tested with {@link SearchSession#canSuggest}, and further calls to {@link SearchSession#suggest}.\n   *\n   * Results can be retrieved with the \"suggest\" event.\n   *\n   * @example\n   * ```typescript\n   * const search = new MapboxSearch({ accessToken: 'pk.my-mapbox-access-token' });\n   * const session = new SearchSession(search);\n   *\n   * session.addEventListener('suggest', (res) => {\n   *   presentResultsToUser(res.suggestions);\n   * });\n   *\n   * session.suggest('Washington D.C.');\n   * ```\n   */\n  suggest(\n    searchText: string,\n    options?: Partial<Options>\n  ): Promise<SuggestionResponse> {\n    this.#suggestDebounce(searchText, options);\n\n    return new Promise((resolve, reject) => {\n      let suggestFn: (val: SuggestionResponse) => void;\n      let suggestErrorFn: (val: Error) => void;\n\n      suggestFn = (res) => {\n        this.removeEventListener('suggest', suggestFn);\n        this.removeEventListener('suggesterror', suggestErrorFn);\n        resolve(res);\n      };\n      suggestErrorFn = (err) => {\n        this.removeEventListener('suggest', suggestFn);\n        this.removeEventListener('suggesterror', suggestErrorFn);\n        reject(err);\n      };\n\n      this.addEventListener('suggest', suggestFn);\n      this.addEventListener('suggesterror', suggestErrorFn);\n    });\n  }\n\n  /**\n   * Clears the current suggestions.\n   */\n  clear(): void {\n    this.suggest('');\n  }\n\n  /**\n   * {@link SearchSession#retrieve} is \"part two\" of the two-step interactive search experience and includes\n   * geographic coordinates in [GeoJSON](https://docs.mapbox.com/help/glossary/geojson/) format.\n   *\n   * {@link suggestion} is usually a {@link Suggestion} returned from \"part one,\" {@link SearchSession#suggest}.\n   *\n   * Multiple feature suggestions may be returned from a single search query, for example in an airport with\n   * multiple terminals.\n   *\n   * **Legal terms:**\n   *\n   * Due to legal terms from our data sources, results should not be stored in a customer database.\n   * Results should be used ephemerally and not persisted.\n   *\n   * This permanent policy is consistent with the [Mapbox Terms of Service](https://www.mapbox.com/tos/) and failure to comply\n   * may result in modified or discontinued service.\n   *\n   * Additionally, the [Mapbox Terms of Service](https://www.mapbox.com/tos/) states any rendering of a feature suggestion\n   * must be using Mapbox map services (for example, displaying results on Google Maps or MapKit JS is not allowed).\n   *\n   * **Disclaimer:**\n   *\n   * The failure of Mapbox to exercise or enforce any right or provision of these Terms will not constitute a waiver of such right or provision.\n   */\n  async retrieve(\n    suggestion: Suggestion,\n    options?: Partial<Options>\n  ): Promise<RetrieveResponse> {\n    const res = await this.search.retrieve(suggestion, {\n      sessionToken: this.#sessionToken,\n      ...options\n    });\n\n    if (!this.#persistSessionToken) {\n      // Reset session token.\n      this.#sessionToken = new SessionToken();\n      // Reset counter.\n      this.#sessionTokenRef = 0;\n    }\n\n    this.fire('retrieve', res);\n    return res;\n  }\n\n  /**\n   * Returns true if {@link SearchSession#retrieve} can be called on this suggestion,\n   * false otherwise.\n   *\n   * This indicates the [Mapbox Search API](https://docs.mapbox.com/api/search/search/) has geographic coordinates\n   * for this suggestion.\n   *\n   * This method is mutually exclusive with {@link SearchSession#canSuggest}.\n   */\n  canRetrieve(suggestion: Suggestion): boolean {\n    if (!this.search.canRetrieve) {\n      return true;\n    }\n\n    return this.search.canRetrieve(suggestion);\n  }\n\n  /**\n   * Returns true if {@link SearchSession#suggest} can be called on this suggestion,\n   * false otherwise.\n   *\n   * This indicates the [Mapbox Search API](https://docs.mapbox.com/api/search/search/) wants to do another\n   * suggestion search on this result, and does not have geographic coordinates.\n   *\n   * This method is mutually exclusive with {@link SearchSession#canRetrieve}.\n   */\n  canSuggest(suggestion: Suggestion): boolean {\n    if (!this.search.canSuggest) {\n      return true;\n    }\n\n    return this.search.canSuggest(suggestion);\n  }\n\n  /**\n   * Aborts the current {@link SearchSession#suggest} request.\n   */\n  abort(): void {\n    this.#abort.abort();\n    this.#abort = createAbortController();\n  }\n}\n", "import { FeatureSuggestion, Suggestion } from './search/types';\nimport {\n  AutofillFeatureSuggestion,\n  AutofillSuggestion\n} from './autofill/types';\n\nfunction featureToSuggestion(feature: FeatureSuggestion): Suggestion;\n\nfunction featureToSuggestion(\n  feature: AutofillFeatureSuggestion\n): AutofillSuggestion;\n\n/**\n * Utility function to convert the {@link FeatureSuggestion} properties to a\n * {@link Suggestion} object.\n */\nfunction featureToSuggestion(\n  feature: FeatureSuggestion | AutofillFeatureSuggestion\n): Suggestion | AutofillSuggestion {\n  const { properties } = feature;\n  return {\n    ...properties\n  };\n}\n\nexport { featureToSuggestion };\n", "import { AdministrativeUnitTypes } from '@mapbox/search-js-core';\nimport mapboxgl from 'mapbox-gl';\n\n/**\n * This is slightly higher than the default value of 1.2.\n * https://docs.mapbox.com/mapbox-gl-js/api/map/#map#flyto\n * We use a high speed value for cypress tests to increase test speed and improve test stability.\n */\nexport const FLY_TO_SPEED = 1.4;\n\n/**\n * Gets the center/zoom for a given bounding box.\n *\n * @param delta - Subtracted from the zoom level so users can fully see\n * the bounding box. This is a hack to add padding.\n */\nexport function bboxViewport(\n  map: mapboxgl.Map,\n  bounds: mapboxgl.LngLatBoundsLike,\n  delta = 0.5\n): mapboxgl.FlyToOptions {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const { center, zoom } = map.cameraForBounds(bounds)!;\n  const transformedZoom = Math.max(zoom - delta, 0);\n\n  return {\n    center,\n    zoom: transformedZoom,\n    speed: FLY_TO_SPEED\n  };\n}\n\n/**\n * Gets the maximum zoom level for a [Mapbox Search API](https://docs.mapbox.com/api/search/search/)\n * place type.\n *\n * @returns The maximum zoom level for the given place type, `16` if the type is not supported.\n */\nexport function getMaxZoom(placeType: AdministrativeUnitTypes): number {\n  switch (placeType) {\n    case 'street':\n      return 15;\n    case 'locality':\n    case 'oaza':\n      return 14;\n    case 'place':\n    case 'city':\n      return 13;\n    case 'district':\n      return 9;\n    case 'region':\n    case 'prefecture':\n      return 6;\n    case 'country':\n      return 4;\n    default:\n      return 16;\n  }\n}\n\n/**\n * Gets the base URL for the Static Images API for a given user style\n * {@link https://docs.mapbox.com/api/maps/static-images/}\n * @param username The username of the account to which the style belongs\n * @param styleId The ID of the style from which to create a static map\n * @returns\n */\nexport function getStaticBaseUrl(username: string, styleId: string): string {\n  return `https://api.mapbox.com/styles/v1/${username}/${styleId}/static/`;\n}\n", "import { getStaticBaseUrl } from './utils/map';\n\nexport const STATIC_BASE_URL_SATELLITE = getStaticBaseUrl(\n  'mapbox',\n  'satellite-streets-v11'\n);\n\nexport const AUTOFILL_SKU_TOKEN_PREFIX = '20d01';\n\nexport const MAPBOX_DOMAINS = ['mapbox.com', 'mapbox.cn', 'tilestream.net'];\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { SessionToken } from '@mapbox/search-js-core';\nimport { MAPBOX_DOMAINS } from '../constants';\n\n/**\n * LngLatBounds in [minX, minY, maxX, maxY] order.\n */\nexport type FlatLngLatBounds = [number, number, number, number];\n\n/**\n * Returns a random ID that is valid as a CSS identifier.\n *\n * CSS identifiers cannot start with a number, so we prefix the ID with `mbx`.\n */\nexport function randomValidID(): string {\n  return `mbx` + new SessionToken().id.slice(0, 8);\n}\n\n/**\n * Try to parse as a JSON object, returning `null` if it fails.\n */\nexport function tryParseJSON<T>(json: string): T | null {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport function deepEquals<T>(a: T, b: T): boolean {\n  if (a == null || b == null) {\n    return a === b;\n  }\n\n  if (typeof a !== 'object' || typeof b !== 'object') {\n    return a === b;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n\n  for (const key of aKeys) {\n    if (!deepEquals(a[key], b[key])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Round a number to a given number of digits after the decimal\n * @param num - Number to round\n * @param decimalPlaces - Number of places after the decimal to round to\n * @returns Rounded decimal number\n */\nexport function round(num: number, decimalPlaces: number): number {\n  const factorOfTen = Math.pow(10, decimalPlaces);\n  return Math.round(num * factorOfTen) / factorOfTen;\n}\n\n/**\n * Returns true if a hostname matches a local server protocol\n * @param hostname - A string representing window.location.hostname\n * @returns A boolean value\n */\nexport function isLocalServer(hostname: string): boolean {\n  return Boolean(\n    hostname.match(\n      /localhost|[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}|::1|\\.local|^$/gi\n    )\n  );\n}\n\n/**\n * Returns true if a hostname matches a Mapbox domain\n * @param hostname - A string representing window.location.hostname\n * @returns A boolean value\n */\nexport function isMapboxDomain(hostname: string): boolean {\n  return Boolean(MAPBOX_DOMAINS.some((domain) => hostname.includes(domain)));\n}\n", "/* eslint-disable custom-elements/expose-class-on-global */\n/* eslint-disable custom-elements/define-tag-after-class-definition */\nimport {\n  transformClassSelectors,\n  transformCSSClassRules,\n  transformDOMClassAttributes\n} from '../utils/class_name_transformers';\n\nimport { randomValidID } from '../utils';\n\n/**\n * Custom HTML element that uses the \"Scoped DOM\" approach,\n * which is not really Shadow DOM, but a way to encapsulate CSS classes\n * without Shadow DOM.\n *\n * This is a workaround for the fact that ARIA attributes are identified by\n * IDs, and cannot be shared between Shadow DOM and non-Shadow DOM (Light DOM)\n * elements due to encapsulation.\n *\n * Examples are an <input> element and its corresponding popover.\n *\n * The \"Scoped DOM\" approach is to encapsulate CSS classes by transforming\n * the class attribute of each element, prefixing each class with a\n * random UUID.\n *\n * Goals of the \"Scoped DOM\":\n *\n * - Once the [Accessibility Object Model (AOM)](https://wicg.github.io/aom/explainer.html) is finalized,\n *   replace all uses of {@link MapboxHTMLScopedElement} with {@link MapboxHTMLShadowElement}, and use\n *   AOM instead of IDREFs for ARIA attributes.\n *\n * - The Scoped DOM should be self-contained and work well enough that we don't\n *   need to constantly work around it.\n *\n * - The Scoped DOM should have extensive testing.\n */\nexport class HTMLScopedElement<\n  Events extends { [key: number | string | symbol]: Event } = Record<\n    string,\n    Event\n  >\n> extends HTMLElement {\n  // Seed to use for class name prefixing.\n  #seed = randomValidID();\n\n  protected get template(): HTMLTemplateElement {\n    return null;\n  }\n\n  protected get templateStyle(): string {\n    return null;\n  }\n\n  protected get templateUserStyle(): string {\n    return null;\n  }\n\n  #templateUserStyleElement: HTMLStyleElement;\n\n  /**\n   * `clonedCallback` should be a part of the Web Components spec, but sadly\n   * it is not.\n   *\n   * This is detected in {@link connectedCallback} below if the seed has changed.\n   */\n  clonedCallback(oldSeed: string, newSeed: string): void {\n    // New transform function that replaces any instances of the old\n    // seed with the new one.\n    const seedTransform = (className: string) =>\n      className.replace(oldSeed, newSeed);\n\n    transformDOMClassAttributes(this, seedTransform);\n\n    const styles = Array.from(this.querySelectorAll<HTMLStyleElement>('style'));\n    for (const style of styles) {\n      style.textContent = transformClassSelectors(\n        style.textContent,\n        seedTransform\n      );\n    }\n\n    // Find and repopulate #templateUserStyleElement.\n    if (styles.length) {\n      this.#templateUserStyleElement = styles[styles.length - 1];\n    }\n  }\n\n  connectedCallback(): void {\n    // Return if we already have children.\n    if (this.childElementCount > 0) {\n      const oldSeed = this.dataset.seed;\n      const newSeed = this.#seed;\n\n      // If we have a different seed than before, say from a clone,\n      // then we need to update any templates and styles.\n      if (oldSeed && oldSeed !== newSeed) {\n        this.clonedCallback(oldSeed, newSeed);\n\n        // Finally, make sure the dataset has the new seed.\n        this.dataset.seed = newSeed;\n      }\n\n      return;\n    }\n\n    this.dataset.seed = this.#seed;\n\n    // Use the Light DOM to contain our inner elements,\n    // and do CSS class obfuscation in the \"Scoped DOM.\"\n    const template = this.template;\n    if (template) {\n      const element = this.prepareTemplate(template);\n      this.appendChild(element);\n    }\n\n    const templateStyle = this.templateStyle;\n    if (templateStyle) {\n      const style = document.createElement('style');\n      style.textContent = this.prepareCSS(templateStyle);\n      this.appendChild(style);\n    }\n\n    const userStyle = document.createElement('style');\n    if (this.templateUserStyle) {\n      userStyle.textContent = this.prepareCSS(this.templateUserStyle);\n    }\n    this.appendChild(userStyle);\n    this.#templateUserStyleElement = userStyle;\n  }\n\n  /**\n   * Transform function for {@link transformCSSClassRules} and\n   * {@link transformDOMClassAttributes}.\n   */\n  #transform = (className: string): string => {\n    return `${this.#seed}--${className}`;\n  };\n\n  prepareTemplate(template: HTMLTemplateElement): HTMLElement {\n    const element = template.content.firstElementChild;\n    return transformDOMClassAttributes(\n      element.cloneNode(true) as HTMLElement,\n      this.#transform\n    );\n  }\n\n  prepareCSS(css: string): string {\n    return transformCSSClassRules(css, this.#transform);\n  }\n\n  updateTemplateUserStyle(style: string): void {\n    if (!this.#templateUserStyleElement) {\n      return;\n    }\n    this.#templateUserStyleElement.textContent = this.prepareCSS(style);\n  }\n\n  querySelector<E extends Element = Element>(selectors: string): E {\n    return super.querySelector(\n      transformClassSelectors(selectors, this.#transform)\n    );\n  }\n\n  querySelectorAll<E extends Element = Element>(\n    selectors: string\n  ): NodeListOf<E> {\n    return super.querySelectorAll(\n      transformClassSelectors(selectors, this.#transform)\n    );\n  }\n\n  addEventListener<K extends keyof Events>(\n    type: K,\n    listener: (this: HTMLFormElement, ev: Events[K]) => unknown,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions\n  ): void {\n    super.addEventListener(type, listener, options);\n  }\n\n  removeEventListener<K extends keyof Events>(\n    type: K,\n    listener: (this: HTMLFormElement, ev: Events[K]) => unknown,\n    options?: boolean | EventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions\n  ): void {\n    super.removeEventListener(type, listener, options);\n  }\n\n  dispatchEvent<K extends keyof Events>(event: Events[K]): boolean {\n    return super.dispatchEvent(event);\n  }\n}\n", "/**\n * `MapboxHTMLEvent` is an event dispatched by the Search Box and Autofill\n * components.\n *\n * @example\n * ```\n * const search = new MapboxSearchBox();\n * search.addEventListener('retrieve', (event: MapboxHTMLEvent<Suggestion>) => {\n *  console.log(event.detail);\n * });\n */\nexport class MapboxHTMLEvent<T> extends CustomEvent<T> {\n  constructor(type: string, detail?: T) {\n    super(type, {\n      composed: true,\n      detail\n    });\n  }\n\n  /**\n   * Returns a shallow copy of the event. This method is useful for\n   * manually bubbling events from a connected component.\n   *\n   * @param newTarget - Optional event target to assign to the clone\n   *\n   * @example\n   * `MapboxSearchBox` will call `event.clone()` on the `retrieve`\n   * event from `MapboxSearchListbox`, and then dispatch the cloned event.\n   */\n  clone(newTarget?: EventTarget): MapboxHTMLEvent<T> {\n    const eventClone = new MapboxHTMLEvent(this.type, this.detail);\n    if (newTarget) {\n      Object.defineProperty(eventClone, 'target', { value: newTarget });\n    }\n    return eventClone;\n  }\n}\n", "import closeIcon from './icons/close.svg';\nimport questionIcon from './icons/question.svg';\nimport markerIcon from './icons/marker.svg';\n\nimport { version } from '../package.json';\nconst styleToggleSatelliteImg = `https://api.mapbox.com/search-js/v${version}/img/style-toggle-satellite.jpg`;\nconst styleToggleDefaultImg = `https://api.mapbox.com/search-js/v${version}/img/style-toggle-default.jpg`;\n\n/**\n * Reference:\n * https://getbootstrap.com/docs/5.0/layout/breakpoints/\n */\nexport const MOBILE_BREAKPOINT = 768 - 1;\nconst MOBILE_MEDIA_QUERY = `@media only screen and (max-width: ${MOBILE_BREAKPOINT}px)`;\n\n/**\n * Currently, the only expression supported is\n * `['mobile', mobile_value, tablet_and_desktop_value]`.\n *\n * @typedef Expression\n */\ntype Expression = ['mobile', string, string];\n\n/**\n * `ThemeVariables` are a collection of CSS variables that style Control Theme API\n * elements.\n *\n * @typedef ThemeVariables\n */\nexport interface ThemeVariables {\n  /** @section {Sizing} */\n\n  /**\n   * Unit is the base font size and can be referenced in other variables as multiples of `1em`.\n   *\n   * Analogous to [`font-size`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size).\n   */\n  unit?: string | Expression;\n  /**\n   * Unit header is a derivative of `unit` and is used for modal headers.\n   *\n   * Analogous to [`font-size`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size).\n   */\n  unitHeader?: string | Expression;\n\n  /**\n   * Minimum width of elements such as modals and listboxes.\n   *\n   * Analogous to CSS [`<length>`](https://developer.mozilla.org/en-US/docs/Web/CSS/length).\n   */\n  minWidth?: string;\n  /**\n   * Spacing between items in an element.\n   *\n   * Analogous to CSS [`<length>`](https://developer.mozilla.org/en-US/docs/Web/CSS/length).\n   */\n  spacing?: string;\n  /**\n   * Padding of items in an element.\n   *\n   * Analogous to CSS [`<length>`](https://developer.mozilla.org/en-US/docs/Web/CSS/length).\n   */\n  padding?: string;\n  /**\n   * Padding for contents of modal elements.\n   *\n   * Analogous to CSS [`<length>`](https://developer.mozilla.org/en-US/docs/Web/CSS/length).\n   */\n  paddingModal?: string;\n\n  /** @section {Colors} */\n\n  /**\n   * Color of the primary text.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: dark gray\n   */\n  colorText?: string;\n  /**\n   * Color of the primary accent color.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: variant of blue\n   */\n  colorPrimary?: string;\n  /**\n   * Color of the secondary accent color.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: blue-gray\n   */\n  colorSecondary?: string;\n\n  /**\n   * Background color for elements such as modals and listboxes.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: white\n   */\n  colorBackground?: string;\n  /**\n   * Background color for items on hover.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: light gray\n   */\n  colorBackgroundHover?: string;\n  /**\n   * Background color for items on press.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: dark gray\n   */\n  colorBackgroundActive?: string;\n\n  /**\n   * Backdrop color of body content behind modals.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: black with alpha value\n   */\n  colorBackdrop?: string;\n\n  /** @section {Borders and box shadows} */\n\n  /**\n   * Border color of elements such as modals and listboxes.\n   *\n   * Analogous to CSS [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border).\n   */\n  border?: string;\n  /**\n   * Border radius of elements such as modals and listboxes.\n   *\n   * Analogous to CSS [`border-radius`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius).\n   */\n  borderRadius?: string;\n  /**\n   * Box shadow of elements such as modals and listboxes.\n   *\n   * Analogous to CSS [`box-shadow`](https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow).\n   */\n  boxShadow?: string;\n\n  /** @section {Typography} */\n\n  /**\n   * Line height.\n   *\n   * Analogous to CSS [`line-height`](https://developer.mozilla.org/en-US/docs/Web/CSS/line-height).\n   * **Default**: 1.2\n   */\n  lineHeight?: string;\n  /**\n   * Font family.\n   *\n   * Analogous to CSS [`font-family`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-family).\n   * **Default**: Sans-serif [system font stack](https://systemfontstack.com/)\n   */\n  fontFamily?: string;\n  /**\n   * Font weight for body text.\n   *\n   * Analogous to CSS [`font-weight`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight).\n   * **Default**: normal\n   */\n  fontWeight?: string;\n  /**\n   * Font weight for subheadings.\n   *\n   * Analogous to CSS [`font-weight`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight).\n   * **Default**: 600\n   */\n  fontWeightSemibold?: string;\n  /**\n   * Font weight for headings and item titles.\n   *\n   * Analogous to CSS [`font-weight`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight).\n   * **Default**: bold\n   */\n  fontWeightBold?: string;\n\n  /** @section {Transitions} */\n\n  /**\n   * The duration to use for listbox animations.\n   *\n   * Analogous to CSS [`<time>`](https://developer.mozilla.org/en-US/docs/Web/CSS/time).\n   * **Default**: `150ms`\n   */\n  duration?: string;\n  /**\n   * The timing function to use for listbox animations.\n   *\n   * Analogous to CSS [`<easing-function>`](https://developer.mozilla.org/en-US/docs/Web/CSS/easing-function).\n   * **Default**: `ease-out`\n   */\n  curve?: string;\n}\n\n/**\n * `ThemeIcons` are [SVG icons](https://developer.mozilla.org/en-US/docs/Web/SVG)\n * that are used in Control Theme API elements.\n *\n * Roughly, icon names and their defaults are the same as\n * [Mapbox's Assembly](https://labs.mapbox.com/assembly/icons/).\n *\n * Values must be valid SVG plain-text. Unless otherwise noted,\n * icons should be 18px in size and have appropriate dimensions set.\n *\n * Icons can also be filled with 'currentColor'.\n *\n * @typedef ThemeIcons\n * @example\n * ```typescript\n * const icons = {\n *   close: `\n * <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n * <svg viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\n *   <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.79289 3.79289C4.18342 3.40237 4.81658 3.40237 5.20711 3.79289L9 7.58579L12.7929 3.79289C13.1834 3.40237 13.8166 3.40237 14.2071 3.79289C14.5976 4.18342 14.5976 4.81658 14.2071 5.20711L10.4142 9L14.2071 12.7929C14.5976 13.1834 14.5976 13.8166 14.2071 14.2071C13.8166 14.5976 13.1834 14.5976 12.7929 14.2071L9 10.4142L5.20711 14.2071C4.81658 14.5976 4.18342 14.5976 3.79289 14.2071C3.40237 13.8166 3.40237 13.1834 3.79289 12.7929L7.58579 9L3.79289 5.20711C3.40237 4.81658 3.40237 4.18342 3.79289 3.79289Z\" fill=\"currentColor\"/>\n * </svg>\n * `\n * }\n * ```\n */\nexport interface ThemeIcons {\n  /**\n   * Close icon.\n   */\n  close?: string;\n  /**\n   * Question mark icon.\n   */\n  question?: string;\n\n  /**\n   * Icon for map markers. Can be any size.\n   */\n  marker?: string;\n}\n\n/**\n * `ThemeImages` are raster images that are used in Control Theme API elements.\n *\n * There are currently only two images, \"toggle default\" and \"toggle satellite,\"\n * which specify images for a Map/Satellite toggle button.\n *\n * Values must be valid URLs accessible by the expected browser environment. [Data URLs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs)\n * and [Blob URLs](https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL) are also supported.\n *\n * @typedef ThemeImages\n */\nexport interface ThemeImages {\n  /**\n   * Image for the \"Map\" of the Map/Satellite toggle button.\n   */\n  styleToggleDefault?: string;\n  /**\n   * Image for the \"Satellite\" of the Map/Satellite toggle button.\n   */\n  styleToggleSatellite?: string;\n}\n\n/**\n * The Control Theme API is a way to apply your own design system to\n * Mapbox Search JS Web elements.\n *\n * Control themes use a combination of CSS variables, custom scoped CSS, and\n * SVG icons.\n *\n * @typedef Theme\n * @example\n * ```typescript\n * const theme = {\n *   variables: {\n *     fontFamily: 'Avenir, sans-serif',\n *     unit: '14px',\n *     padding: '0.5em',\n *     borderRadius: '0',\n *     boxShadow: '0 0 0 1px silver',\n *   }\n * };\n *\n * autofill({ theme });\n * ```\n */\nexport interface Theme {\n  /**\n   * CSS variables to be applied to the control.\n   */\n  variables?: ThemeVariables;\n  /**\n   * SVG icon overrides to be applied to the control.\n   */\n  icons?: ThemeIcons;\n  /**\n   * Raster image URLs to be applied to the control.\n   */\n  images?: ThemeImages;\n  /**\n   * Optional CSS text to be inserted into Scoped CSS elements. As such, any\n   * CSS will not interact with the rest of the page.\n   *\n   * TODO: Class names are element-specific and have yet to be standardized. Breaking\n   * changes are likely and will be flagged in CHANGELOG.md.\n   */\n  cssText?: string;\n}\n\nconst DEFAULT_THEME: Theme = {\n  variables: {\n    // Added as font size on container, so em references this value.\n    unit: ['mobile', '16px', '14px'],\n    unitHeader: ['mobile', '24px', '18px'],\n\n    minWidth: 'min(300px, 100vw)',\n    spacing: '0.75em',\n    padding: '0.5em 0.75em',\n    paddingModal: '1.25em',\n\n    colorText: 'rgba(0, 0, 0, 0.75)',\n    colorPrimary: '#4264FB',\n    colorSecondary: '#667F91',\n\n    colorBackground: '#fff',\n    colorBackgroundHover: '#f5f5f5',\n    colorBackgroundActive: '#f0f0f0',\n\n    colorBackdrop: 'rgba(102, 127, 145, 0.3)',\n\n    border: 'none',\n\n    borderRadius: '4px',\n    boxShadow: `\n      0 0 10px 2px rgba(0, 0, 0, 0.05),\n      0 0 6px 1px rgba(0, 0, 0, 0.1),\n      0 0 0 1px rgba(0, 0, 0, 0.1)\n    `,\n\n    lineHeight: '1.2em',\n    /**\n     * Reference:\n     * https://systemfontstack.com/\n     */\n    fontFamily: `\n      -apple-system, BlinkMacSystemFont,\n      avenir next, avenir,\n      segoe ui,\n      helvetica neue, helvetica,\n      Ubuntu, roboto, noto, arial, sans-serif\n    `,\n    fontWeight: 'normal',\n    fontWeightSemibold: '600',\n    fontWeightBold: 'bold',\n\n    duration: '150ms',\n    curve: 'ease-out'\n  },\n  icons: {\n    close: closeIcon,\n    question: questionIcon,\n\n    marker: markerIcon\n  },\n  images: {\n    styleToggleDefault: styleToggleDefaultImg,\n    styleToggleSatellite: styleToggleSatelliteImg\n  }\n};\n\ntype CSSText = string;\n\n/**\n * Applies {@link Theme} to the given HTML element as CSS variables\n * in the style attribute.\n */\nexport function getThemeCSS(rootSelector: string, theme: Theme = {}): CSSText {\n  const variables = {\n    // Make sure to shallow apply default variables.\n    ...DEFAULT_THEME.variables,\n    ...(theme.variables || {})\n  };\n\n  let cssText = theme.cssText || '';\n  let rootVariables = '';\n\n  for (const [key, value] of Object.entries(variables)) {\n    // Is a literal, not an expression.\n    if (!Array.isArray(value)) {\n      rootVariables += `--${key}: ${value};`;\n      continue;\n    }\n\n    // Is an expression; only support \"mobile\" for now.\n    if (value[0] !== 'mobile') {\n      const valueStr = JSON.stringify(value);\n      throw new Error(\n        `Unsupported expression in theme variables: ${key} ${valueStr}`\n      );\n    }\n\n    const [, mobileValue, desktopValue] = value;\n\n    // On mobile, force the mobile value.\n    cssText += `${MOBILE_MEDIA_QUERY} { ${rootSelector} { --${key}: ${mobileValue} !important; } }`;\n    // Our default is still the desktop value.\n    rootVariables += `--${key}: ${desktopValue};`;\n  }\n\n  return cssText + `${rootSelector} { ${rootVariables} }`;\n}\n\nexport function getIcon<I extends keyof Theme['icons']>(\n  iconName: I,\n  theme: Theme = {}\n): string | undefined {\n  const icons = {\n    ...DEFAULT_THEME.icons,\n    ...(theme.icons || {})\n  };\n\n  const svgString = icons[iconName];\n  return svgString;\n}\n\nexport function getImage<I extends keyof Theme['images']>(\n  imageName: I,\n  theme: Theme = {}\n): string | undefined {\n  const images = {\n    ...DEFAULT_THEME.images,\n    ...(theme.images || {})\n  };\n\n  const imgString = images[imageName];\n  return imgString;\n}\n", "import { createPopper } from '@popperjs/core/lib/popper-lite';\nimport {\n  SearchSession,\n  Suggestion as SearchSuggestion,\n  AutofillSuggestion,\n  AutofillRetrieveResponse,\n  FeatureSuggestion,\n  AutofillFeatureSuggestion\n} from '@mapbox/search-js-core';\n\nimport { HTMLScopedElement } from './HTMLScopedElement';\n\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\nimport { Theme, getThemeCSS } from '../theme';\nimport { randomValidID } from '../utils';\nimport {\n  bindElements,\n  createElementFromString,\n  getChildElements\n} from '../utils/dom';\n\nimport style from '../style.css';\n\nconst TEMPLATE = createElementFromString<HTMLTemplateElement>(`\n<template>\n  <div class=\"MapboxSearch\">\n      <div class=\"Label\" role=\"label\" aria-live=\"polite\" aria-atomic=\"true\">\n      </div>\n      <div class=\"Results\" aria-hidden=\"true\">\n        <div class=\"ResultsList\" role=\"listbox\">\n        </div>\n        <div class=\"ResultsAttribution\" aria-hidden=\"true\">\n          <a href=\"https://www.mapbox.com/search-service\" target=\"_blank\" tabindex=\"-1\">\n            Powered by Mapbox\n          </a>\n        </div>\n      </div>\n  </div>\n</template>\n`);\n\nconst RENDER_TEMPLATE = createElementFromString<HTMLTemplateElement>(`\n<template>\n  <div class=\"Suggestion\" role=\"option\">\n    <div class=\"SuggestionName\"></div>\n    <div class=\"SuggestionDesc\"></div>\n  </div>\n</template>\n`);\n\nfunction getAriaIdForSuggestion(resultListId: string, i: number): string {\n  return `${resultListId}-${i}`;\n}\n\ntype Binding = {\n  /**\n   * Wrapper around the entire component.\n   */\n  MapboxSearch: HTMLElement;\n  /**\n   * Results container, which contains:\n   * - {@link ResultsList}\n   * - {@link Label}\n   * - Attribution.\n   */\n  Results: HTMLDivElement;\n  /**\n   * Exposed as a listbox to assistive technologies.\n   */\n  ResultsList: HTMLUListElement;\n  /**\n   * Exposed as a label.\n   *\n   * Visually hidden but can \"announce\" the current selection to\n   * assistive technologies.\n   */\n  Label: HTMLDivElement;\n};\n\ntype ListboxEventTypes<SuggestionResponse, RetrieveResponse> = {\n  suggest: MapboxHTMLEvent<SuggestionResponse>;\n  suggesterror: MapboxHTMLEvent<Error>;\n  retrieve: MapboxHTMLEvent<RetrieveResponse>;\n};\n\nexport class MapboxSearchListbox<\n  Options,\n  Suggestion extends SearchSuggestion | AutofillSuggestion,\n  SuggestionResponse extends { suggestions: Suggestion[] },\n  RetrieveResponse\n> extends HTMLScopedElement<\n  ListboxEventTypes<SuggestionResponse, RetrieveResponse>\n> {\n  protected override get template(): HTMLTemplateElement {\n    return TEMPLATE;\n  }\n\n  protected override get templateStyle(): string {\n    return style;\n  }\n\n  protected get templateUserStyle(): string {\n    return getThemeCSS('.MapboxSearch', this.theme);\n  }\n\n  #sessionInternal: SearchSession<\n    Options,\n    Suggestion,\n    SuggestionResponse,\n    RetrieveResponse\n  > | null;\n\n  get session(): SearchSession<\n    Options,\n    Suggestion,\n    SuggestionResponse,\n    RetrieveResponse\n  > | null {\n    return this.#sessionInternal;\n  }\n\n  set session(\n    newSession: SearchSession<\n      Options,\n      Suggestion,\n      SuggestionResponse,\n      RetrieveResponse\n    > | null\n  ) {\n    const oldSession = this.#sessionInternal;\n\n    if (oldSession) {\n      newSession.removeEventListener('suggest', this.#handleSuggest);\n      newSession.removeEventListener('suggesterror', this.#handleSuggestError);\n    }\n\n    if (newSession) {\n      newSession.addEventListener('suggest', this.#handleSuggest);\n      newSession.addEventListener('suggesterror', this.#handleSuggestError);\n    }\n\n    this.#sessionInternal = newSession;\n  }\n\n  get suggestions(): Suggestion[] | null {\n    return this.session.suggestions?.suggestions;\n  }\n\n  #popper: ReturnType<typeof createPopper> | null = null;\n\n  #binding: Binding;\n\n  #labelID = randomValidID();\n  #resultListID = randomValidID();\n\n  #inputInternal: HTMLInputElement | null;\n\n  get input(): HTMLInputElement | null {\n    return this.#inputInternal;\n  }\n\n  set input(newInput: HTMLInputElement | null) {\n    const oldInput = this.#inputInternal;\n\n    if (oldInput) {\n      oldInput.removeEventListener('input', this.#handleInput);\n      oldInput.removeEventListener('focus', this.#handleFocus);\n      oldInput.removeEventListener('blur', this.#handleBlur);\n      oldInput.removeEventListener('keydown', this.#handleKeyDown);\n\n      if (this.#popper) {\n        this.#popper.destroy();\n      }\n    }\n\n    if (newInput) {\n      newInput.addEventListener('input', this.#handleInput);\n      newInput.addEventListener('focus', this.#handleFocus);\n      newInput.addEventListener('blur', this.#handleBlur);\n      newInput.addEventListener('keydown', this.#handleKeyDown);\n\n      // Set ARIA role and attributes.\n      newInput.setAttribute('role', 'combobox');\n      newInput.setAttribute('aria-autocomplete', 'list');\n      newInput.setAttribute('aria-controls', this.#resultListID);\n\n      if (this.isConnected) {\n        this.#popper = createPopper(newInput, this.#binding.Results, {\n          placement: 'bottom-start'\n        });\n      }\n    }\n\n    this.#inputInternal = newInput;\n  }\n\n  #selectedIndexInternal = 0;\n\n  get selectedIndex(): number {\n    return this.#selectedIndexInternal;\n  }\n\n  set selectedIndex(newIndex: number) {\n    const oldIndex = this.#selectedIndexInternal;\n    this.#selectedIndexInternal = newIndex;\n\n    // Update accessibility flags.\n    const { ResultsList, Label } = this.#binding;\n\n    const id = getAriaIdForSuggestion(this.#resultListID, newIndex);\n    this.input.setAttribute('aria-activedescendant', id);\n    ResultsList.setAttribute('aria-activedescendant', id);\n\n    // Update the selected suggestion.\n    if (oldIndex !== newIndex) {\n      const oldId = getAriaIdForSuggestion(this.#resultListID, oldIndex);\n      const oldEl = ResultsList.querySelector(`#${oldId}`);\n      oldEl?.removeAttribute('aria-selected');\n\n      const el = ResultsList.querySelector(`#${id}`);\n      el?.setAttribute('aria-selected', 'true');\n    }\n\n    Label.textContent =\n      this.suggestions[newIndex].address +\n      `: Suggestion ${newIndex + 1} of ${this.suggestions.length}`;\n  }\n\n  #showResults(): void {\n    if (!this.suggestions || !this.suggestions.length) {\n      return;\n    }\n\n    const { Results, MapboxSearch } = this.#binding;\n\n    // Calculate width, enable display\n    const rect = this.input.getBoundingClientRect();\n    MapboxSearch.style.setProperty('--width', `${rect.width}px`);\n    MapboxSearch.style.setProperty('display', 'block');\n\n    // Update accessibility flags.\n    this.input.setAttribute('aria-expanded', 'true');\n    Results.removeAttribute('aria-hidden');\n    // Reset selected index.\n    this.selectedIndex = 0;\n  }\n\n  #hideResults(): void {\n    const { Results, ResultsList } = this.#binding;\n\n    // Update accessibility flags.\n    Results.setAttribute('aria-hidden', 'true');\n    this.input.removeAttribute('aria-expanded');\n    ResultsList.removeAttribute('aria-activedescendant');\n    this.input.removeAttribute('aria-activedescendant');\n  }\n\n  renderItem(i: number): HTMLElement {\n    const element = this.prepareTemplate(RENDER_TEMPLATE);\n    element.id = getAriaIdForSuggestion(this.#resultListID, i);\n\n    return element;\n  }\n\n  fillItem(el: Element, item: Suggestion, i: number): void {\n    const [nameEl, descriptionEl] = Array.from(\n      el.querySelectorAll('[role=\"option\"] > *')\n    );\n\n    nameEl.textContent =\n      'address_line1' in item\n        ? item.address_line1 || item.matching_name || item.feature_name\n        : item.matching_name || item.feature_name;\n    descriptionEl.textContent = item.description;\n\n    if (i === this.selectedIndex) {\n      el.setAttribute('aria-selected', 'true');\n    } else {\n      el.removeAttribute('aria-selected');\n    }\n  }\n\n  #renderResultsList(): void {\n    const { ResultsList } = this.#binding;\n    const suggestions = this.suggestions;\n\n    if (!suggestions || !suggestions.length) {\n      // Speed optimization?\n      ResultsList.innerHTML = '';\n      this.#hideResults();\n      return;\n    }\n\n    /**\n     * Make sure we have the correct number of nodes.\n     */\n    const elements = getChildElements(ResultsList);\n    // Too few, add any we're missing.\n    if (suggestions.length > elements.length) {\n      for (let i = elements.length; i < suggestions.length; i++) {\n        const item = this.renderItem(i);\n        elements.push(item);\n\n        // Setup selected index listener.\n        item.onmouseenter = () => {\n          this.selectedIndex = i;\n        };\n\n        ResultsList.appendChild(item);\n      }\n    }\n\n    // Too many, remove any we're not using anymore.\n    if (suggestions.length < elements.length) {\n      for (let i = suggestions.length; i < elements.length; i++) {\n        elements[i].remove();\n      }\n    }\n\n    /**\n     * Fill out DOM nodes with our data.\n     */\n    for (const suggestion of suggestions) {\n      const i = suggestions.indexOf(suggestion);\n      const element = elements[i];\n\n      this.fillItem(element, suggestion, i);\n      // Override 'onclick' for autofill.\n      element.onclick = () => {\n        this.retrieve(suggestion);\n      };\n    }\n  }\n\n  #optionsInternal: Partial<Options> = {};\n\n  get options(): Partial<Options> {\n    return this.#optionsInternal;\n  }\n\n  set options(newOptions: Partial<Options>) {\n    this.#optionsInternal = newOptions;\n  }\n\n  #themeInternal: Theme = {};\n\n  get theme(): Theme {\n    return this.#themeInternal;\n  }\n\n  set theme(theme: Theme) {\n    this.#themeInternal = theme;\n\n    if (!this.#binding || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(getThemeCSS('.MapboxSearch', theme));\n  }\n\n  retrieveFeature: FeatureSuggestion | AutofillFeatureSuggestion = null;\n\n  #handleInput = (e: InputEvent): void => {\n    // Prevent duping requests.\n    const { Results } = this.#binding;\n    const input = e.target as HTMLInputElement;\n\n    if (input.dataset['mapboxSuccess']) {\n      delete input.dataset['mapboxSuccess'];\n      return;\n    }\n\n    const searchText = input.value;\n\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-busy\n    Results.setAttribute('aria-busy', 'true');\n\n    this.session.suggest(searchText, this.options);\n  };\n\n  /**\n   * Connected to {@link SearchSession}.\n   */\n  #handleSuggest = (result: SuggestionResponse): void => {\n    if (!result || !result.suggestions) {\n      this.#hideResults();\n      return;\n    }\n\n    this.#renderResultsList();\n    if (result.suggestions.length) {\n      this.#showResults();\n    }\n\n    // Make sure to fire events after our side-effects are done.\n    this.dispatchEvent(new MapboxHTMLEvent('suggest', result));\n\n    const { Results } = this.#binding;\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-busy\n    Results.setAttribute('aria-busy', 'false');\n  };\n\n  /**\n   * Connected to {@link SearchSession}.\n   */\n  #handleSuggestError = (error: Error): void => {\n    // TODO: Add a user facing event view.\n    this.dispatchEvent(new MapboxHTMLEvent('suggesterror', error));\n\n    const { Results } = this.#binding;\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-busy\n    Results.setAttribute('aria-busy', 'false');\n\n    this.#hideResults();\n  };\n\n  #handleFocus = (): void => {\n    const input = this.input;\n    delete input.dataset['mapboxSuccess'];\n\n    this.#showResults();\n  };\n\n  #handleBlur = (): void => {\n    // See if we're the target.\n    if (document.activeElement === this.input) {\n      return;\n    }\n\n    // Abort any in-progress operations.\n    this.session.abort();\n    this.#hideResults();\n  };\n\n  #handleKeyDown = (e: KeyboardEvent): void => {\n    if (e.key === 'Escape') {\n      this.#hideResults();\n      return;\n    }\n\n    if (e.key === 'ArrowUp') {\n      e.preventDefault();\n      this.selectedIndex = Math.max(0, this.selectedIndex - 1);\n      return;\n    }\n\n    if (e.key === 'ArrowDown') {\n      e.preventDefault();\n      this.selectedIndex = Math.min(\n        this.selectedIndex + 1,\n        this.suggestions.length - 1\n      );\n      return;\n    }\n\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      this.retrieve(this.suggestions[this.selectedIndex]);\n      return;\n    }\n  };\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n\n    this.#binding = bindElements<Binding>(this, {\n      MapboxSearch: '.MapboxSearch',\n      Results: '.Results',\n      ResultsList: '.ResultsList',\n      Label: '.Label'\n    });\n\n    const { Results, ResultsList, Label } = this.#binding;\n\n    Label.id = this.#labelID;\n    ResultsList.id = this.#resultListID;\n    ResultsList.setAttribute('aria-labelledby', this.#labelID);\n\n    Results.addEventListener('blur', this.#handleBlur);\n\n    if (!this.#popper && this.input) {\n      this.#popper = createPopper(this.input, this.#binding.Results, {\n        placement: 'bottom-start'\n      });\n    }\n\n    // Update popper on next frame.\n    requestAnimationFrame(() => {\n      if (this.#popper) {\n        this.#popper.update();\n      }\n    });\n  }\n\n  disconnectedCallback(): void {\n    // Make sure to unbind input listeners.\n    this.input = null;\n\n    const { Results } = this.#binding;\n    Results.removeEventListener('blur', this.#handleBlur);\n  }\n\n  async retrieve(suggestion: Suggestion): Promise<void> {\n    const input = this.input;\n    if (input) {\n      input.dataset['mapboxSuccess'] = 'true';\n    }\n\n    const result = await this.session.retrieve(suggestion, this.options);\n    this.retrieveFeature = (result as AutofillRetrieveResponse).features?.[0];\n\n    this.#hideResults();\n    this.dispatchEvent(new MapboxHTMLEvent('retrieve', result));\n  }\n\n  focus(): void {\n    // Refire the event internally, in case we missed it\n    // and the end user is trying to replay it.\n    if (document.activeElement === this.input) {\n      this.#handleFocus();\n    } else {\n      this.input.focus();\n    }\n  }\n\n  updatePopover(): void {\n    if (this.#popper) {\n      this.#popper.update();\n    }\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxSearchListbox: typeof MapboxSearchListbox;\n  }\n}\n\nwindow.MapboxSearchListbox = MapboxSearchListbox;\n\nif (!window.customElements.get('mapbox-search-listbox')) {\n  customElements.define('mapbox-search-listbox', MapboxSearchListbox);\n}\n", "/**\n * This is to make sure our custom \"buttons\" have appropriate\n * keyboard controls for WAI-ARIA.\n *\n * Reference: https://www.w3.org/TR/wai-aria-practices-1.1/#keyboard-interaction-3\n */\nexport function ariaButtonKeyDown(e: KeyboardEvent): void {\n  const el = e.currentTarget as HTMLElement;\n\n  if (e.key === ' ' || e.key === 'Enter') {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // Simulate a click event.\n    el.dispatchEvent(\n      new MouseEvent('click', {\n        bubbles: true,\n        composed: true\n      })\n    );\n  }\n}\n", "import {\n  AutofillFeatureSuggestion,\n  AutofillRetrieveResponse,\n  AutofillSuggestion,\n  featureToSuggestion\n} from '@mapbox/search-js-core';\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\nimport { InputFormElement, isVisible, setValue } from './dom';\n\n/**\n * A list of WHATWG autofill tokens relevant to addresses. These will be used to\n * set the `autocomplete` attribute on the input element.\n *\n * Reference: https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofilling-form-controls:-the-autocomplete-attribute\n */\ntype AutofillTokens =\n  | 'street-address'\n  | 'address-line1'\n  | 'address-line2'\n  | 'address-line3'\n  | 'address-level4'\n  | 'address-level3'\n  | 'address-level2'\n  | 'address-level1'\n  | 'country'\n  | 'country-name'\n  | 'postal-code';\n\nexport const AUTOFILL_TOKENS = new Set<AutofillTokens>([\n  'street-address',\n  'address-line1',\n  'address-line2',\n  'address-line3',\n  'address-level4',\n  'address-level3',\n  'address-level2',\n  'address-level1',\n  'country',\n  'country-name',\n  'postal-code'\n]);\n\n/**\n * A list of WHATWG autofill tokens we can safely ignore when traversing\n * `autocomplete` attributes.\n */\nconst AUTOFILL_SKIP_TOKENS = new Set(['off', 'on', 'true', 'false']);\n\n/**\n * Finds the parent form element of the given element, if any.\n *\n * @returns The parent form element, or `null` if none was found.\n */\nexport function findParentForm(el: Element): HTMLFormElement | null {\n  let node = el.parentNode;\n  while (node) {\n    if (node instanceof HTMLFormElement) {\n      return node;\n    }\n    node = node.parentNode;\n  }\n\n  return null;\n}\n\n/**\n * Finds input elements that are eligible to be used for Address Autofill.\n * Eligible inputs include those with standard WHATWG autocomplete attribute values, either 'address-line1' or 'street-address'\n * @param form - If specified, searches within the given form instead of the whole document\n * @returns Array of input elements\n */\nexport function findAddressInputs(form?: HTMLFormElement): HTMLInputElement[] {\n  const parent = form || document;\n  return Array.from(\n    parent.querySelectorAll<HTMLInputElement>(\n      'input[autocomplete~=\"address-line1\"], input[autocomplete~=\"street-address\"]'\n    )\n  );\n}\n\nconst SECTION = 'section-';\n\nconst SECTION_DEFAULT = 'section-default';\nconst SECTION_SHIPPING = 'section-shipping';\nconst SECTION_BILLING = 'section-billing';\n\ntype FormStructure = {\n  input: InputFormElement;\n  section: string;\n  field: AutofillTokens;\n}[];\n\n/**\n * Implementation of \"autocomplete\" {@link FormStructure} that matches the\n * WHATWG spec and somewhat Chromium.\n *\n * `billing` and `shipping` are treated as special sections. The {@link SECTION_SHIPPING}\n * and {@link SECTION_BILLING} symbols are used to identify them.\n *\n * Any inputs without an `autocomplete` attribute are skipped.\n *\n * Reference: https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n * Reference: https://github.com/chromium/chromium/blob/18a1302acbf920bc692ec6bd986cacd41ae9c25c/components/autofill/core/browser/form_structure.cc#L1503\n */\nexport function parseFormStructure(form: HTMLFormElement): FormStructure {\n  const inputs = Array.from(\n    form.querySelectorAll<InputFormElement>('[autocomplete]')\n  ).filter((el) => {\n    const tagName = el.tagName.toLowerCase();\n    return (\n      tagName === 'input' || tagName === 'select' || tagName === 'textarea'\n    );\n  });\n\n  const res: FormStructure = [];\n\n  for (const input of inputs) {\n    if (!isVisible(input)) {\n      continue;\n    }\n\n    // Note: HTML <input> element has an HTMLInputElement.autocomplete reflection\n    // property, but <select> elements do not.\n    //\n    // This does **not** mean that autocomplete properties are not valid on\n    // selects. I verified this on a popular e-commerce checkout page.\n    const autocomplete = input.getAttribute('autocomplete') || '';\n    if (!autocomplete || AUTOFILL_SKIP_TOKENS.has(autocomplete)) {\n      continue;\n    }\n\n    const tokens = autocomplete.toLowerCase().split(' ');\n\n    // The tokens are parsed in reverse order. The expected pattern is:\n    // [section-*] [shipping|billing] [type_hint] field_type\n\n    // Address tokens can be a maximum length of 3. We don't need to check [type_hint].\n    if (tokens.length > 3) {\n      continue;\n    }\n\n    // The last token should be a part of our scheme.\n    const field = tokens[tokens.length - 1] as AutofillTokens;\n    if (!AUTOFILL_TOKENS.has(field)) {\n      continue;\n    }\n    tokens.pop();\n\n    let section: symbol | string = SECTION_DEFAULT;\n\n    // The second to last token /could/ be 'shipping' or 'billing'.\n    if (tokens.length) {\n      const sectionToken = tokens[tokens.length - 1];\n\n      if (sectionToken === 'shipping') {\n        section = SECTION_SHIPPING;\n        tokens.pop();\n      }\n\n      if (sectionToken === 'billing') {\n        section = SECTION_BILLING;\n        tokens.pop();\n      }\n    }\n\n    // The remaining tokens could be a section.\n    if (tokens.length) {\n      const sectionToken = tokens[tokens.length - 1];\n      if (sectionToken.startsWith(SECTION)) {\n        section = sectionToken;\n      }\n    }\n\n    res.push({\n      input,\n      section,\n      field\n    });\n  }\n\n  return res;\n}\n\nexport type AutofillInputMap = { [key in AutofillTokens]?: InputFormElement };\nexport type AutofillValueMap = { [key in AutofillTokens]?: string };\n\n/**\n * Reference: [chromium.md](../../../../docs/search_js_web/chromium.md)\n *\n * Implementation of autofill that closely matches Chromium, with a few noted differences:\n *\n * 1. There is no hueristic for inferring a match, so the\n *    WHATWG \"autocomplete\" attribute is required.\n * 2. This parser, unlike Chromium, doesn't allow more than one token type per\n *    section. Chromium **only** allows this if they are in the same order.\n */\nexport function findAddressAutofillInputs(\n  form: HTMLFormElement,\n  ref: HTMLInputElement\n): AutofillInputMap {\n  // Use an array-of-structs to improve performance.\n  // Reference: https://en.wikipedia.org/wiki/AoS_and_SoA#:~:text=Structure%20of%20arrays%20(SoA)%20is,one%20parallel%20array%20per%20field.\n  const logicalSections: AutofillInputMap[] = [];\n  const logicalSectionSections: (string | symbol)[] = [];\n\n  // Parse the form structure, then go through each node to create\n  // logical sections.\n  const formStructure = parseFormStructure(form);\n\n  // When we traverse through the form structure, we can check the input against\n  // ref to find the logical section we actually want.\n  let foundSection: AutofillInputMap = null;\n\n  for (const { input, section, field } of formStructure) {\n    let lastIndex = logicalSections.length - 1;\n\n    // 1. If we have no logical sections, create a new section.\n    // 2. If the current section is different from the last section, create a new section.\n    // 3. If the current field already exists in the last section, create a new section.\n    let createNewSection = false;\n    if (!logicalSections.length) {\n      createNewSection = true;\n    } else if (logicalSectionSections[lastIndex] !== section) {\n      createNewSection = true;\n    } else if (logicalSections[lastIndex][field]) {\n      createNewSection = true;\n    }\n\n    if (createNewSection) {\n      // If we have already found a logical section, creating new sections\n      // just wastes time.\n      if (foundSection) {\n        break;\n      }\n\n      logicalSections.push({\n        [field]: input\n      });\n\n      logicalSectionSections.push(section);\n      // Make sure to update lastIndex.\n      lastIndex++;\n    } else {\n      logicalSections[lastIndex][field] = input;\n    }\n\n    if (input === ref) {\n      foundSection = logicalSections[lastIndex];\n    }\n  }\n\n  return foundSection ?? {};\n}\n\n/**\n * Fills in the address form using HTML autocomplete attributes.\n *\n * This does a mapping from {@link AdministrativeUnitTypes} to corresponding WHATWG autocomplete types.\n *\n * Reference:\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete#values\n * https://docs.mapbox.com/api/search/search/#administrative-unit-types\n */\nexport function setFormAutofillValues(\n  form: HTMLFormElement,\n  ref: HTMLInputElement,\n  suggestion: AutofillSuggestion\n): void {\n  // Find the inputs that we should fill in.\n  const map = findAddressAutofillInputs(form, ref);\n\n  const streetAddress = [\n    suggestion.address_line1,\n    suggestion.address_line2,\n    suggestion.address_line3\n  ]\n    .filter((part) => Boolean(part))\n    .join(', ');\n\n  setValue(map['street-address'], streetAddress);\n  setValue(map['address-line1'], suggestion.address_line1 || '');\n\n  setValue(map['address-level1'], suggestion.address_level1 || '');\n  setValue(map['address-level2'], suggestion.address_level2 || '');\n  setValue(map['address-level3'], suggestion.address_level3 || '');\n\n  // Country in WHATWG refers to the country code, not the name.\n  // Example: 'jp' instead of 'Japan'.\n\n  // Note: Make sure to match case here. The country code is lower-case.\n  const countryCode = suggestion.metadata?.iso_3166_1 || '';\n  if (map.country && map.country instanceof HTMLSelectElement) {\n    const firstOption = map.country.querySelector(`option`).value;\n    const isUpperCase = firstOption === firstOption.toUpperCase();\n\n    setValue(\n      map['country'],\n      isUpperCase ? countryCode.toUpperCase() : countryCode\n    );\n  } else {\n    setValue(map['country'], countryCode);\n  }\n\n  setValue(map['country-name'], suggestion.country || '');\n  setValue(map['postal-code'], suggestion.postcode || '');\n}\n\n/**\n * Gets the current input values for address fields given a form and a reference input.\n *\n * @param form - HTML form that includes the autocomplete-compliant input fields\n * @param ref - An input element within the desired form address section\n * @returns A object mapping WHATWG autocomplete properties to their respective form field values\n *\n * @example\n * ```typescript\n * const form = document.querySelector(form);\n * const input = form.querySelector('input[autocomplete~=\"street-address\"]')\n * const valueMap = getFormAutofillValues(form, input);\n * console.log(valueMap);\n * // {\n * //   \"street-address\": \"123 Main\",\n * //   \"address-level2\": \"Boston\",\n * //   \"address-level1\": \"MA\",\n * //   \"postal-code\": \"02129\"\n * // }\n * ```\n */\nexport function getFormAutofillValues(\n  form: HTMLFormElement,\n  ref: HTMLInputElement\n): AutofillValueMap {\n  const map = findAddressAutofillInputs(form, ref);\n  const values: AutofillValueMap = {};\n  for (const [key, input] of Object.entries(map)) {\n    if (input?.value) {\n      values[key] = input.value;\n    }\n  }\n\n  return values;\n}\n\n/**\n * Converts an {@link AutofillValueMap} to a single line, suitable for\n * display in a text field.\n *\n * @param snapshot - An object mapping WHATWG autocomplete attribute values to their corresponding input field values\n * @returns A concatenated address string\n *\n * @example\n * ```typescript\n * const values = {\n *   'street-address': '123 Main St',\n *   'address-level1': 'CA',\n *   'address-level2': 'San Francisco',\n *   'address-level3': '',\n * };\n *\n * const searchText = getAutofillSearchText(values);\n * console.log(searchText); // '123 Main St, San Francisco, CA'\n * ```\n */\nexport function getAutofillSearchText(snapshot: AutofillValueMap): string {\n  const searchText = [];\n\n  if (snapshot['street-address']) {\n    searchText.push(snapshot['street-address']);\n  } else {\n    searchText.push(snapshot['address-line1'] || '');\n    searchText.push(snapshot['address-line2'] || '');\n    searchText.push(snapshot['address-line3'] || '');\n  }\n\n  searchText.push(snapshot['address-level3'] || '');\n  searchText.push(snapshot['address-level2'] || '');\n  searchText.push(snapshot['address-level1'] || '');\n  searchText.push(snapshot['postal-code'] || '');\n\n  if (snapshot['country-name']) {\n    searchText.push(snapshot['country-name']);\n  } else {\n    searchText.push(snapshot['country'] || '');\n  }\n\n  return searchText.filter((part) => Boolean(part)).join(', ');\n}\n\nexport function fillFormWithFeature(\n  feature: AutofillFeatureSuggestion,\n  input: HTMLInputElement\n): void {\n  const form = findParentForm(input);\n  if (!form) {\n    return;\n  }\n\n  const suggestion = featureToSuggestion(feature);\n  setFormAutofillValues(form, input, suggestion);\n}\n\n/**\n * Gets address property values from an Autofill feature.\n *\n * @param feature - A {@link AutofillFeatureSuggestion} object.\n * @returns A object mapping WHATWG autocomplete properties to their respective feature values\n */\nexport function featureToAutofillValueMap(\n  feature: AutofillFeatureSuggestion\n): AutofillValueMap {\n  const values: AutofillValueMap = {};\n\n  const streetAddress = [\n    feature.properties.address_line1,\n    feature.properties.address_line2,\n    feature.properties.address_line3\n  ]\n    .filter((part) => Boolean(part))\n    .join(', ');\n\n  values['street-address'] = streetAddress;\n  values['address-line1'] = feature.properties.address_line1;\n  values['address-line2'] = feature.properties.address_line2;\n  values['address-line3'] = feature.properties.address_line3;\n  values['address-level1'] = feature.properties.address_level1;\n  values['address-level2'] = feature.properties.address_level2;\n  values['address-level3'] = feature.properties.address_level3;\n  values['country'] = feature.properties.metadata?.iso_3166_1;\n  values['country-name'] = feature.properties.country;\n  values['postal-code'] = feature.properties.postcode;\n\n  return values;\n}\n\n/**\n * Checks if WHATWG address values from one object match those from another.\n *\n * Can be used to compare an HTML form state against the most recently retrieved Autofill feature\n * to determine if a form has been manually edited after a previous Autofill event.\n *\n * @param targetMap - An {@link AutofillValueMap} object.\n * @param referenceMap - An {@link AutofillValueMap} object.\n * @returns False if all values from the target map are equal to their corresponding value from the reference map.\n */\nexport function checkAutofillValuesChanged(\n  targetMap: AutofillValueMap,\n  referenceMap: AutofillValueMap\n): boolean {\n  for (const [key, value] of Object.entries(targetMap)) {\n    if (referenceMap[key] !== value) return true;\n  }\n  return false;\n}\n", "import { AutofillFeatureSuggestion } from '@mapbox/search-js-core';\nimport { AutofillValueMap } from './autofill';\nimport { createElementFromString } from './dom';\n\n/**\n * @typedef AddressConfirmShowResult\n */\nexport type AddressConfirmShowResult =\n  | { type: 'change'; feature: AutofillFeatureSuggestion }\n  | { type: 'nochange' }\n  | { type: 'cancel' };\n\n/**\n * Creates a formatted, multi-line HTML element representing an address\n * @param autofillValues - A map of address `<input>` values by autocomplete attribute\n * @param baseAddress - A full address string. If provided, this will be used for the\n * first and last lines of the formatted address, and will be supplemented by any `address-line2`\n * and/or `address-line3` values provided through the `autofillValues` map.\n * @returns\n */\nexport function createAddressElement(\n  autofillValues: AutofillValueMap,\n  baseAddress?: string\n): HTMLElement {\n  if (baseAddress) {\n    const element = createElementFromString<HTMLSpanElement>(`\n        <span>\n          <span></span>\n          <br />\n          <span></span>\n        </span>\n      `);\n\n    const [firstLine, lastLine] = Array.from(\n      element.querySelectorAll<HTMLSpanElement>('span > span')\n    );\n\n    const parts = baseAddress.split(',');\n\n    firstLine.textContent = parts[0].trim();\n    lastLine.textContent = parts.slice(1).join(',').trim();\n\n    // Add any customer-entered address-line2, address-line3 input values\n    if (autofillValues['address-line2']) {\n      const span = document.createElement('span');\n      span.textContent = autofillValues['address-line2'];\n      element.insertBefore(span, lastLine);\n      element.insertBefore(document.createElement('br'), lastLine);\n    }\n    if (autofillValues['address-line3']) {\n      const span = document.createElement('span');\n      span.textContent = autofillValues['address-line3'];\n      element.insertBefore(span, lastLine);\n      element.insertBefore(document.createElement('br'), lastLine);\n    }\n\n    return element;\n  } else {\n    const firstLine =\n      autofillValues['street-address'] || autofillValues['address-line1'] || '';\n    const line2 = autofillValues['address-line2'];\n    const line3 = autofillValues['address-line3'];\n    const lastLine = [\n      autofillValues['address-level4'] || '',\n      autofillValues['address-level3'] || '',\n      autofillValues['address-level2'] || '',\n      `${autofillValues['address-level1'] || ''} ${\n        autofillValues['postal-code'] || ''\n      }`,\n      autofillValues.country || autofillValues['country-name'] || ''\n    ]\n      .filter(Boolean)\n      .join(', ');\n    const addressLines = [firstLine, line2, line3, lastLine].filter(Boolean);\n    const addressLinesHtml = addressLines\n      .map((val) => `<span>${val}</span>`)\n      .join('<br />');\n    const element = createElementFromString<HTMLSpanElement>(`\n        <span>${addressLinesHtml}</span>\n      `);\n    return element;\n  }\n}\n", "import { SessionToken } from '@mapbox/search-js-core';\n\nclass Config {\n  /**\n   * A Mapbox access token used if one is not passed in explicitly to web components\n   */\n  accessToken: string;\n  /**\n   * If true, Autofill address or marker location corrections will be submitted to the Mapbox Contribute API to help improve our data accuracy. Defaults to true.\n   */\n  feedbackEnabled = true;\n\n  readonly autofillSessionToken = new SessionToken(); // Shared session token used among Autofill-related web components\n  autofillSessionEnabled = false; // True when Autofill has been initialized within the current page view\n}\n\n/**\n * Global configuration singleton object storing settings shared across Search JS Web components.\n *\n * @property {string} accessToken - A [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) used if one is not passed in explicitly to web components.\n * @property {boolean} feedbackEnabled - If true, Autofill address or marker location corrections will be submitted to the Mapbox Contribute API to help improve our data accuracy. Defaults to true.\n * @example\n * ```typescript\n * config.accessToken = 'pk.abc.123';\n * ...\n * // Don't need to explicitly pass in token to some components\n * autofill({});\n * confirmAddress(form);\n * ```\n */\nconst config = new Config();\n\n// Prevent autofillSessionToken from being overwritten\nObject.defineProperty(config, 'autofillSessionToken', {\n  configurable: false,\n  writable: false\n});\n\nexport { config };\n", "import { isLocalServer, isMapboxDomain } from '.';\nimport { config } from '../config';\n\nimport { version } from '../../package.json';\n\nconst CONTRIBUTE_API_BASE_URL = 'https://contribute-api.mapbox.com/v1';\nconst CONTRIBUTE_API_STAGING_BASE_URL =\n  'https://contribute-api-staging.tilestream.net/v1';\nconst EDIT_SUGGESTION_ENDPOINT = 'edit-suggestion';\n\n/**\n * Object defining changes made to an address location feature.\n * Sent as part of payload to Contribute API.\n */\nexport interface ContributeChanges {\n  house?: string; // House number\n  street?: string; // Street name\n  address?: string; // Full address from Autofill SDK\n  location?: { longitude: number; latitude: number }; // Location of the user-adjusted pin\n}\n\nexport interface FeedbackArgs {\n  originalCoordinate: [number, number];\n  originalAddress: string;\n  changes: ContributeChanges;\n}\n\n/**\n * Sends feedback to the Mapbox Contribute API given an original Autofill API feature and a set of user-defined changes to the address or location.\n * @param accessToken - Mapbox access token\n * @param {FeedbackArgs} feedbackArgs - Data detailing the original address and location and any changes requested\n * @param {[number, number]} feedbackArgs.originalCoordinate - Original coordinate from the Autofill API\n * @param {string} feedbackArgs.originalAddress - Original full_address or place_name from the Autofill API\n * @param {ContributeChanges} feedbackArgs.changes - Address fields or location changed by a user\n */\nexport function sendFeedback(\n  accessToken: string,\n  feedbackArgs: FeedbackArgs\n): void {\n  // Skip sending feedback if disabled in global config\n  if (!config.feedbackEnabled) return;\n\n  // Direct feedback sent during development or from Mapbox site to staging server\n  const hostname = window.location.hostname;\n  const BASE_URL =\n    isLocalServer(hostname) || isMapboxDomain(hostname)\n      ? CONTRIBUTE_API_STAGING_BASE_URL\n      : CONTRIBUTE_API_BASE_URL;\n  const url = `${BASE_URL}/${EDIT_SUGGESTION_ENDPOINT}/address?access_token=${accessToken}`;\n\n  const { originalCoordinate, originalAddress, changes } = feedbackArgs;\n\n  const payload = {\n    action: 'update',\n    reason: 'incorrect_address',\n    location: {\n      // original location of the address (suggested by SDK/API)\n      longitude: originalCoordinate[0],\n      latitude: originalCoordinate[1]\n    },\n    userEmail: 'no-reply-autofill@mapbox.com',\n    changes,\n    placeName: originalAddress // Full (original) address from Autofill SDK\n  };\n\n  fetch(url, {\n    method: 'POST',\n    headers: new Headers({\n      'User-Agent': `mapbox-search-js.${version}.${navigator.userAgent}`,\n      'Content-Type': 'application/json'\n    }),\n    body: JSON.stringify(payload)\n  });\n}\n", "import { AutofillFeatureSuggestion } from '@mapbox/search-js-core';\n\nimport { MapboxAddressMinimap } from './MapboxAddressMinimap';\nimport { HTMLScopedElement } from './HTMLScopedElement';\nimport {\n  AddressConfirmationEventTypes,\n  ConfirmationMinimapOptions\n} from './MapboxAddressConfirmation';\n\nimport { randomValidID } from '../utils';\nimport { bindElements, createElementFromString } from '../utils/dom';\nimport { ariaButtonKeyDown } from '../utils/aria';\nimport { AutofillValueMap, getAutofillSearchText } from '../utils/autofill';\nimport {\n  AddressConfirmShowResult,\n  createAddressElement\n} from '../utils/confirmation';\nimport { sendFeedback } from '../utils/contribute';\n\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\nimport { getIcon, getThemeCSS, Theme } from '../theme';\n\nimport style from '../style.css';\n\nconst TEMPLATE = createElementFromString<HTMLTemplateElement>(`\n<template>\n  <div class=\"MapboxAddressConfirmationFeature\">\n    <div class=\"Modal\" aria-modal=\"true\" role=\"dialog\">\n      <div class=\"ModalHeader\">\n        <svg viewBox=\"0 0 18 18\" class=\"Icon IconQuestion\"></svg>\n        <div class=\"ModalHeaderTitle\">Did you mean?</div>\n        <svg\n          viewBox=\"0 0 18 18\"\n          class=\"Icon IconClose\"\n          tabindex=\"0\"\n          role=\"button\"\n          title=\"Close\"\n          aria-label=\"Close\"\n          aria-expanded=\"true\"\n        ></svg>\n      </div>\n\n      <div class=\"ModalAddress ModalAddressApprove\"></div>\n            \n      <div class=\"ModalMap\">\n        <mapbox-address-minimap class=\"Minimap\"></mapbox-address-minimap>\n      </div>\n\n      <div\n        class=\"Button ButtonPrimary ButtonApprove\"\n        tabindex=\"0\"\n        role=\"button\"\n        aria-label=\"Yes\"\n      >\n        Yes\n      </div>\n      \n      <div\n        class=\"Button ButtonSecondary ButtonReject\"\n        tabindex=\"0\"\n        role=\"button\"\n        aria-label=\"No, use the address I provided\"\n      >\n        No, use the address I provided\n      </div>\n\n      <div class=\"ModalFooter\">\n          Your confirmation helps ensure your order is delivered correctly.\n      </div>\n    </div>\n  </div>\n</template>\n`);\n\ntype Binding = {\n  MapboxAddressConfirmationFeature: HTMLDivElement;\n  Modal: HTMLDivElement;\n  ModalHeaderTitle: HTMLDivElement;\n  ModalMap: HTMLDivElement;\n  Minimap: MapboxAddressMinimap;\n\n  IconQuestion: SVGSVGElement;\n  IconClose: SVGSVGElement;\n\n  ButtonApprove: HTMLDivElement;\n  ButtonReject: HTMLDivElement;\n\n  ModalAddressApprove: HTMLDivElement;\n};\n\n/**\n * {@link MapboxAddressConfirmationNoFeature} is a custom element that\n * will display a notification showing the closest suggested address to what a user has provided in the form.\n * Optionally, it can display a {@link MapboxAddressMinimap} for the suggesested address feature.\n *\n * This element is hosted by {@link MapboxAddressConfirmation} and should not be exposed to the user.\n */\nexport class MapboxAddressConfirmationFeature extends HTMLScopedElement<AddressConfirmationEventTypes> {\n  #binding: Binding;\n\n  get template(): HTMLTemplateElement {\n    return TEMPLATE;\n  }\n\n  get templateStyle(): string {\n    return style;\n  }\n\n  get templateUserStyle(): string {\n    return getThemeCSS('.MapboxAddressConfirmationFeature', this.theme);\n  }\n\n  #themeInternal: Theme = {};\n\n  get theme(): Theme {\n    return this.#themeInternal;\n  }\n\n  set theme(theme: Theme) {\n    this.#themeInternal = theme;\n\n    if (!this.#binding || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(\n      getThemeCSS('.MapboxAddressConfirmationFeature', theme)\n    );\n\n    const { IconQuestion, IconClose } = this.#binding;\n\n    IconQuestion.innerHTML = getIcon('question', theme);\n    IconClose.innerHTML = getIcon('close', theme);\n  }\n\n  minimap: boolean | ConfirmationMinimapOptions = false;\n  accessToken: string;\n\n  #feature: AutofillFeatureSuggestion;\n  #formValues: AutofillValueMap;\n\n  /**\n   * Update modal content with a given address suggestion\n   * @param feature - Suggested feature\n   * @param autofillValues - User-provided input values from address fields; used to backfill address-line2, address-line3\n   */\n  update = (\n    feature: AutofillFeatureSuggestion,\n    autofillValues: AutofillValueMap\n  ): void => {\n    this.#feature = feature;\n    this.#formValues = autofillValues;\n    const { ModalMap, Minimap, ModalAddressApprove } = this.#binding;\n    // Update minimap if enabled\n    if (this.minimap) {\n      ModalMap.removeAttribute('aria-hidden');\n      Minimap.accessToken = this.accessToken;\n      if (typeof this.minimap === 'object') {\n        const { defaultMapStyle, theme, mapStyleMode, satelliteToggle } =\n          this.minimap;\n        defaultMapStyle &&\n          (Minimap.defaultMapStyle = this.minimap.defaultMapStyle);\n        theme && (Minimap.theme = this.minimap.theme);\n        mapStyleMode && (Minimap.mapStyleMode = mapStyleMode);\n        satelliteToggle !== undefined &&\n          (Minimap.satelliteToggle = satelliteToggle);\n      }\n      Minimap.feature = feature;\n    } else {\n      ModalMap.setAttribute('aria-hidden', 'true');\n    }\n\n    const approveAddress =\n      feature.properties.place_name ||\n      feature.properties.full_address ||\n      feature.properties.address;\n\n    // Set the text of the approve address.\n    ModalAddressApprove.innerHTML = '';\n    ModalAddressApprove.appendChild(\n      createAddressElement(autofillValues, approveAddress)\n    );\n  };\n\n  #handleClose = (): void => {\n    this.dispatchEvent(\n      new MapboxHTMLEvent<AddressConfirmShowResult['type']>('result', 'cancel')\n    );\n  };\n\n  approve = (): void => {\n    this.dispatchEvent(\n      new MapboxHTMLEvent<AddressConfirmShowResult['type']>('result', 'change')\n    );\n  };\n\n  reject = (): void => {\n    this.dispatchEvent(\n      new MapboxHTMLEvent<AddressConfirmShowResult['type']>(\n        'result',\n        'nochange'\n      )\n    );\n    // Send feedback to Contribute API with the address from the user's preferred form values\n    sendFeedback(this.accessToken, {\n      originalCoordinate: this.#feature.geometry.coordinates as [\n        number,\n        number\n      ],\n      originalAddress: this.#feature.properties.full_address,\n      changes: {\n        address: getAutofillSearchText(this.#formValues)\n      }\n    });\n  };\n\n  // IDs to connect for ARIA.\n  #modalID = randomValidID();\n  #modalHeaderTitleID = randomValidID();\n  #modalAddressApproveID = randomValidID();\n\n  connectedCallback(): void {\n    super.connectedCallback();\n\n    this.#binding = bindElements<Binding>(this, {\n      MapboxAddressConfirmationFeature: '.MapboxAddressConfirmationFeature',\n      Modal: '.Modal',\n      ModalHeaderTitle: '.ModalHeaderTitle',\n      ModalMap: '.ModalMap',\n      Minimap: '.Minimap',\n\n      IconQuestion: '.IconQuestion',\n      IconClose: '.IconClose',\n\n      ButtonApprove: '.ButtonApprove',\n      ButtonReject: '.ButtonReject',\n\n      ModalAddressApprove: '.ModalAddressApprove'\n    });\n\n    const {\n      Modal,\n      ModalHeaderTitle,\n      IconClose,\n      ButtonApprove,\n      ButtonReject,\n      ModalAddressApprove\n    } = this.#binding;\n\n    // Setup IDREFs for WAI-ARIA.\n    Modal.setAttribute('aria-labelledby', this.#modalHeaderTitleID);\n    Modal.setAttribute('aria-describedby', this.#modalAddressApproveID);\n    IconClose.setAttribute('aria-controls', this.#modalID);\n\n    Modal.id = this.#modalID;\n    ModalHeaderTitle.id = this.#modalHeaderTitleID;\n    ModalAddressApprove.id = this.#modalAddressApproveID;\n\n    // Setup WAI-ARIA button keyboard events.\n    const buttons = Array.from(this.querySelectorAll('[role=\"button\"]'));\n    for (const button of buttons) {\n      button.addEventListener('keydown', ariaButtonKeyDown);\n    }\n\n    // Setup event listeners.\n    IconClose.addEventListener('click', this.#handleClose);\n    ButtonApprove.addEventListener('click', this.approve);\n    ButtonReject.addEventListener('click', this.reject);\n\n    const theme = this.theme;\n    if (theme) {\n      const { IconQuestion, IconClose } = this.#binding;\n\n      IconQuestion.innerHTML = getIcon('question', theme);\n      IconClose.innerHTML = getIcon('close', theme);\n    }\n  }\n\n  disconnectedCallback(): void {\n    const { IconClose, ButtonApprove } = this.#binding;\n\n    // Make sure to unbind event listeners.\n    IconClose.removeEventListener('click', this.#handleClose);\n    ButtonApprove.removeEventListener('click', this.approve);\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxAddressConfirmationFeature: typeof MapboxAddressConfirmationFeature;\n  }\n}\n\nwindow.MapboxAddressConfirmationFeature = MapboxAddressConfirmationFeature;\n\nif (!window.customElements.get('mapbox-address-confirmation-feature')) {\n  customElements.define(\n    'mapbox-address-confirmation-feature',\n    MapboxAddressConfirmationFeature\n  );\n}\n", "import { HTMLScopedElement } from './HTMLScopedElement';\nimport { AddressConfirmationEventTypes } from './MapboxAddressConfirmation';\n\nimport { randomValidID } from '../utils';\nimport { bindElements, createElementFromString } from '../utils/dom';\nimport { ariaButtonKeyDown } from '../utils/aria';\nimport { AutofillValueMap } from '../utils/autofill';\nimport {\n  AddressConfirmShowResult,\n  createAddressElement\n} from '../utils/confirmation';\n\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\nimport { getIcon, getThemeCSS, Theme } from '../theme';\n\nimport style from '../style.css';\n\nconst TEMPLATE = createElementFromString<HTMLTemplateElement>(`\n<template>\n  <div class=\"MapboxAddressConfirmationNoFeature\">\n    <div class=\"Modal\" aria-modal=\"true\" role=\"dialog\">\n      <div class=\"ModalHeader\">\n        <svg viewBox=\"0 0 18 18\" class=\"Icon IconQuestion\"></svg>\n        <div class=\"ModalHeaderTitle\">Confirm address</div>\n        <svg\n          viewBox=\"0 0 18 18\"\n          class=\"Icon IconClose\"\n          tabindex=\"0\"\n          role=\"button\"\n          title=\"Close\"\n          aria-label=\"Close\"\n          aria-expanded=\"true\"\n        ></svg>\n      </div>\n      <div class=\"ModalDescription\">\n        We couldn't verify this address. Please check that your information is correct before continuing.\n      </div>\n      <br />\n      <div class=\"ModalSubheader\">\n        You entered\n      </div>\n      <div class=\"ModalAddress\"></div>\n      <div\n        class=\"Button ButtonPrimary\"\n        tabindex=\"0\"\n        role=\"button\"\n        aria-label=\"Use the address I provided\"\n      >\n        Use the address I provided\n      </div>\n    </div>\n  </div>\n</template>\n`);\n\ntype Binding = {\n  Modal: HTMLDivElement;\n  ModalHeaderTitle: HTMLDivElement;\n\n  IconQuestion: SVGSVGElement;\n  IconClose: SVGSVGElement;\n\n  ButtonReject: HTMLDivElement;\n\n  ModalAddress: HTMLDivElement;\n};\n\n/**\n * {@link MapboxAddressConfirmationNoFeature} is a custom element that\n * will display a notification when an address entered into an HTML form\n * does not return any features when queried against the Autofill API.\n *\n * This element is hosted by {@link MapboxAddressConfirmation} and should not be exposed to the user.\n */\nexport class MapboxAddressConfirmationNoFeature extends HTMLScopedElement<AddressConfirmationEventTypes> {\n  #binding: Binding;\n\n  get template(): HTMLTemplateElement {\n    return TEMPLATE;\n  }\n\n  get templateStyle(): string {\n    return style;\n  }\n\n  get templateUserStyle(): string {\n    return getThemeCSS('.MapboxAddressConfirmationNoFeature', this.theme);\n  }\n\n  #themeInternal: Theme = {};\n\n  get theme(): Theme {\n    return this.#themeInternal;\n  }\n\n  set theme(theme: Theme) {\n    this.#themeInternal = theme;\n\n    if (!this.#binding || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(\n      getThemeCSS('.MapboxAddressConfirmationNoFeature', theme)\n    );\n\n    const { IconQuestion, IconClose } = this.#binding;\n\n    IconQuestion.innerHTML = getIcon('question', theme);\n    IconClose.innerHTML = getIcon('close', theme);\n  }\n\n  /**\n   * Update modal content with user-provided address\n   * @param autofillValues - User-provided input values from address fields\n   */\n  update = (autofillValues: AutofillValueMap): void => {\n    // Set the text of the approve address.\n    const { ModalAddress } = this.#binding;\n    ModalAddress.innerHTML = '';\n    ModalAddress.appendChild(createAddressElement(autofillValues));\n  };\n\n  #handleClose = (): void => {\n    this.dispatchEvent(\n      new MapboxHTMLEvent<AddressConfirmShowResult['type']>('result', 'cancel')\n    );\n  };\n\n  reject = (): void => {\n    this.dispatchEvent(\n      new MapboxHTMLEvent<AddressConfirmShowResult['type']>(\n        'result',\n        'nochange'\n      )\n    );\n  };\n\n  // IDs to connect for ARIA.\n  #modalID = randomValidID();\n  #modalHeaderTitleID = randomValidID();\n  #modalAddressID = randomValidID();\n\n  connectedCallback(): void {\n    super.connectedCallback();\n\n    this.#binding = bindElements<Binding>(this, {\n      Modal: '.Modal',\n      ModalHeaderTitle: '.ModalHeaderTitle',\n\n      IconQuestion: '.IconQuestion',\n      IconClose: '.IconClose',\n\n      ModalAddress: '.ModalAddress',\n\n      ButtonReject: '.Button'\n    });\n\n    const { Modal, ModalHeaderTitle, IconClose, ModalAddress, ButtonReject } =\n      this.#binding;\n\n    // Setup IDREFs for WAI-ARIA.\n    Modal.setAttribute('aria-labelledby', this.#modalHeaderTitleID);\n    Modal.setAttribute('aria-describedby', this.#modalAddressID);\n    IconClose.setAttribute('aria-controls', this.#modalID);\n\n    Modal.id = this.#modalID;\n    ModalHeaderTitle.id = this.#modalHeaderTitleID;\n    ModalAddress.id = this.#modalAddressID;\n\n    // Setup WAI-ARIA button keyboard events.\n    const buttons = Array.from(this.querySelectorAll('[role=\"button\"]'));\n    for (const button of buttons) {\n      button.addEventListener('keydown', ariaButtonKeyDown);\n    }\n\n    // Setup event listeners.\n    IconClose.addEventListener('click', this.#handleClose);\n    ButtonReject.addEventListener('click', this.reject);\n\n    const theme = this.theme;\n    if (theme) {\n      const { IconQuestion, IconClose } = this.#binding;\n\n      IconQuestion.innerHTML = getIcon('question', theme);\n      IconClose.innerHTML = getIcon('close', theme);\n    }\n  }\n\n  disconnectedCallback(): void {\n    const { IconClose, ButtonReject } = this.#binding;\n\n    // Make sure to unbind event listeners.\n    IconClose.removeEventListener('click', this.#handleClose);\n    ButtonReject.removeEventListener('click', this.reject);\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxAddressConfirmationNoFeature: typeof MapboxAddressConfirmationNoFeature;\n  }\n}\n\nwindow.MapboxAddressConfirmationNoFeature = MapboxAddressConfirmationNoFeature;\n\nif (!window.customElements.get('mapbox-address-confirmation-no-feature')) {\n  customElements.define(\n    'mapbox-address-confirmation-no-feature',\n    MapboxAddressConfirmationNoFeature\n  );\n}\n", "import {\n  AutofillFeatureSuggestion,\n  AutofillMatchCodeConfidence,\n  AutofillOptions,\n  MapboxAutofill\n} from '@mapbox/search-js-core';\nimport noScroll from 'no-scroll';\nimport { createFocusTrap, FocusTrap } from 'focus-trap';\n\nimport { HTMLScopedElement } from './HTMLScopedElement';\nimport { MapboxAddressConfirmationFeature } from './MapboxAddressConfirmationFeature';\nimport { MapboxAddressConfirmationNoFeature } from './MapboxAddressConfirmationNoFeature';\n\nimport { bindElements, createElementFromString } from '../utils/dom';\nimport { AutofillValueMap, getAutofillSearchText } from '../utils/autofill';\nimport { AddressConfirmShowResult } from '../utils/confirmation';\n\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\nimport { getThemeCSS, Theme } from '../theme';\n\nimport style from '../style.css';\nimport { config } from '../config';\nimport { MapboxAddressMinimap } from './MapboxAddressMinimap';\n\n/**\n * Styling and theming options for a {@link MapboxAddressMinimap} embedded inside a confirmation dialog.\n *\n * @typedef ConfirmationMinimapOptions\n * @example\n * ```typescript\n * const result = await confirmAddress(form, {\n *   accessToken: 'abc-123',\n *   minimap: {\n *     defaultMapStyle: ['mapbox', 'outdoors-v11'],\n *     theme: { icons: { marker: MARKER_SVG } },\n *     mapStyleMode: 'default',\n *     satelliteToggle: true\n *   }\n * });\n * ```\n */\nexport type ConfirmationMinimapOptions = Partial<\n  Pick<\n    MapboxAddressMinimap,\n    'defaultMapStyle' | 'theme' | 'mapStyleMode' | 'satelliteToggle'\n  >\n>;\n\n/**\n * @typedef AddressConfirmOptions\n */\nexport interface AddressConfirmOptions {\n  /**\n   * Mapbox access token used for the Autofill and Static Image APIs\n   */\n  accessToken?: string;\n  /**\n   * CSS variables and icons\n   */\n  theme?: Theme;\n  /**\n   * Autofill API configuration options\n   * {@link AutofillOptions}\n   */\n  options?: Partial<AutofillOptions>;\n  /**\n   * If true, a static minimap showing the suggested address location will be displayed in the modal dialog.\n   * If an object, a minimap will be displayed with the specified styling and theming configuration.\n   * Defaults to false.\n   */\n  minimap?: boolean | ConfirmationMinimapOptions;\n  /**\n   * An array of section names used within form element `autocomplete` attributes to identify and group one address section from another, e.g. \"section-shipping\" or \"section-billing\".\n   * These are often used when a single <form> contains multiple logical sections.\n   * If left undefined, all discoverable sections will be processed.\n   */\n  sections?: string[];\n  /**\n   * A callback used to pre-confirm an address and skip the UI modal.\n   * The feature argument contains all address components, as well as an {@link AutofillMatchCode} object,\n   * which are used to express the confidence of an address match.\n   * The callback must return a boolean, with `true` indicating that the address has been pre-confirmed,\n   * and the UI modal will be skipped and will not be presented to the end-user.\n   */\n  skipConfirmModal?: (feature: AutofillFeatureSuggestion) => boolean;\n}\n\nconst TEMPLATE = createElementFromString<HTMLTemplateElement>(`\n<template>\n  <div class=\"MapboxAddressConfirmation\" aria-hidden=\"true\">\n    <mapbox-address-confirmation-feature class=\"ContentFeature\"></mapbox-address-confirmation-feature>\n    <mapbox-address-confirmation-no-feature class=\"ContentNoFeature\"></mapbox-address-confirmation-no-feature>\n  </div>\n</template>\n`);\n\ntype Binding = {\n  MapboxAddressConfirmation: HTMLDivElement;\n  ContentFeature: MapboxAddressConfirmationFeature;\n  ContentNoFeature: MapboxAddressConfirmationNoFeature;\n};\n\nexport type AddressConfirmationEventTypes = {\n  result: MapboxHTMLEvent<AddressConfirmShowResult['type']>;\n};\n\n/**\n * {@link MapboxAddressConfirmation} is a custom element that\n * will display the \"Did you mean...\" message when the user\n * enters an address that doesn't match any of the results\n * returned by the Mapbox Autofill API.\n *\n * This element is used by {@link MapboxAddressAutofill} and the {@link autofill}\n * method, and should not be exposed to the user.\n */\nexport class MapboxAddressConfirmation extends HTMLScopedElement<AddressConfirmationEventTypes> {\n  #show = false;\n\n  #binding: Binding;\n  #focusTrap: FocusTrap | null;\n\n  get template(): HTMLTemplateElement {\n    return TEMPLATE;\n  }\n\n  get templateStyle(): string {\n    return style;\n  }\n\n  get templateUserStyle(): string {\n    return getThemeCSS('.MapboxAddressConfirmation', this.theme);\n  }\n\n  #themeInternal: Theme = {};\n\n  get theme(): Theme {\n    return this.#themeInternal;\n  }\n\n  set theme(theme: Theme) {\n    this.#themeInternal = theme;\n\n    if (!this.#binding || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(\n      getThemeCSS('.MapboxAddressConfirmation', theme)\n    );\n\n    // Pass theme down into content elements\n    const { ContentFeature, ContentNoFeature } = this.#binding;\n    ContentFeature.theme = theme;\n    ContentNoFeature.theme = theme;\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n\n    this.#binding = bindElements<Binding>(this, {\n      MapboxAddressConfirmation: '.MapboxAddressConfirmation',\n      ContentFeature: '.ContentFeature',\n      ContentNoFeature: '.ContentNoFeature'\n    });\n\n    const { MapboxAddressConfirmation } = this.#binding;\n    MapboxAddressConfirmation.setAttribute('aria-hidden', 'true');\n\n    const theme = this.theme;\n    if (theme) {\n      const { ContentFeature, ContentNoFeature } = this.#binding;\n      ContentFeature.theme = theme;\n      ContentNoFeature.theme = theme;\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.#focusTrap = null;\n  }\n\n  hide(): void {\n    this.#show = false;\n\n    if (!this.#binding) {\n      return;\n    }\n\n    const { MapboxAddressConfirmation } = this.#binding;\n    // Update accessibility flags.\n    MapboxAddressConfirmation.setAttribute('aria-hidden', 'true');\n\n    this.#focusTrap?.deactivate();\n    noScroll.off();\n  }\n\n  async show(\n    autofillValues: AutofillValueMap,\n    optionsArg: AddressConfirmOptions,\n    feature?: AutofillFeatureSuggestion\n  ): Promise<AddressConfirmShowResult> {\n    if (!this.#binding) {\n      return { type: 'cancel' };\n    }\n\n    const { MapboxAddressConfirmation, ContentFeature, ContentNoFeature } =\n      this.#binding;\n\n    const { accessToken, minimap = false, theme } = optionsArg;\n\n    // Update theme in this and child custom elements\n    this.theme = theme;\n\n    // Set content and visibility depending on feature definition\n    if (feature) {\n      ContentFeature.removeAttribute('aria-hidden');\n      ContentNoFeature.setAttribute('aria-hidden', 'true');\n\n      ContentFeature.minimap = minimap;\n      ContentFeature.accessToken = accessToken;\n\n      ContentFeature.update(feature, autofillValues);\n    } else {\n      ContentFeature.setAttribute('aria-hidden', 'true');\n      ContentNoFeature.removeAttribute('aria-hidden');\n\n      ContentNoFeature.update(autofillValues);\n    }\n\n    this.#show = true;\n\n    // Update accessibility flags.\n    MapboxAddressConfirmation.removeAttribute('aria-hidden');\n\n    noScroll.on();\n\n    const activeContentElement = feature ? ContentFeature : ContentNoFeature;\n\n    this.#focusTrap = createFocusTrap(MapboxAddressConfirmation, {\n      fallbackFocus: activeContentElement,\n      escapeDeactivates: (): boolean => {\n        this.hide();\n        return true;\n      }\n    });\n\n    this.#focusTrap?.activate();\n\n    // Wait for next result event, hide and then return.\n    return new Promise((resolve) => {\n      const eventHost = activeContentElement;\n      const fn = (\n        e: MapboxHTMLEvent<AddressConfirmShowResult['type']>\n      ): void => {\n        eventHost.removeEventListener('result', fn);\n\n        const result = e.detail;\n        this.hide();\n\n        if (result === 'change') {\n          resolve({\n            type: 'change',\n            feature\n          });\n        } else {\n          resolve({\n            type: result\n          });\n        }\n      };\n\n      eventHost.addEventListener('result', fn);\n    });\n  }\n\n  /**\n   * Attempts to show an address confirmation dialog by comparing form input values with the closest match via the Autofill API.\n   * @param autofillValues - Map of form `<input>` values for each address component\n   * @param optionsArg - Options object defining API options, UI controls, and callback defining when to bypass the dialog\n   * @returns A promise indicating the action taken from the confirmation dialog\n   */\n  async tryShow(\n    autofillValues: AutofillValueMap,\n    optionsArg: AddressConfirmOptions\n  ): Promise<AddressConfirmShowResult> {\n    if (!this.#binding) {\n      return { type: 'cancel' };\n    }\n\n    const { accessToken, options = {} } = optionsArg;\n\n    const autofill = new MapboxAutofill({\n      accessToken: accessToken,\n      ...options\n    });\n\n    // Get the form's new autofill values to compare against.\n    const searchText = getAutofillSearchText(autofillValues);\n    const featureCollection = await autofill.retrieve(searchText, {\n      sessionToken: config.autofillSessionToken\n    });\n\n    const feature = featureCollection.features[0];\n\n    // Pre-validate feature from optional callback, or default to checking for exact match on match_code.\n    // If pre-validated, return \"nochange\" early\n    if (feature) {\n      const defaultValidation = (feature: AutofillFeatureSuggestion) =>\n        feature.properties.match_code.confidence ===\n        AutofillMatchCodeConfidence.exact;\n      const { skipConfirmModal = defaultValidation } = optionsArg;\n      if (skipConfirmModal(feature)) {\n        return { type: 'nochange' };\n      }\n    }\n\n    return await this.show(autofillValues, optionsArg, feature);\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxAddressConfirmation: typeof MapboxAddressConfirmation;\n  }\n}\n\nwindow.MapboxAddressConfirmation = MapboxAddressConfirmation;\n\nif (!window.customElements.get('mapbox-address-confirmation')) {\n  customElements.define(\n    'mapbox-address-confirmation',\n    MapboxAddressConfirmation\n  );\n}\n", "const candidateSelectors = [\n  'input',\n  'select',\n  'textarea',\n  'a[href]',\n  'button',\n  '[tabindex]',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]:not([contenteditable=\"false\"])',\n  'details>summary:first-of-type',\n  'details',\n];\nconst candidateSelector = /* #__PURE__ */ candidateSelectors.join(',');\n\nconst matches =\n  typeof Element === 'undefined'\n    ? function () {}\n    : Element.prototype.matches ||\n      Element.prototype.msMatchesSelector ||\n      Element.prototype.webkitMatchesSelector;\n\nconst getCandidates = function (el, includeContainer, filter) {\n  let candidates = Array.prototype.slice.apply(\n    el.querySelectorAll(candidateSelector)\n  );\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\nconst isContentEditable = function (node) {\n  return node.contentEditable === 'true';\n};\n\nconst getTabindex = function (node) {\n  const tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);\n\n  if (!isNaN(tabindexAttr)) {\n    return tabindexAttr;\n  }\n\n  // Browsers do not return `tabIndex` correctly for contentEditable nodes;\n  // so if they don't have a tabindex attribute specifically set, assume it's 0.\n  if (isContentEditable(node)) {\n    return 0;\n  }\n\n  // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n  //  `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n  //  yet they are still part of the regular tab order; in FF, they get a default\n  //  `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n  //  order, consider their tab index to be 0.\n  if (\n    (node.nodeName === 'AUDIO' ||\n      node.nodeName === 'VIDEO' ||\n      node.nodeName === 'DETAILS') &&\n    node.getAttribute('tabindex') === null\n  ) {\n    return 0;\n  }\n\n  return node.tabIndex;\n};\n\nconst sortOrderedTabbables = function (a, b) {\n  return a.tabIndex === b.tabIndex\n    ? a.documentOrder - b.documentOrder\n    : a.tabIndex - b.tabIndex;\n};\n\nconst isInput = function (node) {\n  return node.tagName === 'INPUT';\n};\n\nconst isHiddenInput = function (node) {\n  return isInput(node) && node.type === 'hidden';\n};\n\nconst isDetailsWithSummary = function (node) {\n  const r =\n    node.tagName === 'DETAILS' &&\n    Array.prototype.slice\n      .apply(node.children)\n      .some((child) => child.tagName === 'SUMMARY');\n  return r;\n};\n\nconst getCheckedRadio = function (nodes, form) {\n  for (let i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\n\nconst isTabbableRadio = function (node) {\n  if (!node.name) {\n    return true;\n  }\n  const radioScope = node.form || node.ownerDocument;\n\n  const queryRadios = function (name) {\n    return radioScope.querySelectorAll(\n      'input[type=\"radio\"][name=\"' + name + '\"]'\n    );\n  };\n\n  let radioSet;\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.CSS !== 'undefined' &&\n    typeof window.CSS.escape === 'function'\n  ) {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s',\n        err.message\n      );\n      return false;\n    }\n  }\n\n  const checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\n\nconst isRadio = function (node) {\n  return isInput(node) && node.type === 'radio';\n};\n\nconst isNonTabbableRadio = function (node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\nconst isHidden = function (node, displayCheck) {\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n\n  const isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  const nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n  if (!displayCheck || displayCheck === 'full') {\n    while (node) {\n      if (getComputedStyle(node).display === 'none') {\n        return true;\n      }\n      node = node.parentElement;\n    }\n  } else if (displayCheck === 'non-zero-area') {\n    const { width, height } = node.getBoundingClientRect();\n    return width === 0 && height === 0;\n  }\n\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nconst isDisabledFromFieldset = function (node) {\n  if (\n    isInput(node) ||\n    node.tagName === 'SELECT' ||\n    node.tagName === 'TEXTAREA' ||\n    node.tagName === 'BUTTON'\n  ) {\n    let parentNode = node.parentElement;\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> as an immediate child of the disabled\n        //  <fieldset>: if the node is in that legend, it'll be enabled even\n        //  though the fieldset is disabled; otherwise, the node is in a\n        //  secondary/subsequent legend, or somewhere else within the fieldset\n        //  (however deep nested) and it'll be disabled\n        for (let i = 0; i < parentNode.children.length; i++) {\n          const child = parentNode.children.item(i);\n          if (child.tagName === 'LEGEND') {\n            if (child.contains(node)) {\n              return false;\n            }\n\n            // the node isn't in the first legend (in doc order), so no matter\n            //  where it is now, it'll be disabled\n            return true;\n          }\n        }\n\n        // the node isn't in a legend, so no matter where it is now, it'll be disabled\n        return true;\n      }\n\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\n\nconst isNodeMatchingSelectorFocusable = function (options, node) {\n  if (\n    node.disabled ||\n    isHiddenInput(node) ||\n    isHidden(node, options.displayCheck) ||\n    // For a details element with a summary, the summary element gets the focus\n    isDetailsWithSummary(node) ||\n    isDisabledFromFieldset(node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isNodeMatchingSelectorTabbable = function (options, node) {\n  if (\n    !isNodeMatchingSelectorFocusable(options, node) ||\n    isNonTabbableRadio(node) ||\n    getTabindex(node) < 0\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst tabbable = function (el, options) {\n  options = options || {};\n\n  const regularTabbables = [];\n  const orderedTabbables = [];\n\n  const candidates = getCandidates(\n    el,\n    options.includeContainer,\n    isNodeMatchingSelectorTabbable.bind(null, options)\n  );\n\n  candidates.forEach(function (candidate, i) {\n    const candidateTabindex = getTabindex(candidate);\n    if (candidateTabindex === 0) {\n      regularTabbables.push(candidate);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        node: candidate,\n      });\n    }\n  });\n\n  const tabbableNodes = orderedTabbables\n    .sort(sortOrderedTabbables)\n    .map((a) => a.node)\n    .concat(regularTabbables);\n\n  return tabbableNodes;\n};\n\nconst focusable = function (el, options) {\n  options = options || {};\n\n  const candidates = getCandidates(\n    el,\n    options.includeContainer,\n    isNodeMatchingSelectorFocusable.bind(null, options)\n  );\n\n  return candidates;\n};\n\nconst isTabbable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\n\nconst focusableCandidateSelector = /* #__PURE__ */ candidateSelectors\n  .concat('iframe')\n  .join(',');\n\nconst isFocusable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { tabbable, focusable, isTabbable, isFocusable };\n", "import { tabbable, focusable, isFocusable, isTabbable } from 'tabbable';\n\nconst activeFocusTraps = (function () {\n  const trapQueue = [];\n  return {\n    activateTrap(trap) {\n      if (trapQueue.length > 0) {\n        const activeTrap = trapQueue[trapQueue.length - 1];\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      const trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n\n    deactivateTrap(trap) {\n      const trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    },\n  };\n})();\n\nconst isSelectableInput = function (node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n};\n\nconst isEscapeEvent = function (e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n};\n\nconst isTabEvent = function (e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n};\n\nconst delay = function (fn) {\n  return setTimeout(fn, 0);\n};\n\n// Array.find/findIndex() are not supported on IE; this replicates enough\n//  of Array.findIndex() for our needs\nconst findIndex = function (arr, fn) {\n  let idx = -1;\n\n  arr.every(function (value, i) {\n    if (fn(value)) {\n      idx = i;\n      return false; // break\n    }\n\n    return true; // next\n  });\n\n  return idx;\n};\n\n/**\n * Get an option's value when it could be a plain value, or a handler that provides\n *  the value.\n * @param {*} value Option's value to check.\n * @param {...*} [params] Any parameters to pass to the handler, if `value` is a function.\n * @returns {*} The `value`, or the handler's returned value.\n */\nconst valueOrHandler = function (value, ...params) {\n  return typeof value === 'function' ? value(...params) : value;\n};\n\nconst getActualTarget = function (event) {\n  // NOTE: If the trap is _inside_ a shadow DOM, event.target will always be the\n  //  shadow host. However, event.target.composedPath() will be an array of\n  //  nodes \"clicked\" from inner-most (the actual element inside the shadow) to\n  //  outer-most (the host HTML document). If we have access to composedPath(),\n  //  then use its first element; otherwise, fall back to event.target (and\n  //  this only works for an _open_ shadow DOM; otherwise,\n  //  composedPath()[0] === event.target always).\n  return event.target.shadowRoot && typeof event.composedPath === 'function'\n    ? event.composedPath()[0]\n    : event.target;\n};\n\nconst createFocusTrap = function (elements, userOptions) {\n  // SSR: a live trap shouldn't be created in this type of environment so this\n  //  should be safe code to execute if the `document` option isn't specified\n  const doc = userOptions?.document || document;\n\n  const config = {\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true,\n    ...userOptions,\n  };\n\n  const state = {\n    // @type {Array<HTMLElement>}\n    containers: [],\n\n    // list of objects identifying the first and last tabbable nodes in all containers/groups in\n    //  the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{\n    //   container: HTMLElement,\n    //   firstTabbableNode: HTMLElement|null,\n    //   lastTabbableNode: HTMLElement|null,\n    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined\n    // }>}\n    tabbableGroups: [],\n\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false,\n\n    // timer ID for when delayInitialFocus is true and initial focus in this trap\n    //  has been delayed during activation\n    delayInitialFocusTimer: undefined,\n  };\n\n  let trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  const getOption = (configOverrideOptions, optionName, configOptionName) => {\n    return configOverrideOptions &&\n      configOverrideOptions[optionName] !== undefined\n      ? configOverrideOptions[optionName]\n      : config[configOptionName || optionName];\n  };\n\n  const containersContain = function (element) {\n    return !!(\n      element &&\n      state.containers.some((container) => container.contains(element))\n    );\n  };\n\n  /**\n   * Gets the node for the given option, which is expected to be an option that\n   *  can be either a DOM node, a string that is a selector to get a node, `false`\n   *  (if a node is explicitly NOT given), or a function that returns any of these\n   *  values.\n   * @param {string} optionName\n   * @returns {undefined | false | HTMLElement | SVGElement} Returns\n   *  `undefined` if the option is not specified; `false` if the option\n   *  resolved to `false` (node explicitly not given); otherwise, the resolved\n   *  DOM node.\n   * @throws {Error} If the option is set, not `false`, and is not, or does not\n   *  resolve to a node.\n   */\n  const getNodeForOption = function (optionName, ...params) {\n    let optionValue = config[optionName];\n\n    if (typeof optionValue === 'function') {\n      optionValue = optionValue(...params);\n    }\n\n    if (!optionValue) {\n      if (optionValue === undefined || optionValue === false) {\n        return optionValue;\n      }\n      // else, empty string (invalid), null (invalid), 0 (invalid)\n\n      throw new Error(\n        `\\`${optionName}\\` was specified but was not a node, or did not return a node`\n      );\n    }\n\n    let node = optionValue; // could be HTMLElement, SVGElement, or non-empty string at this point\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue); // resolve to node, or null if fails\n      if (!node) {\n        throw new Error(\n          `\\`${optionName}\\` as selector refers to no known node`\n        );\n      }\n    }\n\n    return node;\n  };\n\n  const getInitialFocusNode = function () {\n    let node = getNodeForOption('initialFocus');\n\n    // false explicitly indicates we want no initialFocus at all\n    if (node === false) {\n      return false;\n    }\n\n    if (node === undefined) {\n      // option not specified: use fallback options\n      if (containersContain(doc.activeElement)) {\n        node = doc.activeElement;\n      } else {\n        const firstTabbableGroup = state.tabbableGroups[0];\n        const firstTabbableNode =\n          firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n\n        // NOTE: `fallbackFocus` option function cannot return `false` (not supported)\n        node = firstTabbableNode || getNodeForOption('fallbackFocus');\n      }\n    }\n\n    if (!node) {\n      throw new Error(\n        'Your focus-trap needs to have at least one focusable element'\n      );\n    }\n\n    return node;\n  };\n\n  const updateTabbableNodes = function () {\n    state.tabbableGroups = state.containers\n      .map((container) => {\n        const tabbableNodes = tabbable(container);\n\n        // NOTE: if we have tabbable nodes, we must have focusable nodes; focusable nodes\n        //  are a superset of tabbable nodes\n        const focusableNodes = focusable(container);\n\n        if (tabbableNodes.length > 0) {\n          return {\n            container,\n            firstTabbableNode: tabbableNodes[0],\n            lastTabbableNode: tabbableNodes[tabbableNodes.length - 1],\n\n            /**\n             * Finds the __tabbable__ node that follows the given node in the specified direction,\n             *  in this container, if any.\n             * @param {HTMLElement} node\n             * @param {boolean} [forward] True if going in forward tab order; false if going\n             *  in reverse.\n             * @returns {HTMLElement|undefined} The next tabbable node, if any.\n             */\n            nextTabbableNode(node, forward = true) {\n              // NOTE: If tabindex is positive (in order to manipulate the tab order separate\n              //  from the DOM order), this __will not work__ because the list of focusableNodes,\n              //  while it contains tabbable nodes, does not sort its nodes in any order other\n              //  than DOM order, because it can't: Where would you place focusable (but not\n              //  tabbable) nodes in that order? They have no order, because they aren't tabbale...\n              // Support for positive tabindex is already broken and hard to manage (possibly\n              //  not supportable, TBD), so this isn't going to make things worse than they\n              //  already are, and at least makes things better for the majority of cases where\n              //  tabindex is either 0/unset or negative.\n              // FYI, positive tabindex issue: https://github.com/focus-trap/focus-trap/issues/375\n              const nodeIdx = focusableNodes.findIndex((n) => n === node);\n              if (forward) {\n                return focusableNodes\n                  .slice(nodeIdx + 1)\n                  .find((n) => isTabbable(n));\n              }\n              return focusableNodes\n                .slice(0, nodeIdx)\n                .reverse()\n                .find((n) => isTabbable(n));\n            },\n          };\n        }\n\n        return undefined;\n      })\n      .filter((group) => !!group); // remove groups with no tabbable nodes\n\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n    if (\n      state.tabbableGroups.length <= 0 &&\n      !getNodeForOption('fallbackFocus') // returning false not supported for this option\n    ) {\n      throw new Error(\n        'Your focus-trap must have at least one container with at least one tabbable node in it at all times'\n      );\n    }\n  };\n\n  const tryFocus = function (node) {\n    if (node === false) {\n      return;\n    }\n\n    if (node === doc.activeElement) {\n      return;\n    }\n\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus({ preventScroll: !!config.preventScroll });\n    state.mostRecentlyFocusedNode = node;\n\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n\n  const getReturnFocusNode = function (previousActiveElement) {\n    const node = getNodeForOption('setReturnFocus', previousActiveElement);\n    return node ? node : node === false ? false : previousActiveElement;\n  };\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  const checkPointerDown = function (e) {\n    const target = getActualTarget(e);\n\n    if (containersContain(target)) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // if, on deactivation, we should return focus to the node originally-focused\n        //  when the trap was activated (or the configured `setReturnFocus` node),\n        //  then assume it's also OK to return focus to the outside node that was\n        //  just clicked, causing deactivation, as long as that node is focusable;\n        //  if it isn't focusable, then return focus to the original node focused\n        //  on activation (or the configured `setReturnFocus` node)\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked, whether it's focusable or not; by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node)\n        returnFocus: config.returnFocusOnDeactivate && !isFocusable(target),\n      });\n      return;\n    }\n\n    // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      // allow the click outside the trap to take place\n      return;\n    }\n\n    // otherwise, prevent the click\n    e.preventDefault();\n  };\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  const checkFocusIn = function (e) {\n    const target = getActualTarget(e);\n    const targetContained = containersContain(target);\n\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (targetContained || target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      e.stopImmediatePropagation();\n      tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n    }\n  };\n\n  // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  const checkTab = function (e) {\n    const target = getActualTarget(e);\n    updateTabbableNodes();\n\n    let destinationNode = null;\n\n    if (state.tabbableGroups.length > 0) {\n      // make sure the target is actually contained in a group\n      // NOTE: the target may also be the container itself if it's focusable\n      //  with tabIndex='-1' and was given initial focus\n      const containerIndex = findIndex(state.tabbableGroups, ({ container }) =>\n        container.contains(target)\n      );\n      const containerGroup =\n        containerIndex >= 0 ? state.tabbableGroups[containerIndex] : undefined;\n\n      if (containerIndex < 0) {\n        // target not found in any group: quite possible focus has escaped the trap,\n        //  so bring it back in to...\n        if (e.shiftKey) {\n          // ...the last node in the last group\n          destinationNode =\n            state.tabbableGroups[state.tabbableGroups.length - 1]\n              .lastTabbableNode;\n        } else {\n          // ...the first node in the first group\n          destinationNode = state.tabbableGroups[0].firstTabbableNode;\n        }\n      } else if (e.shiftKey) {\n        // REVERSE\n\n        // is the target the first tabbable node in a group?\n        let startOfGroupIndex = findIndex(\n          state.tabbableGroups,\n          ({ firstTabbableNode }) => target === firstTabbableNode\n        );\n\n        if (\n          startOfGroupIndex < 0 &&\n          (containerGroup.container === target ||\n            (isFocusable(target) &&\n              !isTabbable(target) &&\n              !containerGroup.nextTabbableNode(target, false)))\n        ) {\n          // an exception case where the target is either the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle shift+tab as if focus were on the container's\n          //  first tabbable node, and go to the last tabbable node of the LAST group\n          startOfGroupIndex = containerIndex;\n        }\n\n        if (startOfGroupIndex >= 0) {\n          // YES: then shift+tab should go to the last tabbable node in the\n          //  previous group (and wrap around to the last tabbable node of\n          //  the LAST group if it's the first tabbable node of the FIRST group)\n          const destinationGroupIndex =\n            startOfGroupIndex === 0\n              ? state.tabbableGroups.length - 1\n              : startOfGroupIndex - 1;\n\n          const destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = destinationGroup.lastTabbableNode;\n        }\n      } else {\n        // FORWARD\n\n        // is the target the last tabbable node in a group?\n        let lastOfGroupIndex = findIndex(\n          state.tabbableGroups,\n          ({ lastTabbableNode }) => target === lastTabbableNode\n        );\n\n        if (\n          lastOfGroupIndex < 0 &&\n          (containerGroup.container === target ||\n            (isFocusable(target) &&\n              !isTabbable(target) &&\n              !containerGroup.nextTabbableNode(target)))\n        ) {\n          // an exception case where the target is the container itself, or\n          //  a non-tabbable node that was given focus (i.e. tabindex is negative\n          //  and user clicked on it or node was programmatically given focus)\n          //  and is not followed by any other tabbable node, in which\n          //  case, we should handle tab as if focus were on the container's\n          //  last tabbable node, and go to the first tabbable node of the FIRST group\n          lastOfGroupIndex = containerIndex;\n        }\n\n        if (lastOfGroupIndex >= 0) {\n          // YES: then tab should go to the first tabbable node in the next\n          //  group (and wrap around to the first tabbable node of the FIRST\n          //  group if it's the last tabbable node of the LAST group)\n          const destinationGroupIndex =\n            lastOfGroupIndex === state.tabbableGroups.length - 1\n              ? 0\n              : lastOfGroupIndex + 1;\n\n          const destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = destinationGroup.firstTabbableNode;\n        }\n      }\n    } else {\n      // NOTE: the fallbackFocus option does not support returning false to opt-out\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n\n    if (destinationNode) {\n      e.preventDefault();\n      tryFocus(destinationNode);\n    }\n    // else, let the browser take care of [shift+]tab and move the focus\n  };\n\n  const checkKey = function (e) {\n    if (\n      isEscapeEvent(e) &&\n      valueOrHandler(config.escapeDeactivates, e) !== false\n    ) {\n      e.preventDefault();\n      trap.deactivate();\n      return;\n    }\n\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  };\n\n  const checkClick = function (e) {\n    if (valueOrHandler(config.clickOutsideDeactivates, e)) {\n      return;\n    }\n\n    const target = getActualTarget(e);\n\n    if (containersContain(target)) {\n      return;\n    }\n\n    if (valueOrHandler(config.allowOutsideClick, e)) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  };\n\n  //\n  // EVENT LISTENERS\n  //\n\n  const addListeners = function () {\n    if (!state.active) {\n      return;\n    }\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trap);\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    state.delayInitialFocusTimer = config.delayInitialFocus\n      ? delay(function () {\n          tryFocus(getInitialFocusNode());\n        })\n      : tryFocus(getInitialFocusNode());\n\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false,\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false,\n    });\n\n    return trap;\n  };\n\n  const removeListeners = function () {\n    if (!state.active) {\n      return;\n    }\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n\n    return trap;\n  };\n\n  //\n  // TRAP DEFINITION\n  //\n\n  trap = {\n    activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n\n      const onActivate = getOption(activateOptions, 'onActivate');\n      const onPostActivate = getOption(activateOptions, 'onPostActivate');\n      const checkCanFocusTrap = getOption(activateOptions, 'checkCanFocusTrap');\n\n      if (!checkCanFocusTrap) {\n        updateTabbableNodes();\n      }\n\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n\n      if (onActivate) {\n        onActivate();\n      }\n\n      const finishActivation = () => {\n        if (checkCanFocusTrap) {\n          updateTabbableNodes();\n        }\n        addListeners();\n        if (onPostActivate) {\n          onPostActivate();\n        }\n      };\n\n      if (checkCanFocusTrap) {\n        checkCanFocusTrap(state.containers.concat()).then(\n          finishActivation,\n          finishActivation\n        );\n        return this;\n      }\n\n      finishActivation();\n      return this;\n    },\n\n    deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      clearTimeout(state.delayInitialFocusTimer); // noop if undefined\n      state.delayInitialFocusTimer = undefined;\n\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n\n      activeFocusTraps.deactivateTrap(trap);\n\n      const onDeactivate = getOption(deactivateOptions, 'onDeactivate');\n      const onPostDeactivate = getOption(deactivateOptions, 'onPostDeactivate');\n      const checkCanReturnFocus = getOption(\n        deactivateOptions,\n        'checkCanReturnFocus'\n      );\n\n      if (onDeactivate) {\n        onDeactivate();\n      }\n\n      const returnFocus = getOption(\n        deactivateOptions,\n        'returnFocus',\n        'returnFocusOnDeactivate'\n      );\n\n      const finishDeactivation = () => {\n        delay(() => {\n          if (returnFocus) {\n            tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n          }\n          if (onPostDeactivate) {\n            onPostDeactivate();\n          }\n        });\n      };\n\n      if (returnFocus && checkCanReturnFocus) {\n        checkCanReturnFocus(\n          getReturnFocusNode(state.nodeFocusedBeforeActivation)\n        ).then(finishDeactivation, finishDeactivation);\n        return this;\n      }\n\n      finishDeactivation();\n      return this;\n    },\n\n    pause() {\n      if (state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = true;\n      removeListeners();\n\n      return this;\n    },\n\n    unpause() {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = false;\n      updateTabbableNodes();\n      addListeners();\n\n      return this;\n    },\n\n    updateContainerElements(containerElements) {\n      const elementsAsArray = [].concat(containerElements).filter(Boolean);\n\n      state.containers = elementsAsArray.map((element) =>\n        typeof element === 'string' ? doc.querySelector(element) : element\n      );\n\n      if (state.active) {\n        updateTabbableNodes();\n      }\n\n      return this;\n    },\n  };\n\n  // initialize container elements\n  trap.updateContainerElements(elements);\n\n  return trap;\n};\n\nexport { createFocusTrap };\n", "import {\n  AutofillOptions,\n  AutofillRetrieveResponse,\n  AutofillSuggestion,\n  AutofillSuggestionResponse,\n  MapboxAutofill,\n  SearchSession\n} from '@mapbox/search-js-core';\n\nimport { MapboxSearchListbox } from './MapboxSearchListbox';\nimport { HTMLScopedElement } from './HTMLScopedElement';\n\nimport { tryParseJSON } from '../utils';\nimport { fillFormWithFeature } from '../utils/autofill';\n\nimport { Theme } from '../theme';\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\nimport { config } from '../config';\n\nexport type MapboxSearchListboxAutofillType = MapboxSearchListbox<\n  AutofillOptions,\n  AutofillSuggestion,\n  AutofillSuggestionResponse,\n  AutofillRetrieveResponse\n>;\n\ntype AutofillEventTypes = {\n  /**\n   * Fired when the user is typing in the input and provides a list of suggestions.\n   *\n   * The underlying response from {@link MapboxAutofill} is passed as the event's detail.\n   *\n   * @event suggest\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @type {AutofillSuggestionResponse}\n   * @example\n   * ```typescript\n   * autofill.addEventListener('suggest', (event) => {\n   *   const suggestions = event.detail.suggestions;\n   *   // ...\n   * });\n   * ```\n   */\n  suggest: MapboxHTMLEvent<AutofillSuggestionResponse>;\n  /**\n   * Fired when {@link MapboxAutofill} has errored providing a list of suggestions.\n   *\n   * The underlying error is passed as the event's detail.\n   *\n   * @event suggesterror\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @type {Error}\n   * @example\n   * ```typescript\n   * autofill.addEventListener('suggesterror', (event) => {\n   *   const error = event.detail;\n   *   // ...\n   * });\n   * ```\n   */\n  suggesterror: MapboxHTMLEvent<Error>;\n  /**\n   * Fired when the user has selected a suggestion, before the form is autofilled.\n   *\n   * The underlying response from {@link MapboxAutofill} is passed as the event's detail.\n   *\n   * @event retrieve\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @type {AutofillRetrieveResponse}\n   * @example\n   * ```typescript\n   * autofill.addEventListener('retrieve', (event) => {\n   *   const featureCollection = event.detail;\n   *   // ...\n   * });\n   * ```\n   */\n  retrieve: MapboxHTMLEvent<AutofillRetrieveResponse>;\n};\n\n/**\n * `MapboxAddressAutofill`, also available as the element `<mapbox-address-autofill>`,\n * is an element that wraps an address [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text) element with\n * intelligent, location-aware autocomplete functionality.\n *\n * To use this element, you must have a [Mapbox access token](https://www.mapbox.com/help/create-api-access-token/).\n *\n * This element must be a descendant of a [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form) element, and the form\n * must have inputs with proper HTML `autocomplete` attributes. If your application works with browser autofill, you may already have\n * this functionality.\n * - [The HTML autocomplete attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n * - [Autofill](https://web.dev/learn/forms/autofill/)\n *\n * @class MapboxAddressAutofill\n * @example\n * <form>\n *   <mapbox-address-autofill access-token=\"<your access token here>\">\n *     <input type=\"text\" name=\"address\" autocomplete=\"shipping street-address\" />\n *   </mapbox-address-autofill>\n * </form>\n */\nexport class MapboxAddressAutofill extends HTMLScopedElement<AutofillEventTypes> {\n  /**\n   * This is read by the Web Components API to affect the\n   * {@link MapboxAddressAutofill.attributeChangedCallback} below.\n   *\n   * All of these are passthroughs to the underlying {@link MapboxSearchListbox}.\n   *\n   * @ignore\n   */\n  static observedAttributes: string[] = [\n    // Access token.\n    'access-token',\n    // Theming, CSS.\n    'theme',\n    'css-text',\n    // Underlying Autofill API options.\n    'language',\n    'country',\n    'bbox',\n    'limit',\n    'proximity'\n  ];\n\n  #autofill = new MapboxAutofill();\n  #session = new SearchSession(this.#autofill);\n\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   *\n   * @name accessToken\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @example\n   * ```typescript\n   * autofill.accessToken = 'pk.my-mapbox-access-token';\n   * ```\n   */\n  get accessToken(): string {\n    return this.#autofill.accessToken;\n  }\n  set accessToken(newToken: string) {\n    this.#autofill.accessToken = newToken;\n  }\n\n  #input: HTMLInputElement;\n  #listbox: MapboxSearchListboxAutofillType = new MapboxSearchListbox();\n\n  /**\n   * Options to pass to the underlying {@link MapboxAutofill} interface.\n   *\n   * @name options\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @type {AutofillOptions}\n   * @example\n   * ```typescript\n   * autofill.options = {\n   *  language: 'en',\n   *  country: 'US',\n   * };\n   * ```\n   */\n  get options(): Partial<AutofillOptions> {\n    return this.#listbox.options;\n  }\n  set options(newOptions: Partial<AutofillOptions>) {\n    this.#listbox.options = newOptions;\n  }\n\n  /**\n   * The {@link Theme} to use for styling the autofill component.\n   *\n   * @name theme\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @type {Theme}\n   * @example\n   * ```typescript\n   * autofill.theme = {\n   *   variables: {\n   *     colorPrimary: 'myBrandRed'\n   *   }\n   * };\n   * ```\n   */\n  get theme(): Theme {\n    return this.#listbox.theme;\n  }\n  set theme(theme: Theme) {\n    this.#listbox.theme = theme;\n  }\n\n  #handleSuggest = (e: MapboxHTMLEvent<AutofillSuggestionResponse>): void => {\n    // Manually bubble up the event.\n    this.dispatchEvent(e.clone());\n  };\n\n  #handleSuggestError = (e: MapboxHTMLEvent<Error>): void => {\n    // Manually bubble up the event.\n    this.dispatchEvent(e.clone());\n  };\n\n  #handleRetrieve = (e: MapboxHTMLEvent<AutofillRetrieveResponse>): void => {\n    // Manually bubble up the event.\n    this.dispatchEvent(e.clone());\n\n    if (!this.#input) {\n      return;\n    }\n\n    const featureCollection = e.detail;\n    if (\n      !featureCollection ||\n      !featureCollection.features ||\n      !featureCollection.features.length\n    ) {\n      return;\n    }\n\n    fillFormWithFeature(featureCollection.features[0], this.#input);\n  };\n\n  // Called when content changes.\n  #handleObserve = (): void => {\n    try {\n      const input: HTMLInputElement = this.querySelector('input') ?? null;\n\n      this.#input = input;\n      this.#listbox.input = input;\n    } catch (e) {\n      this.#input = null;\n      this.#listbox.input = null;\n\n      console.error(e.message || e);\n    }\n  };\n\n  #observer = new MutationObserver(this.#handleObserve);\n\n  connectedCallback(): void {\n    super.connectedCallback();\n\n    config.autofillSessionEnabled = true;\n\n    // Bind the listbox to the session.\n    this.#listbox.session = this.#session;\n    this.#listbox.session.sessionToken = config.autofillSessionToken;\n\n    this.#listbox.addEventListener('suggest', this.#handleSuggest);\n    this.#listbox.addEventListener('suggesterror', this.#handleSuggestError);\n    this.#listbox.addEventListener('retrieve', this.#handleRetrieve);\n\n    document.body.appendChild(this.#listbox);\n\n    // Setup observer handler.\n    this.#observer.observe(this, {\n      subtree: true,\n      childList: true\n    });\n\n    this.#handleObserve();\n  }\n\n  disconnectedCallback(): void {\n    this.#listbox.remove();\n\n    this.#listbox.removeEventListener('suggest', this.#handleSuggest);\n    this.#listbox.removeEventListener('suggesterror', this.#handleSuggestError);\n    this.#listbox.removeEventListener('retrieve', this.#handleRetrieve);\n\n    this.#observer.disconnect();\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (name === 'access-token') {\n      this.#autofill.accessToken = newValue;\n      return;\n    }\n\n    if (name === 'theme') {\n      this.theme = tryParseJSON(newValue);\n      return;\n    }\n\n    // Convert to the proper name for options.\n    // Example: eta-type => eta_type\n    const optionName = name.split('-').join('_');\n\n    if (!newValue) {\n      delete this.#listbox.options[optionName];\n    }\n\n    // Otherwise, assume it's a Search API option.\n    this.#listbox.options[optionName] = newValue;\n  }\n\n  /** @section {Methods} */\n\n  /**\n   * Focuses the wrapped input element.\n   */\n  focus(): void {\n    this.#listbox.focus();\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxAddressAutofill: typeof MapboxAddressAutofill;\n  }\n}\n\nwindow.MapboxAddressAutofill = MapboxAddressAutofill;\n\nif (!window.customElements.get('mapbox-address-autofill')) {\n  customElements.define('mapbox-address-autofill', MapboxAddressAutofill);\n}\n", "/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport var earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var factors = {\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    degrees: earthRadius / 111325,\n    feet: earthRadius * 3.28084,\n    inches: earthRadius * 39.37,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    meters: earthRadius,\n    metres: earthRadius,\n    miles: earthRadius / 1609.344,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    nauticalmiles: earthRadius / 1852,\n    radians: 1,\n    yards: earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input) {\n    return !!input && input.constructor === Object;\n}\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\n", "import { feature, lineString, isObject, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexport { coordAll, coordEach, coordReduce, featureEach, featureReduce, findPoint, findSegment, flattenEach, flattenReduce, geomEach, geomReduce, lineEach, lineReduce, propEach, propReduce, segmentEach, segmentReduce };\n", "import { coordEach } from \"@turf/meta\";\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var result = [Infinity, Infinity, -Infinity, -Infinity];\n    coordEach(geojson, function (coord) {\n        if (result[0] > coord[0]) {\n            result[0] = coord[0];\n        }\n        if (result[1] > coord[1]) {\n            result[1] = coord[1];\n        }\n        if (result[2] < coord[0]) {\n            result[2] = coord[0];\n        }\n        if (result[3] < coord[1]) {\n            result[3] = coord[1];\n        }\n    });\n    return result;\n}\nbbox[\"default\"] = bbox;\nexport default bbox;\n", "import { polygon } from \"@turf/helpers\";\n/**\n * Takes a bbox and returns an equivalent {@link Polygon|polygon}.\n *\n * @name bboxPolygon\n * @param {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @param {Object} [options={}] Optional parameters\n * @param {Properties} [options.properties={}] Translate properties to Polygon\n * @param {string|number} [options.id={}] Translate Id to Polygon\n * @returns {Feature<Polygon>} a Polygon representation of the bounding box\n * @example\n * var bbox = [0, 0, 10, 10];\n *\n * var poly = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [poly]\n */\nexport default function bboxPolygon(bbox, options) {\n    if (options === void 0) { options = {}; }\n    // Convert BBox positions to Numbers\n    // No performance loss for including Number()\n    // https://github.com/Turfjs/turf/issues/1119\n    var west = Number(bbox[0]);\n    var south = Number(bbox[1]);\n    var east = Number(bbox[2]);\n    var north = Number(bbox[3]);\n    if (bbox.length === 6) {\n        throw new Error(\"@turf/bbox-polygon does not support BBox with 6 positions\");\n    }\n    var lowLeft = [west, south];\n    var topLeft = [west, north];\n    var topRight = [east, north];\n    var lowRight = [east, south];\n    return polygon([[lowLeft, lowRight, topRight, topLeft, lowLeft]], options.properties, { bbox: bbox, id: options.id });\n}\n", "import {\n  featureToSuggestion,\n  LngLatBounds,\n  MapboxSearch,\n  Options,\n  RetrieveResponse,\n  Suggestion,\n  SuggestionResponse,\n  SearchSession\n} from '@mapbox/search-js-core';\nimport mapboxgl from 'mapbox-gl';\n\nimport bbox from '@turf/bbox';\nimport bboxPolygon from '@turf/bbox-polygon';\n\nimport { MapboxSearchListbox } from './MapboxSearchListbox';\nimport { HTMLScopedElement } from './HTMLScopedElement';\n\nimport { FlatLngLatBounds, tryParseJSON } from '../utils';\nimport { createElementFromString } from '../utils/dom';\nimport { bboxViewport, FLY_TO_SPEED, getMaxZoom } from '../utils/map';\n\nimport { Theme, getThemeCSS } from '../theme';\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\n\nimport style from '../style.css';\n\n/**\n * Proximity is designed for local scale. If the user is looking at the whole world,\n * it doesn't make sense to factor in the arbitrary center of the map.\n */\nconst MAX_ZOOM = 9;\n\nconst TEMPLATE = createElementFromString<HTMLTemplateElement>(`\n<template>\n  <input class=\"Input\" type=\"text\" />\n</template>\n`);\n\nexport type MapboxSearchListboxSearchType = MapboxSearchListbox<\n  Options,\n  Suggestion,\n  SuggestionResponse,\n  RetrieveResponse\n>;\n\ntype SearchEventTypes = {\n  /**\n   * Fired when the user is typing and is provided a list of suggestions.\n   *\n   * The underlying response from {@link MapboxSearch} is passed as the event's detail.\n   *\n   * @event suggest\n   * @instance\n   * @memberof MapboxSearchBox\n   * @type {SuggestionResponse}\n   * @example\n   * ```typescript\n   * search.addEventListener('suggest', (event) => {\n   *   const suggestions = event.detail.suggestions;\n   *   // ...\n   * });\n   * ```\n   */\n  suggest: MapboxHTMLEvent<SuggestionResponse>;\n  /**\n   * Fired when {@link MapboxSearch} has errored providing a list of suggestions.\n   *\n   * The underlying error is passed as the event's detail.\n   *\n   * @event suggesterror\n   * @instance\n   * @memberof MapboxSearchBox\n   * @type {Error}\n   * @example\n   * ```typescript\n   * search.addEventListener('suggesterror', (event) => {\n   *   const error = event.detail;\n   *   // ...\n   * });\n   * ```\n   */\n  suggesterror: MapboxHTMLEvent<Error>;\n  /**\n   * Fired when the user has selected a suggestion.\n   *\n   * The underlying response from {@link MapboxSearch} is passed as the event's detail.\n   *\n   * @event retrieve\n   * @instance\n   * @memberof MapboxSearchBox\n   * @type {RetrieveResponse}\n   * @example\n   * ```typescript\n   * search.addEventListener('retrieve', (event) => {\n   *   const featureCollection = event.detail;\n   *   // ...\n   * });\n   * ```\n   */\n  retrieve: MapboxHTMLEvent<RetrieveResponse>;\n  input: MapboxHTMLEvent<unknown>;\n};\n\n/**\n * `MapboxSearchBox`, also available as the element `<mapbox-search-box>`,\n * is an element that lets you search for places, addresses, and landmarks using\n * the [Mapbox Search API](https://docs.mapbox.com/api/search/search).\n *\n * It can control a [Mapbox GL JS](https://docs.mapbox.com/mapbox-gl-js/guides/) map\n * to zoom to the selected result.\n *\n * Additionally, `MapboxSearchBox` implements the [IControl](https://www.mapbox.com/mapbox-gl-js/api/markers/#icontrol)\n * interface.\n *\n * To use this element, you must have a [Mapbox access token](https://www.mapbox.com/help/create-api-access-token/).\n *\n * @class MapboxSearchBox\n * @example\n * ```typescript\n * const search = new MapboxSearchBox();\n * search.accessToken = '<your access token here>';\n * map.addControl(search);\n * ```\n * @example\n * <mapbox-search-box\n *   access-token=\"<your access token here>\"\n *   proximity=\"0,0\"\n * >\n * </mapbox-search-box>\n */\nexport class MapboxSearchBox\n  extends HTMLScopedElement<SearchEventTypes>\n  implements mapboxgl.IControl\n{\n  /**\n   * This is read by the Web Components API to affect the\n   * {@link MapboxSearchBox#attributeChangedCallback} below.\n   *\n   * All of these are passthroughs to the underlying {@link MapboxSearchListbox}.\n   *\n   * @ignore\n   */\n  static observedAttributes: string[] = [\n    // Access token.\n    'access-token',\n    // Theming.\n    'theme',\n    // Underlying Search API options.\n    'language',\n    'country',\n    'bbox',\n    'limit',\n    'navigation-profile',\n    'origin',\n    'proximity',\n    'eta-type',\n    'types'\n  ];\n\n  #search = new MapboxSearch({});\n  #session = new SearchSession(this.#search);\n\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   *\n   * @name accessToken\n   * @instance\n   * @memberof MapboxSearchBox\n   * @example\n   * ```typescript\n   * search.accessToken = 'pk.my-mapbox-access-token';\n   * ```\n   */\n  get accessToken(): string {\n    return this.#search.accessToken;\n  }\n  set accessToken(newToken: string) {\n    this.#search.accessToken = newToken;\n  }\n\n  /**\n   * The value of the input element.\n   *\n   * @name value\n   * @instance\n   * @memberof MapboxSearchBox\n   * @example\n   * ```typescript\n   * console.log(search.value);\n   * ```\n   */\n  get value(): string {\n    return this.#input.value;\n  }\n  set value(newValue: string) {\n    this.#input.value = newValue;\n  }\n\n  #map: mapboxgl.Map | null = null;\n\n  #input: HTMLInputElement;\n  #listbox: MapboxSearchListboxSearchType = new MapboxSearchListbox();\n\n  protected override get template(): HTMLTemplateElement {\n    return TEMPLATE;\n  }\n\n  protected override get templateStyle(): string {\n    return style;\n  }\n\n  protected override get templateUserStyle(): string {\n    return getThemeCSS('.Input', this.#listbox.theme);\n  }\n\n  /**\n   * Options to pass to the underlying {@link MapboxSearch} interface.\n   *\n   * @name options\n   * @instance\n   * @memberof MapboxSearchBox\n   * @type {Options}\n   * @example\n   * ```typescript\n   * search.options = {\n   *  language: 'en',\n   *  country: 'US',\n   * };\n   * ```\n   */\n  get options(): Partial<Options> {\n    return this.#listbox.options;\n  }\n  set options(newOptions: Partial<Options>) {\n    this.#listbox.options = newOptions;\n  }\n\n  /**\n   * The {@link Theme} to use for styling the suggestion box and search box.\n   *\n   * @name theme\n   * @instance\n   * @memberof MapboxSearchBox\n   * @type {Theme}\n   * @example\n   * ```typescript\n   * search.theme = {\n   *   variables: {\n   *     colorPrimary: 'myBrandRed'\n   *   },\n   *   cssText: \".Input:active { opacity: 0.9; }\"\n   * };\n   * ```\n   */\n  get theme(): Theme {\n    return this.#listbox.theme;\n  }\n  set theme(theme: Theme) {\n    this.#listbox.theme = theme;\n\n    const input = this.#input;\n    if (!input) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(getThemeCSS('.Input', theme));\n    this.#listbox.updatePopover();\n  }\n\n  #handleSuggest = (e: MapboxHTMLEvent<SuggestionResponse>): void => {\n    // Manually bubble up the event.\n    this.dispatchEvent(e.clone());\n  };\n\n  #handleSuggestError = (e: MapboxHTMLEvent<Error>): void => {\n    // Manually bubble up the event.\n    this.dispatchEvent(e.clone());\n  };\n\n  #handleRetrieve = async (\n    e: MapboxHTMLEvent<RetrieveResponse>\n  ): Promise<void> => {\n    // Manually bubble up the event.\n    this.dispatchEvent(e.clone());\n\n    const featureCollection = e.detail;\n    if (!featureCollection || !featureCollection.features.length) {\n      return;\n    }\n\n    // Set value of the input.\n    const suggestion = featureToSuggestion(featureCollection.features[0]);\n    this.#input.value = suggestion.feature_name;\n\n    const map = this.#map;\n    if (!map) {\n      return;\n    }\n\n    const features = featureCollection.features;\n    // Handle single feature.\n    if (features.length === 1) {\n      const feature = features[0];\n      const placeType = feature.properties.place_type?.[0];\n\n      const bounds = feature.bbox;\n      if (bounds) {\n        map.flyTo(\n          bboxViewport(map, LngLatBounds.convert(bounds).toFlatArray())\n        );\n      } else {\n        const center = feature.geometry.coordinates as mapboxgl.LngLatLike;\n        const zoom = getMaxZoom(placeType);\n\n        map.flyTo({\n          center,\n          zoom,\n          speed: FLY_TO_SPEED\n        });\n      }\n\n      return;\n    }\n\n    // Get the bounds of the feature, bbox if available.\n    const geoAccurateFeatures = featureCollection.features.map((feature) => {\n      if (feature.bbox) {\n        return bboxPolygon(LngLatBounds.convert(feature.bbox).toFlatArray());\n      }\n\n      return feature;\n    });\n\n    const bounds = bbox({\n      type: 'FeatureCollection',\n      features: geoAccurateFeatures\n    });\n    map.flyTo(bboxViewport(map, bounds as FlatLngLatBounds));\n  };\n\n  #handleInput = (e: InputEvent): void => {\n    const event = new MapboxHTMLEvent('input');\n    Object.assign(event, {\n      ...e\n    });\n\n    this.dispatchEvent<'input'>(event);\n  };\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n\n    const input = this.querySelector<HTMLInputElement>('.Input');\n    input.addEventListener('input', this.#handleInput);\n\n    this.#input = input;\n\n    // Bind the listbox to the session.\n    this.#listbox.session = this.#session as SearchSession<\n      Options,\n      Suggestion,\n      SuggestionResponse,\n      RetrieveResponse\n    >;\n    this.#listbox.input = input;\n    this.#listbox.addEventListener('suggest', this.#handleSuggest);\n    this.#listbox.addEventListener('suggesterror', this.#handleSuggestError);\n    this.#listbox.addEventListener('retrieve', this.#handleRetrieve);\n\n    document.body.appendChild(this.#listbox);\n  }\n\n  disconnectedCallback(): void {\n    this.#listbox.remove();\n    this.#listbox.input = null;\n\n    this.#listbox.removeEventListener('suggest', this.#handleSuggest);\n    this.#listbox.removeEventListener('suggesterror', this.#handleSuggestError);\n    this.#listbox.removeEventListener('retrieve', this.#handleRetrieve);\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (name === 'access-token') {\n      this.#search.accessToken = newValue;\n      return;\n    }\n\n    if (name === 'theme') {\n      this.theme = tryParseJSON(newValue);\n      return;\n    }\n\n    // Convert to the proper name for options.\n    // Example: eta-type => eta_type\n    const optionName = name.split('-').join('_');\n\n    if (!newValue) {\n      delete this.#listbox.options[optionName];\n    }\n\n    // Otherwise, assume it's a Search API option.\n    this.#listbox.options[optionName] = newValue;\n  }\n\n  /** @section {Methods} */\n\n  /**\n   * Focuses the input element.\n   */\n  focus(): void {\n    this.#listbox.focus();\n  }\n\n  #handleMoveEnd = (): void => {\n    const map = this.#map;\n    const options = { ...this.#listbox.options };\n\n    if (map.getZoom() <= MAX_ZOOM) {\n      delete options.proximity;\n      this.#listbox.options = options;\n\n      return;\n    }\n\n    const center = map.getCenter();\n    this.#listbox.options = {\n      ...options,\n      proximity: center\n    };\n  };\n\n  /** @section {Map binding} */\n\n  /**\n   * Connects the search box to a [Map](https://docs.mapbox.com/mapbox-gl-js/api/#map),\n   * which handles both setting proximity and zoom after a suggestion click.\n   *\n   * @example\n   * ```typescript\n   * const search = new MapboxSearchBox();\n   * search.bindMap(map);\n   * ```\n   */\n  bindMap(map: mapboxgl.Map): void {\n    if (this.#map) {\n      this.#map.off('moveend', this.#handleMoveEnd);\n    }\n\n    if (map) {\n      map.on('moveend', this.#handleMoveEnd);\n    }\n\n    this.#map = map;\n  }\n\n  /**\n   * Unbinds the search box from a [Map](https://docs.mapbox.com/mapbox-gl-js/api/#map).\n   */\n  unbindMap(): void {\n    this.bindMap(null);\n  }\n\n  // IControl interface.\n\n  // eslint-disable-next-line custom-elements/no-method-prefixed-with-on\n  onAdd(map: mapboxgl.Map): HTMLElement {\n    this.bindMap(map);\n    this.remove();\n\n    const container = document.createElement('div');\n    container.className = 'mapboxgl-ctrl';\n    container.style.width = '300px';\n    container.appendChild(this);\n\n    return container;\n  }\n\n  // eslint-disable-next-line custom-elements/no-method-prefixed-with-on\n  onRemove(): void {\n    this.remove();\n    this.unbindMap();\n  }\n\n  getDefaultPosition(): string {\n    return 'top-right';\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxSearchBox: typeof MapboxSearchBox;\n  }\n}\n\nwindow.MapboxSearchBox = MapboxSearchBox;\n\nif (!window.customElements.get('mapbox-search-box')) {\n  customElements.define('mapbox-search-box', MapboxSearchBox);\n}\n", "import SphericalMercator from '@mapbox/sphericalmercator';\nimport { deepEquals, round } from '.';\nimport { getElementSize } from './dom';\n\nexport type MapStyleMode = 'default' | 'satellite';\n\n/**\n * @typedef Anchor\n */\nexport type Anchor =\n  | 'center'\n  | 'top-left'\n  | 'top-right'\n  | 'bottom-left'\n  | 'bottom-right'\n  | 'top'\n  | 'bottom'\n  | 'left'\n  | 'right';\n\n// eslint-disable-next-line\n// @ts-ignore\nconst merc = new SphericalMercator({ size: 512, antimeridian: true });\n\nexport const MAX_IMAGE_DIM = 1280;\n\ninterface MarkerTransform {\n  anchorX: number;\n  anchorY: number;\n  globalX: number;\n  globalY: number;\n}\n\n/**\n * Get the [X,Y] pixel offset for a given SVG marker and anchor definition\n * @param marker - An SVG element used as the marker\n * @param anchor - The anchor point of the marker to put closest to the marked coordinate\n * @returns [X,Y] pixel coordinate\n */\nexport function getAnchorOffset(\n  marker: HTMLElement,\n  anchor: Anchor\n): [number, number] {\n  const { width, height } = getElementSize(marker, true);\n  switch (anchor) {\n    case 'center':\n      return [0, 0];\n    case 'top':\n      return [0, height / 2];\n    case 'bottom':\n      return [0, (-1 * height) / 2];\n    case 'left':\n      return [width / 2, 0];\n    case 'right':\n      return [(-1 * width) / 2, 0];\n    case 'top-left':\n      return [width / 2, height / 2];\n    case 'top-right':\n      return [(-1 * width) / 2, height / 2];\n    case 'bottom-left':\n      return [width / 2, (-1 * height) / 2];\n    case 'bottom-right':\n      return [(-1 * width) / 2, (-1 * height) / 2];\n  }\n}\n\n/**\n * Manages positioning of a static map image and marker relative to\n * pixel and geographical coordinates. Handles pointer events for\n * interactive/adjustable instances.\n */\nexport class MarkerController {\n  imgContainerElement: HTMLElement;\n  markerElement: HTMLElement;\n  keepMarkerCentered: boolean;\n  zoom: number;\n\n  /** X-offset for the marker element to account for its positioning anchor */\n  anchorOffsetX: number;\n  /** Y-offset for the marker element to account for its positioning anchor */\n  anchorOffsetY: number;\n\n  /** Current X pixel of the pointer on the page */\n  curPointerXPos: number;\n  /** Current Y pixel of the pointer on the page */\n  curPointerYPos: number;\n  /** X-pixels deviation of marker position from the current map/feature center point */\n  markerDeltaX: number;\n  /** Y-pixels deviation of marker position from the current map/feature center point */\n  markerDeltaY: number;\n\n  /** Lng/lat of image center represented as screen pixels */\n  imgCenterPx: [number, number];\n  /** Lng/lat of adjusted image center as screen pixels */\n  imgCenterAdjustedPx: [number, number];\n\n  /**\n   *\n   * @param imageContainer - The parent element of the <img>\n   * @param marker - SVG Element used as the map marker\n   * @param keepMarkerCentered - If true, the marker will stay centered within the frame while the map moves behind it\n   * @param zoom - The zoom level of the static map, used to calculate between screen pixel and lng/lat\n   * @param anchor - The part of the marker that should be positioned closest to the coordinate\n   */\n  constructor(\n    imageContainer: HTMLElement,\n    marker: HTMLElement,\n    keepMarkerCentered: boolean,\n    zoom: number,\n    anchor: Anchor\n  ) {\n    this.markerElement = marker;\n    this.imgContainerElement = imageContainer;\n    this.keepMarkerCentered = keepMarkerCentered;\n    this.zoom = zoom;\n    this.anchor = anchor;\n\n    this.curPointerXPos = 0;\n    this.curPointerYPos = 0;\n    this.markerDeltaX = 0;\n    this.markerDeltaY = 0;\n\n    this.imgContainerElement.addEventListener(\n      'pointerdown',\n      this.#onPointerDownImage\n    );\n\n    if (!this.keepMarkerCentered) {\n      this.markerElement.addEventListener(\n        'pointerdown',\n        this.#onPointerDownMarker\n      );\n    }\n\n    // Listen for changes to anchor size\n    const resizeObserver = new ResizeObserver(this.#handleAnchorResize);\n    resizeObserver.observe(this.markerElement);\n  }\n\n  #anchor: Anchor;\n\n  get anchor(): Anchor {\n    return this.#anchor;\n  }\n\n  set anchor(newAnchor: Anchor) {\n    this.#anchor = newAnchor;\n    [this.anchorOffsetX, this.anchorOffsetY] = getAnchorOffset(\n      this.markerElement,\n      newAnchor\n    );\n    this.markerTransform = {\n      anchorX: this.anchorOffsetX,\n      anchorY: this.anchorOffsetY\n    };\n  }\n\n  #handleAnchorResize = (): void => {\n    [this.anchorOffsetX, this.anchorOffsetY] = getAnchorOffset(\n      this.markerElement,\n      this.anchor\n    );\n    this.markerTransform = {\n      anchorX: this.anchorOffsetX,\n      anchorY: this.anchorOffsetY\n    };\n  };\n\n  #markerTransform: MarkerTransform = {\n    anchorX: 0,\n    anchorY: 0,\n    globalX: 0,\n    globalY: 0\n  };\n\n  get markerTransform(): MarkerTransform {\n    return this.#markerTransform;\n  }\n\n  set markerTransform(val: Partial<MarkerTransform>) {\n    this.#markerTransform = {\n      ...this.#markerTransform,\n      ...val\n    };\n    this.#updateMarkerTransform();\n  }\n\n  #isActive = false;\n\n  /** True if the marker is currently in edit mode */\n  get isActive(): boolean {\n    return this.#isActive;\n  }\n\n  /** Set to true to enable editing of the marker */\n  set isActive(val: boolean) {\n    this.imgContainerElement.style.touchAction = val ? 'none' : '';\n    this.#isActive = val;\n  }\n\n  /** Height of the <img> element */\n  get imgHeight(): number {\n    return Math.min(this.imgContainerElement.clientHeight * 2, MAX_IMAGE_DIM);\n  }\n\n  /** Width of the <img> element */\n  get imgWidth(): number {\n    return Math.min(this.imgContainerElement.clientWidth * 2, MAX_IMAGE_DIM);\n  }\n\n  #originalCoordinate: [number, number];\n\n  /** Lng/lat of the current marker location */\n  get coordinate(): [number, number] {\n    const adjustedPx: [number, number] = this.keepMarkerCentered\n      ? this.imgCenterAdjustedPx\n      : [\n          this.imgCenterPx[0] - this.markerDeltaX,\n          this.imgCenterPx[1] + this.markerDeltaY\n        ];\n\n    // If the screen pixel hasn't changed, use the original coordinate so as not to incur any precision rounding during translation\n    if (deepEquals(adjustedPx, this.imgCenterPx)) {\n      return this.#originalCoordinate;\n    } else {\n      const lngLat = merc.ll(adjustedPx, this.zoom);\n      return [round(lngLat[0], 6), round(lngLat[1], 6)];\n    }\n  }\n\n  /** Set the lng/lat corresponding to the initial marker and image center location */\n  set coordinate(lngLat: [number, number]) {\n    this.#originalCoordinate = lngLat;\n    this.imgCenterPx = this.imgCenterAdjustedPx = merc.px(lngLat, this.zoom);\n  }\n\n  // Marker dragging event handlers\n  #onPointerDownMarker = (m: PointerEvent): void => {\n    if (!this.isActive) return;\n\n    m.preventDefault();\n    m.stopPropagation();\n\n    this.#updatePointerPosition(m);\n\n    window.addEventListener('pointermove', this.#onPointerMoveMarker);\n    window.addEventListener('pointerup', this.#onPointerUpMarker);\n  };\n\n  #onPointerUpMarker = (): void => {\n    window.removeEventListener('pointermove', this.#onPointerMoveMarker);\n    window.removeEventListener('pointerup', this.#onPointerUpMarker);\n  };\n\n  #onPointerMoveMarker = (m: PointerEvent): void => {\n    m.preventDefault();\n    m.stopPropagation();\n\n    // Calculate change in pointer position\n    const diffX = this.curPointerXPos - m.pageX;\n    const diffY = this.curPointerYPos - m.pageY;\n\n    // Update relative marker positioning\n    this.markerDeltaX += diffX;\n    this.markerDeltaY -= diffY;\n    // Clamp to image bounds\n    this.markerDeltaX = Math.max(\n      Math.min(this.imgWidth / 2, this.markerDeltaX),\n      (this.imgWidth / 2) * -1\n    );\n    this.markerDeltaY = Math.max(\n      Math.min(this.imgHeight / 2, this.markerDeltaY),\n      (this.imgHeight / 2) * -1\n    );\n\n    // Calculate X/Y transforms\n    const imageOffsetX = this.imgCenterPx[0] - this.imgCenterAdjustedPx[0];\n    const imageOffsetY = this.imgCenterPx[1] - this.imgCenterAdjustedPx[1];\n    const deltaX = this.markerDeltaX - imageOffsetX;\n    const deltaY = this.markerDeltaY + imageOffsetY;\n\n    this.markerTransform = { globalX: deltaX, globalY: deltaY };\n\n    // Update pointer position\n    this.#updatePointerPosition(m);\n  };\n\n  // Image dragging event handlers\n  #onPointerDownImage = (m: PointerEvent): void => {\n    if (!this.isActive) return;\n\n    m.preventDefault();\n    m.stopPropagation();\n\n    this.#updatePointerPosition(m);\n\n    window.addEventListener('pointermove', this.#onPointerMoveImage);\n    window.addEventListener('pointerup', this.#onPointerUpImage);\n  };\n\n  #onPointerUpImage = (): void => {\n    window.removeEventListener('pointermove', this.#onPointerMoveImage);\n    window.removeEventListener('pointerup', this.#onPointerUpImage);\n  };\n\n  #onPointerMoveImage = (m: PointerEvent): void => {\n    m.preventDefault();\n\n    // Calculate and constrain updated scroll position\n    let top = Math.round(\n      this.imgContainerElement.scrollTop + (this.curPointerYPos - m.pageY)\n    );\n    // Clamp to container bounds\n    top = Math.max(\n      Math.min(this.imgHeight - this.imgContainerElement.clientHeight, top),\n      0\n    );\n    let left = Math.round(\n      this.imgContainerElement.scrollLeft + (this.curPointerXPos - m.pageX)\n    );\n    // Clamp to container bounds\n    left = Math.max(\n      Math.min(this.imgWidth - this.imgContainerElement.clientWidth, left),\n      0\n    );\n    this.imgContainerElement.scrollTop = top;\n    this.imgContainerElement.scrollLeft = left;\n\n    // Update adjusted center location\n    const diffX = Math.round(\n      left - (this.imgWidth - this.imgContainerElement.clientWidth) / 2\n    );\n    const diffY = Math.round(\n      (this.imgHeight - this.imgContainerElement.clientHeight) / 2 - top\n    );\n    this.imgCenterAdjustedPx = [\n      this.imgCenterPx[0] + diffX,\n      this.imgCenterPx[1] - diffY\n    ];\n\n    if (!this.keepMarkerCentered) {\n      // Move marker in sync with image to maintain visual positioning on map\n      const deltaX = this.markerDeltaX + diffX;\n      const deltaY = this.markerDeltaY + diffY;\n      this.markerTransform = { globalX: deltaX, globalY: deltaY };\n    }\n\n    // Update pointer position\n    this.#updatePointerPosition(m);\n  };\n\n  #updatePointerPosition = (m: PointerEvent): void => {\n    this.curPointerXPos = m.pageX;\n    this.curPointerYPos = m.pageY;\n  };\n\n  #updateMarkerTransform = (): void => {\n    const { anchorX, anchorY, globalX, globalY } = this.#markerTransform;\n    const transformX = anchorX - globalX;\n    const transformY = anchorY + globalY;\n    this.markerElement.style.transform = `translate(calc(-50% + ${transformX}px), calc(-50% + ${transformY}px))`;\n  };\n\n  /** Re-center the marker on the map at its original location */\n  reCenter = (): void => {\n    // Set scroll values to center image in its container\n    const top = (this.imgHeight - this.imgContainerElement.clientHeight) / 2;\n    const left = (this.imgWidth - this.imgContainerElement.clientWidth) / 2;\n    this.imgContainerElement.scrollTop = top;\n    this.imgContainerElement.scrollLeft = left;\n\n    // Reset adjusted image center screen coordinate to match original\n    this.imgCenterAdjustedPx = this.imgCenterPx;\n\n    // Reset marker transform in case it was changed\n    this.markerDeltaX = this.markerDeltaY = 0;\n    this.markerTransform = { globalX: 0, globalY: 0 };\n  };\n}\n", "import { LngLat, LngLatLike } from '@mapbox/search-js-core';\n\nimport { HTMLScopedElement } from './HTMLScopedElement';\n\nimport {\n  bindElements,\n  createElementFromString,\n  getElementSize\n} from '../utils/dom';\nimport {\n  Anchor,\n  MapStyleMode,\n  MarkerController,\n  MAX_IMAGE_DIM\n} from '../utils/minimap';\nimport { getStaticBaseUrl } from '../utils/map';\n\nimport {\n  AUTOFILL_SKU_TOKEN_PREFIX,\n  STATIC_BASE_URL_SATELLITE\n} from '../constants';\nimport { getIcon, getImage, getThemeCSS, Theme } from '../theme';\n\nimport style from '../style.css';\nimport logo from '../icons/mapboxgl-ctrl-logo.svg';\nimport { deepEquals } from '../utils';\nimport { sendFeedback } from '../utils/contribute';\n\nimport { config } from '../config';\n\n// TODO: Scale by device pixel ratio?\nconst ZOOM = 16;\n\nconst TEMPLATE = createElementFromString<HTMLTemplateElement>(`\n<template>\n  <div class=\"MapboxAddressMinimap\" aria-hidden=\"true\">\n    <div class=\"MinimapImageContainer\">\n      <img class=\"MinimapImage\" draggable=\"false\"></img>\n      <div class=\"MinimapInnerFrame\">\n        <div class=\"MinimapMarker\"></div>\n        <div class=\"MinimapAttribution\">\n          <div class=\"MinimapAttributionLogo\">\n            <a target=\"_blank\" rel=\"noopener nofollow\" href=\"https://www.mapbox.com/\" aria-label=\"Mapbox logo\">\n              ${logo}\n            </a>\n          </div>\n          <div class=\"MinimapAttributionText\">\n            <a target=\"_blank\" href='https://www.mapbox.com/about/maps/'>\u00A9 Mapbox</a><a target=\"_blank\" href='http://www.openstreetmap.org/copyright'>\u00A9 OpenStreetMap</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n`);\n\nconst STYLE_TOGGLE_TEMPLATE = createElementFromString<HTMLTemplateElement>(`\n<template>\n  <button type=\"button\" class=\"MinimapStyleToggle\"></button>\n</template>\n`);\n\nconst FOOTER_TEMPLATE = createElementFromString<HTMLTemplateElement>(`\n<template>\n  <div class=\"MinimapFooter\">Adjust the marker on the map if it doesn't precisely match your location. This helps your delivery reach you faster.</div>\n</template>\n`);\n\nconst EDIT_BUTTONS_TEMPLATE = createElementFromString<HTMLTemplateElement>(`\n<template>\n  <div class=\"MinimapEditButtons\">\n    <div class=\"Button ButtonPrimary MinimapButtonAdjust\">Adjust pin</div>\n    <div class=\"Button ButtonPrimary MinimapButtonSave\" aria-hidden=\"true\">Save</div>\n    <div class=\"Button MinimapButtonCancel\" aria-hidden=\"true\">Cancel</div>\n  </div>\n</template>\n`);\n\ntype Binding = {\n  MapboxAddressMinimap: HTMLElement;\n  ImageContainer: HTMLElement;\n  Image: HTMLImageElement;\n  Marker: HTMLElement;\n  MapStyleToggle?: HTMLElement;\n  EditButtons?: HTMLElement;\n  ButtonAdjust?: HTMLButtonElement;\n  ButtonSave?: HTMLButtonElement;\n  ButtonCancel?: HTMLButtonElement;\n};\n\n/**\n * `MapboxAddressMinimap`, also available as the element `<mapbox-address-minimap>`,\n * is a component that displays a marker for confirmation purposes.\n *\n * Optionally, this marker is editable. When editable, the marker can be moved\n * around the map and the updated location is sent back to the Mapbox Contribute\n * workflow.\n *\n * The goal of `MapboxAddressMinimap` is to reduce delivery error in shipping and\n * local dispatching contexts.\n *\n * `MapboxAddressMinimap` expands to fill its container, and is hidden unless\n * {@link MapboxAddressMinimap#feature} is truthy. Setting {@link MapboxAddressMinimap#feature}\n * to `null` hides the component.\n *\n * @class MapboxAddressMinimap\n * @example\n * ```typescript\n * const minimap = new MapboxAddressMinimap();\n * containerElement.appendChild(minimap);\n * minimap.feature = {\n *   type: 'Feature',\n *   geometry: {\n *     type: 'Point',\n *     coordinates: [-122.4194, 37.7749]\n *   },\n *   properties: {}\n * };\n * ```\n */\nexport class MapboxAddressMinimap extends HTMLScopedElement {\n  static observedAttributes: string[] = [\n    'access-token',\n    'can-adjust-marker',\n    'keep-marker-centered',\n    'marker-anchor',\n    'satellite-toggle'\n  ];\n\n  #canAdjustMarkerInternal = false;\n\n  /** @section {Markers} */\n\n  /**\n   * If `true`, the marker can be moved around the map. Defaults to `false`.\n   *\n   * When editable, the marker can be moved around the map and the updated\n   * location can be referenced from the {@link MapboxAddressMinimap#onSaveMarkerLocation} callback.\n   *\n   * @name canAdjustMarker\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {boolean}\n   */\n  get canAdjustMarker(): boolean {\n    return this.#canAdjustMarkerInternal;\n  }\n  set canAdjustMarker(val: boolean) {\n    this.#canAdjustMarkerInternal = val;\n    val ? this.#addMarkerEditControls() : this.#removeMarkerEditControls();\n  }\n  /**\n   * If `true`, the map when panned moves around the marker, keeping the marker\n   * centered. Defaults to `false`.\n   *\n   * @name keepMarkerCentered\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {boolean}\n   */\n  keepMarkerCentered = false;\n  /**\n   * The anchor of the marker, relative to center of the expanded size. Defaults to `'bottom'`.\n   *\n   * @name markerAnchor\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {Anchor}\n   */\n  markerAnchor: Anchor = 'bottom';\n  /**\n   * A client-defined callback that is triggered when the \"Save\" button is clicked in the editing interface,\n   * and gives access to the adjusted marker coordinate.\n   *\n   * @name onSaveMarkerLocation\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {function}\n   */\n  onSaveMarkerLocation: (coordinate: [number, number]) => void;\n\n  #isAdjustMarkerEditing = false;\n\n  #imageLoaded = false;\n\n  #feature: GeoJSON.Feature<GeoJSON.Point>;\n  #url = '';\n\n  #width: number;\n  #height: number;\n\n  #binding: Binding;\n\n  #markerController: MarkerController;\n\n  #accessToken: string;\n\n  /** @section {Input data} */\n\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   *\n   * If not explicitly set on the component, this will reference the value in the global config object.\n   *\n   * @name accessToken\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @example\n   * ```typescript\n   * minimap.accessToken = 'pk.my-mapbox-access-token';\n   * ```\n   */\n  get accessToken(): string {\n    return this.#accessToken || config.accessToken;\n  }\n  set accessToken(newToken: string) {\n    this.#accessToken = newToken;\n  }\n\n  /**\n   * A [GeoJSON](https://docs.mapbox.com/help/glossary/geojson/) Feature representing\n   * a [Point](https://geojson.org/geojson-spec.html#point) geometry.\n   *\n   * The minimap is hidden unless\n   * {@link MapboxAddressMinimap#feature} is truthy. Setting {@link MapboxAddressMinimap#feature}\n   * to `null` hides the component.\n   *\n   * @name feature\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {Feature}\n   */\n  get feature(): GeoJSON.Feature<GeoJSON.Point> {\n    return this.#feature;\n  }\n  set feature(feature: GeoJSON.Feature<GeoJSON.Point>) {\n    this.#feature = feature;\n\n    if (!feature) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  get template(): HTMLTemplateElement {\n    return TEMPLATE;\n  }\n\n  get templateStyle(): string {\n    return style;\n  }\n\n  get templateUserStyle(): string {\n    return getThemeCSS('.MapboxAddressMinimap', this.theme);\n  }\n\n  #themeInternal: Theme = {};\n  #satelliteToggleInternal = false;\n\n  /** @section {Appearance} */\n\n  /**\n   * If `true`, the map will have an image toggle between Map and Satellite styles.\n   *\n   * @name satelliteToggle\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {boolean}\n   */\n  get satelliteToggle(): boolean {\n    return this.#satelliteToggleInternal;\n  }\n  set satelliteToggle(val: boolean) {\n    this.#satelliteToggleInternal = val;\n    val ? this.#addSatelliteToggle() : this.#removeSatelliteToggle();\n  }\n\n  /**\n   * The {@link Theme} to use for styling the editing interface.\n   *\n   * @name theme\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {Theme}\n   * @example\n   * ```typescript\n   * autofill.theme = {\n   *   variables: {\n   *     colorPrimary: 'myBrandRed'\n   *   }\n   * };\n   * ```\n   */\n  get theme(): Theme {\n    return this.#themeInternal;\n  }\n  set theme(theme: Theme) {\n    this.#themeInternal = theme;\n\n    if (!this.#binding || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(getThemeCSS('.MapboxAddressMinimap', theme));\n\n    const { Marker, MapStyleToggle } = this.#binding;\n    Marker.innerHTML = getIcon('marker', theme);\n    if (MapStyleToggle) {\n      MapStyleToggle.style.backgroundImage = this.#getToggleBackgroundImageUrl(\n        this.mapStyleMode === 'default' ? 'satellite' : 'default'\n      );\n    }\n  }\n\n  #mapStyleMode: MapStyleMode = 'default';\n\n  /**\n   * The map style to use, either `'default'` or `'satellite'`. The default map\n   * style is configurable with {@link MapboxAddressMinimap#defaultMapStyle}.\n   *\n   * @name mapStyleMode\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {'default' | 'satellite'}\n   */\n  get mapStyleMode(): MapStyleMode {\n    return this.#mapStyleMode;\n  }\n  set mapStyleMode(styleMode: MapStyleMode) {\n    const prevStyleMode = this.#mapStyleMode;\n    this.#mapStyleMode = styleMode;\n    if (!this.#binding) {\n      return;\n    }\n\n    // Update toggle button background image\n    const { MapStyleToggle } = this.#binding;\n    if (!MapStyleToggle) {\n      return;\n    }\n\n    MapStyleToggle.style.backgroundImage =\n      this.#getToggleBackgroundImageUrl(prevStyleMode);\n    // Update title attribute\n    MapStyleToggle.setAttribute(\n      'title',\n      `Switch to ${prevStyleMode === 'satellite' ? 'Satellite' : 'Default'}`\n    );\n    this.#updateImageSrc();\n  }\n\n  #defaultMapStyle: [string, string] = ['mapbox', 'streets-v11'];\n\n  /**\n   * The map style to use for the default map style. Defaults to `['mapbox', 'streets-v11']`.\n   *\n   * @name defaultMapStyle\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {[string, string]}\n   */\n  get defaultMapStyle(): [string, string] {\n    return this.#defaultMapStyle;\n  }\n  set defaultMapStyle(style: [string, string]) {\n    this.#defaultMapStyle = style;\n    this.#updateImageSrc();\n  }\n\n  /**\n   * @deprecated Use `container` instead.\n   */\n  #container: HTMLElement | null;\n\n  get container(): HTMLElement | null {\n    return this.#container;\n  }\n\n  set container(newContainer: HTMLElement | null) {\n    if (newContainer) {\n      newContainer.style.position = 'relative';\n      this.#container = newContainer;\n    }\n  }\n\n  /** @section {Methods} */\n\n  /**\n   * If {@link MapboxAddressMinimap#feature} is truthy, show the minimap.\n   */\n  show(): void {\n    if (!this.#feature) {\n      return;\n    }\n\n    const lngLat = this.#feature.geometry.coordinates;\n    this.#markerController.coordinate = lngLat as [number, number];\n\n    this.#url = this.#getImageUrl(lngLat as [number, number]);\n\n    // Update image.\n    const { MapboxAddressMinimap, Image } = this.#binding;\n    Image.src = this.#url;\n\n    MapboxAddressMinimap.removeAttribute('aria-hidden');\n  }\n\n  /**\n   * Hide the minimap.\n   */\n  hide(): void {\n    const { MapboxAddressMinimap } = this.#binding;\n    MapboxAddressMinimap.setAttribute('aria-hidden', 'true');\n  }\n\n  #toggleMarkerEditing = (): void => {\n    const { ImageContainer, ButtonAdjust, ButtonSave, ButtonCancel } =\n      this.#binding;\n    if (this.#isAdjustMarkerEditing) {\n      ImageContainer.classList.add(`${this.dataset.seed}--draggable`);\n      this.#markerController.isActive = true;\n      ButtonAdjust.setAttribute('aria-hidden', 'true');\n      ButtonSave.removeAttribute('aria-hidden');\n      ButtonCancel.removeAttribute('aria-hidden');\n    } else {\n      ImageContainer.classList.remove(`${this.dataset.seed}--draggable`);\n      this.#markerController.isActive = false;\n      ButtonAdjust.removeAttribute('aria-hidden');\n      ButtonSave.setAttribute('aria-hidden', 'true');\n      ButtonCancel.setAttribute('aria-hidden', 'true');\n    }\n  };\n\n  #handleStartMarkerEditing = (): void => {\n    this.#isAdjustMarkerEditing = true;\n    this.#toggleMarkerEditing();\n  };\n\n  #handleSaveMarkerEditing = (): void => {\n    // Send feedback to Contribute API if feature includes address info, and the marker location has changed\n    if (\n      this.feature.properties.full_address &&\n      !deepEquals(\n        this.feature.geometry.coordinates,\n        this.#markerController.coordinate\n      )\n    ) {\n      const [lng, lat] = this.#markerController.coordinate;\n      sendFeedback(this.accessToken, {\n        originalCoordinate: this.feature.geometry.coordinates as [\n          number,\n          number\n        ],\n        originalAddress: this.feature.properties.full_address,\n        changes: {\n          location: { longitude: lng, latitude: lat }\n        }\n      });\n    }\n    // Client-defined callback\n    if (this.onSaveMarkerLocation) {\n      this.onSaveMarkerLocation(this.#markerController.coordinate);\n    }\n    // Update component state\n    this.#isAdjustMarkerEditing = false;\n    this.#toggleMarkerEditing();\n  };\n\n  #handleCancelMarkerEditing = (): void => {\n    this.#markerController.reCenter();\n    this.#isAdjustMarkerEditing = false;\n    this.#toggleMarkerEditing();\n  };\n\n  #handleToggleMapStyle = (): void => {\n    this.mapStyleMode =\n      this.mapStyleMode === 'default' ? 'satellite' : 'default';\n  };\n\n  #handleImageLoad = (): void => {\n    if (!this.#imageLoaded) {\n      this.#markerController.reCenter();\n    }\n    this.#imageLoaded = true;\n  };\n\n  #handleImageError = (): void => {\n    this.#imageLoaded = false;\n  };\n\n  /**\n   * Get the Static Image API URL for a given coordinate.\n   * Attempts to get an image twice as large as the container to enable panning,\n   * while constraining to the static API size limits.\n   * @param lngLatLike - The coordinate representing the center of the image\n   * @returns\n   */\n  #getImageUrl = (lngLatLike: LngLatLike): string => {\n    // Return empty string if height or width is 0 to prevent 422 error\n    if (this.#width === 0 || this.#height === 0) return '';\n\n    const [username, styleId] = this.defaultMapStyle;\n    const defaultBaseUrl = getStaticBaseUrl(username, styleId);\n    const baseUrl =\n      this.mapStyleMode === 'default'\n        ? defaultBaseUrl\n        : STATIC_BASE_URL_SATELLITE;\n    const skuToken =\n      AUTOFILL_SKU_TOKEN_PREFIX + config.autofillSessionToken.toString();\n    let imgUrl =\n      baseUrl +\n      LngLat.convert(lngLatLike).toArray().join(',') +\n      ',' +\n      ZOOM +\n      ',0/' +\n      Math.min(this.#width * 2, MAX_IMAGE_DIM) +\n      'x' +\n      Math.min(this.#height * 2, MAX_IMAGE_DIM) +\n      '?access_token=' +\n      this.accessToken +\n      '&attribution=false' +\n      '&logo=false';\n    if (config.autofillSessionEnabled) {\n      imgUrl += `&sku=${skuToken}`;\n    }\n    return imgUrl;\n  };\n\n  #updateImageSrc = (): void => {\n    if (this.#feature) {\n      const lngLat = this.#feature.geometry.coordinates;\n      this.#url = this.#getImageUrl(lngLat as [number, number]);\n      const { Image } = this.#binding;\n      Image.src = this.#url;\n    }\n  };\n\n  #getToggleBackgroundImageUrl = (styleMode: MapStyleMode): string => {\n    return `url(\"${getImage(\n      styleMode === 'default' ? 'styleToggleDefault' : 'styleToggleSatellite',\n      this.theme\n    )}\")`;\n  };\n\n  #setSize = (): void => {\n    const { MapboxAddressMinimap, ImageContainer } = this.#binding;\n    const { width, height } = getElementSize(this.container);\n    this.#width = Math.min(width, MAX_IMAGE_DIM); // Constrain to Static Image API limit\n    this.#height = Math.min(height, MAX_IMAGE_DIM); // Constrain to Static Image API limit\n    MapboxAddressMinimap.style.setProperty('width', `${this.#width}px`);\n    ImageContainer.style.setProperty('height', `${this.#height}px`);\n    ImageContainer.style.setProperty('width', `${this.#width}px`);\n    // Update the image source URL based on the new size\n    this.#updateImageSrc();\n  };\n\n  #addMarkerEditControls = (): void => {\n    // Footer\n    const existingFooter = this.querySelector('.MinimapFooter');\n    if (existingFooter) return;\n    const footerElement = this.prepareTemplate(FOOTER_TEMPLATE);\n    const minimapElement = this.querySelector('.MapboxAddressMinimap');\n    if (!minimapElement) return;\n    minimapElement.appendChild(footerElement);\n\n    // Edit buttons\n    const existingEditBtns = this.querySelector('.MinimapEditButtons');\n    if (existingEditBtns) return;\n    const editButtonsElement = this.prepareTemplate(EDIT_BUTTONS_TEMPLATE);\n    const innerFrame = this.querySelector('.MinimapInnerFrame');\n    innerFrame.appendChild(editButtonsElement);\n\n    // Add to or update object binding\n    this.#binding = {\n      ...this.#binding,\n      EditButtons: this.querySelector('.MinimapEditButtons'),\n      ButtonAdjust: this.querySelector('.MinimapButtonAdjust'),\n      ButtonSave: this.querySelector('.MinimapButtonSave'),\n      ButtonCancel: this.querySelector('.MinimapButtonCancel')\n    };\n\n    // Bind callbacks to button click events\n    const { ButtonAdjust, ButtonSave, ButtonCancel } = this.#binding;\n    ButtonAdjust.addEventListener('click', this.#handleStartMarkerEditing);\n    ButtonSave.addEventListener('click', this.#handleSaveMarkerEditing);\n    ButtonCancel.addEventListener('click', this.#handleCancelMarkerEditing);\n  };\n\n  #removeMarkerEditControls = (): void => {\n    if (!this.#binding) return;\n    const { EditButtons, ButtonAdjust, ButtonSave, ButtonCancel } =\n      this.#binding;\n\n    const existingFooter = this.querySelector('.MinimapFooter');\n    existingFooter?.remove();\n    EditButtons?.remove();\n    if (ButtonAdjust) {\n      ButtonAdjust.remove();\n      ButtonAdjust.removeEventListener('click', this.#handleStartMarkerEditing);\n    }\n    if (ButtonSave) {\n      ButtonSave.remove();\n      ButtonSave.removeEventListener('click', this.#handleSaveMarkerEditing);\n    }\n    if (ButtonCancel) {\n      ButtonCancel.remove();\n      ButtonCancel.removeEventListener(\n        'click',\n        this.#handleCancelMarkerEditing\n      );\n    }\n\n    delete this.#binding.EditButtons;\n    delete this.#binding.ButtonAdjust;\n    delete this.#binding.ButtonSave;\n    delete this.#binding.ButtonCancel;\n  };\n\n  #addSatelliteToggle = (): void => {\n    const existingToggle = this.querySelector('.MinimapStyleToggle');\n    if (existingToggle) return;\n\n    // Add element to DOM\n    const toggleElement = this.prepareTemplate(STYLE_TOGGLE_TEMPLATE);\n    const innerFrame = this.querySelector('.MinimapInnerFrame');\n    if (!innerFrame) return;\n    innerFrame.appendChild(toggleElement);\n\n    // Add to or update object binding\n    this.#binding.MapStyleToggle = toggleElement;\n\n    // Bind callback\n    toggleElement.addEventListener('click', this.#handleToggleMapStyle);\n    // Initialize background image\n    toggleElement.style.backgroundImage = this.#getToggleBackgroundImageUrl(\n      this.mapStyleMode === 'default' ? 'satellite' : 'default'\n    );\n    toggleElement.setAttribute(\n      'title',\n      `Switch to ${this.mapStyleMode === 'default' ? 'Satellite' : 'Default'}`\n    );\n  };\n\n  #removeSatelliteToggle = (): void => {\n    if (!this.#binding) return;\n    const { MapStyleToggle } = this.#binding;\n    if (!MapStyleToggle) return;\n\n    MapStyleToggle.remove();\n    MapStyleToggle.removeEventListener('click', this.#handleToggleMapStyle);\n\n    delete this.#binding.MapStyleToggle;\n  };\n\n  connectedCallback(): void {\n    super.connectedCallback();\n\n    this.#binding = bindElements<Binding>(this, {\n      MapboxAddressMinimap: '.MapboxAddressMinimap',\n      ImageContainer: '.MinimapImageContainer',\n      Image: '.MinimapImage',\n      Marker: '.MinimapMarker',\n      MapStyleToggle: '.MinimapStyleToggle',\n      EditButtons: '.MinimapEditButtons',\n      ButtonAdjust: '.MinimapButtonAdjust',\n      ButtonSave: '.MinimapButtonSave',\n      ButtonCancel: '.MinimapButtonCancel'\n    });\n\n    // Update toggle button background image.\n    this.mapStyleMode = this.#mapStyleMode;\n\n    // Initialize theme if not set before connectedCallback\n    this.theme = { ...this.theme };\n\n    // Append buttons and footer if adjustable\n    if (this.canAdjustMarker) {\n      this.#addMarkerEditControls();\n    }\n\n    // Append style toggle if enabled\n    if (this.satelliteToggle) {\n      this.#addSatelliteToggle();\n    }\n\n    // Calculate size and listen for changes\n    this.container = this.parentElement;\n    const resizeObserver = new ResizeObserver(this.#setSize);\n    resizeObserver.observe(this.container);\n    this.#setSize();\n\n    const { MapboxAddressMinimap, ImageContainer, Image, Marker } =\n      this.#binding;\n\n    // Initialize marker controller\n    this.#markerController = new MarkerController(\n      ImageContainer,\n      Marker,\n      this.keepMarkerCentered,\n      ZOOM,\n      this.markerAnchor\n    );\n    this.#markerController.reCenter();\n    Image.onload = this.#handleImageLoad;\n    Image.onerror = this.#handleImageError;\n\n    Image.src = this.#url;\n\n    if (this.#feature) MapboxAddressMinimap.removeAttribute('aria-hidden');\n    else MapboxAddressMinimap.setAttribute('aria-hidden', 'true');\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (name === 'access-token') {\n      this.accessToken = newValue;\n    } else if (name === 'can-adjust-marker') {\n      this.canAdjustMarker = newValue === 'true';\n    } else if (name === 'keep-marker-centered') {\n      this.keepMarkerCentered = newValue === 'true';\n    } else if (name === 'marker-anchor') {\n      const newAnchor = newValue as Anchor;\n      this.markerAnchor = newAnchor;\n      this.#markerController && (this.#markerController.anchor = newAnchor);\n    } else if (name === 'satellite-toggle') {\n      this.satelliteToggle = newValue === 'true';\n    }\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxAddressMinimap: typeof MapboxAddressMinimap;\n  }\n}\n\nwindow.MapboxAddressMinimap = MapboxAddressMinimap;\n\nif (!window.customElements.get('mapbox-address-minimap')) {\n  customElements.define('mapbox-address-minimap', MapboxAddressMinimap);\n}\n", "import {\n  AutofillOptions,\n  AutofillRetrieveResponse,\n  AutofillSuggestionResponse,\n  Evented,\n  MapboxAutofill,\n  SearchSession\n} from '@mapbox/search-js-core';\n\nimport { MapboxSearchListboxAutofillType } from './components/MapboxAddressAutofill';\nimport { MapboxSearchListbox } from './components/MapboxSearchListbox';\nimport { MapboxHTMLEvent } from './MapboxHTMLEvent';\nimport { Theme } from './theme';\nimport { deepEquals } from './utils';\nimport { fillFormWithFeature, findAddressInputs } from './utils/autofill';\n\nimport { config } from './config';\n\n/**\n * @class AutofillInstance\n */\nexport class AutofillInstance {\n  #input: HTMLInputElement;\n  #collection: AutofillCollectionType;\n\n  listbox: MapboxSearchListboxAutofillType = new MapboxSearchListbox();\n\n  constructor(\n    collection: AutofillCollectionType,\n    input: HTMLInputElement,\n    autofillRef: MapboxAutofill\n  ) {\n    this.#input = input;\n    this.#collection = collection;\n    this.listbox.input = this.#input;\n\n    // Bind the listbox to the session.\n    this.listbox.session = new SearchSession(autofillRef);\n    this.listbox.session.sessionToken = config.autofillSessionToken;\n\n    this.listbox.addEventListener('suggest', this.#handleSuggest);\n    this.listbox.addEventListener('suggesterror', this.#handleSuggestError);\n    this.listbox.addEventListener('retrieve', this.#handleRetrieve);\n\n    document.body.appendChild(this.listbox);\n  }\n\n  remove(): void {\n    this.listbox.remove();\n    this.listbox.removeEventListener('suggest', this.#handleSuggest);\n    this.listbox.removeEventListener('suggesterror', this.#handleSuggestError);\n    this.listbox.removeEventListener('retrieve', this.#handleRetrieve);\n  }\n\n  #handleSuggest = (e: MapboxHTMLEvent<AutofillSuggestionResponse>): void => {\n    // Manually bubble up the event.\n    this.#collection.fire('suggest', e.clone(this.#input));\n  };\n\n  #handleSuggestError = (e: MapboxHTMLEvent<Error>): void => {\n    // Manually bubble up the event.\n    this.#collection.fire('suggesterror', e.clone(this.#input));\n  };\n\n  #handleRetrieve = (e: MapboxHTMLEvent<AutofillRetrieveResponse>): void => {\n    // Manually bubble up the event.\n    this.#collection.fire('retrieve', e.clone(this.#input));\n\n    if (!this.#input) {\n      return;\n    }\n\n    const featureCollection = e.detail;\n    if (\n      !featureCollection ||\n      !featureCollection.features ||\n      !featureCollection.features.length\n    ) {\n      return;\n    }\n\n    fillFormWithFeature(featureCollection.features[0], this.#input);\n  };\n}\n\ninterface AutofillCollectionOptions {\n  accessToken?: string;\n  options?: Partial<AutofillOptions>;\n  theme?: Theme;\n}\n\ninterface EventTypes<AutofillSuggestionResponse, AutofillRetrieveResponse> {\n  /**\n   * Fired when the user is typing in the input and provides a list of suggestions.\n   *\n   * The underlying response from {@link MapboxAutofill} is passed as the event's detail,\n   * while the responsible input is passed as the event's target.\n   *\n   * @event suggest\n   * @instance\n   * @memberof AutofillCollection\n   * @type {AutofillSuggestionResponse}\n   * @example\n   * ```typescript\n   * collection.addEventListener('suggest', (event) => {\n   *   const suggestions = event.detail.suggestions;\n   *   const inputEl = event.target;\n   *   // ...\n   * });\n   * ```\n   */\n  suggest: MapboxHTMLEvent<AutofillSuggestionResponse>;\n  /**\n   * Fired when {@link MapboxAutofill} has errored providing a list of suggestions.\n   *\n   * The underlying error is passed as the event's detail,\n   * while the responsible input is passed as the event's target.\n   *\n   * @event suggesterror\n   * @instance\n   * @memberof AutofillCollection\n   * @type {Error}\n   * @example\n   * ```typescript\n   * collection.addEventListener('suggesterror', (event) => {\n   *   const error = event.detail;\n   *   const inputEl = event.target;\n   *   // ...\n   * });\n   * ```\n   */\n  suggesterror: MapboxHTMLEvent<Error>;\n  /**\n   * Fired when the user has selected a suggestion, before the form is autofilled.\n   *\n   * The underlying response from {@link MapboxAutofill} is passed as the event's detail,\n   * while the responsible input is passed as the event's target.\n   *\n   * @event retrieve\n   * @instance\n   * @memberof AutofillCollection\n   * @type {AutofillRetrieveResponse}\n   * @example\n   * ```typescript\n   * autofill.addEventListener('retrieve', (event) => {\n   *   const featureCollection = event.detail;\n   *   const inputEl = event.target;\n   *   // ...\n   * });\n   * ```\n   */\n  retrieve: MapboxHTMLEvent<AutofillRetrieveResponse>;\n}\n\ntype AutofillCollectionType = AutofillCollection<\n  AutofillSuggestionResponse,\n  AutofillRetrieveResponse\n>;\n\n/**\n * Underlying collection object class returned by the {@link autofill} function.\n *\n * @class AutofillCollection\n */\nexport class AutofillCollection<\n  AutofillSuggestionResponse,\n  AutofillRetrieveResponse\n> extends Evented<\n  EventTypes<AutofillSuggestionResponse, AutofillRetrieveResponse>\n> {\n  instances: AutofillInstance[] = [];\n  #currentInputs: HTMLInputElement[];\n\n  #autofill = new MapboxAutofill();\n\n  constructor({ accessToken, options, theme }: AutofillCollectionOptions) {\n    super();\n\n    config.autofillSessionEnabled = true;\n\n    this.accessToken = accessToken || config.accessToken;\n    options && (this.options = options);\n    theme && (this.theme = theme);\n    this.update();\n  }\n\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   *\n   * @example\n   * ```typescript\n   * autofill.accessToken = 'pk.my-mapbox-access-token';\n   * ```\n   */\n  get accessToken(): string {\n    return this.#autofill.accessToken;\n  }\n  set accessToken(newToken: string) {\n    this.#autofill.accessToken = newToken;\n  }\n\n  #options: Partial<AutofillOptions>;\n\n  /**\n   * Options to pass to the underlying {@link MapboxAutofill} interface.\n   *\n   * @example\n   * ```typescript\n   * autofill.options = {\n   *  language: 'en',\n   *  country: 'US',\n   * };\n   * ```\n   */\n  get options(): Partial<AutofillOptions> {\n    return this.#options;\n  }\n  set options(newOptions: Partial<AutofillOptions>) {\n    this.#options = { ...this.#options, ...newOptions };\n    this.instances.forEach((instance) => {\n      instance.listbox.options = { ...instance.listbox.options, ...newOptions };\n    });\n  }\n\n  #theme: Theme;\n\n  /**\n   * The {@link Theme} to use for styling the autofill component.\n   *\n   * @example\n   * ```typescript\n   * autofill.theme = {\n   *   variables: {\n   *     colorPrimary: 'myBrandRed'\n   *   }\n   * };\n   * ```\n   */\n  get theme(): Theme {\n    return this.#theme;\n  }\n  set theme(newTheme: Theme) {\n    this.#theme = newTheme;\n    this.instances.forEach((instance) => {\n      instance.listbox.theme = newTheme;\n    });\n  }\n\n  /** @section {Methods} */\n\n  /**\n   * Updates autofill collection based on the current DOM state.\n   * @example\n   * ```typescript\n   * collection.update();\n   * ```\n   */\n  update(): void {\n    // STEP 0: Remove and clean up any existing autofill instances\n    this.instances.forEach((instance) => {\n      instance.remove();\n    });\n    // STEP 1: Find the input element(s)\n    this.#currentInputs = findAddressInputs();\n    // STEP 2: Create a new autofill instance for each input\n    this.instances = [];\n    this.#currentInputs.forEach((input) => {\n      const autofillInstance = new AutofillInstance(\n        this,\n        input,\n        this.#autofill\n      );\n      autofillInstance.listbox.options = this.options;\n      autofillInstance.listbox.theme = this.theme;\n      this.instances.push(autofillInstance);\n    });\n  }\n\n  // TODO: optimize this!\n  // Called when content changes.\n  #handleObserve = (): void => {\n    // TODO: add test to make sure this comparison works\n    if (!deepEquals(findAddressInputs(), this.#currentInputs)) {\n      this.update();\n    }\n  };\n\n  #observer = new MutationObserver(this.#handleObserve);\n\n  /**\n   * Listen for changes to the DOM, and update autofill instances when autofill-able inputs are added/removed.\n   *\n   * **IMPORTANT:** For performance reasons, it is recommended to carefully control\n   * when this is called and to call {@link AutofillCollection#unobserve} when finished.\n   *\n   * @example\n   * ```typescript\n   * collection.observe();\n   * ```\n   */\n  observe(): void {\n    // Setup observer handler.\n    this.#observer.observe(document, {\n      subtree: true,\n      childList: true\n    });\n\n    this.#handleObserve();\n  }\n\n  /**\n   * Stop listening for changes to the DOM. This only has an effect if called\n   * after {@link AutofillCollection#observe}.\n   *\n   * @example\n   * ```typescript\n   * collection.unobserve();\n   * ```\n   */\n  unobserve(): void {\n    this.#observer.disconnect();\n  }\n}\n\n/**\n * Entry point for Mapbox Address Autofill, for use on standard HTML input elements.\n *\n * Compared to {@link MapboxAddressAutofill}, this function automatically attaches\n * to eligible [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text) elements in-place.\n *\n * You must have a [Mapbox access token](https://www.mapbox.com/help/create-api-access-token/).\n *\n * Eligible inputs must be a descendant of a [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form) element, and the form\n * must have inputs with proper HTML `autocomplete` attributes. The input itself must be of autocomplete `\"street-address\"` or `\"address-line1\"\"`.\n *\n * If your application works with browser autofill, you may already have this functionality.\n * - [The HTML autocomplete attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n * - [Autofill](https://web.dev/learn/forms/autofill/)\n *\n * @param optionsArg\n * @param {string} optionsArg.accessToken - A [Mapbox access token](https://www.mapbox.com/help/create-api-access-token/).\n * @param {Partial<AutofillOptions>} [optionsArg.options] - Options to set on the underlying Autofill API.\n * @example\n * <input type=\"text\" autocomplete=\"street-address\" />\n * <script>\n * mapboxsearch.autofill({\n *   accessToken: 'pk.my.token',\n *   options: { country: 'us' }\n * };\n * </script>\n * @example\n * ```typescript\n * const collection = autofill({\n *   accessToken: 'pk.my.token',\n *   options\n * })\n *\n * myClientSideRouter.on('route', () => collection.update());\n * ```\n */\nexport function autofill(\n  optionsArg: AutofillCollectionOptions\n): AutofillCollectionType {\n  const { accessToken, options } = optionsArg;\n  return new AutofillCollection({\n    accessToken,\n    options\n  });\n}\n", "import {\n  AutofillFeatureSuggestion,\n  featureToSuggestion\n} from '@mapbox/search-js-core';\nimport { MapboxSearchListboxAutofillType } from './components/MapboxAddressAutofill';\nimport {\n  AddressConfirmOptions,\n  MapboxAddressConfirmation\n} from './components/MapboxAddressConfirmation';\nimport { config } from './config';\n\nimport {\n  featureToAutofillValueMap,\n  findAddressInputs,\n  getFormAutofillValues,\n  checkAutofillValuesChanged,\n  parseFormStructure,\n  setFormAutofillValues\n} from './utils/autofill';\nimport { AddressConfirmShowResult } from './utils/confirmation';\n\nconst confirmation = new MapboxAddressConfirmation();\n\n/**\n * A utility that can be run prior to form submission that allows a user to correct or confirm an address.\n *\n * This parses and compares an address entered into form fields with the closest address suggestion from the Mapbox Autofill API.\n * Unless an exact match or a custom comparison callback evaluates to true, the user will be shown a modal dialog\n * asking if they would like to use the suggested address.\n *\n * When a suggested address is accepted, the values are automatically updated in the form fields.\n * @param form - HTML form that includes the autocomplete-compliant input fields\n * @param optionsArg - {@link AddressConfirmOptions} Object defining options for Autofill API, UI, form parsing, and address comparison\n * @returns A promise resolving with a result object indicating the decision made by the user\n * @example\n * ```typescript\n * form.addEventListener(\"submit\", async (e) => {\n *   e.preventDefault();\n *   const result = await confirmAddress(form, {\n *     minimap: true,\n *     skipConfirmModal: (feature) =>\n *       ['exact', 'high'].includes(\n *         feature.properties.match_code.confidence\n *       )\n *   });\n *   if (result.type === 'nochange') submitForm();\n * });\n * ```\n */\nexport async function confirmAddress(\n  form: HTMLFormElement,\n  optionsArg: AddressConfirmOptions = {}\n): Promise<AddressConfirmShowResult> {\n  const { sections = [] } = optionsArg;\n\n  if (!confirmation.parentNode) {\n    document.body.appendChild(confirmation);\n  }\n\n  let collectedResult: AddressConfirmShowResult = { type: 'nochange' };\n\n  const inputs = findAddressInputs(form);\n  const structure = parseFormStructure(form);\n\n  const listboxComponents = Array.from(\n    document.querySelectorAll<MapboxSearchListboxAutofillType>(\n      'mapbox-search-listbox'\n    )\n  );\n\n  for (const input of inputs) {\n    // If we have sections, filter by the form structure.\n    if (sections.length) {\n      const structureRef = structure.find((s) => s.input === input);\n      if (!structureRef) {\n        continue;\n      }\n\n      if (!sections.includes(structureRef.section)) {\n        continue;\n      }\n    }\n\n    // Get the form's new autofill values to compare against.\n    const autofillValues = getFormAutofillValues(form, input);\n\n    // Compare form values against the latest Autofill snapshot (if any);\n    // If form values have not changed since last snapshot, skip showing confirmation.\n    const listbox = listboxComponents.find((lb) => lb.input === input);\n    if (listbox) {\n      const lastRetrievedFeature =\n        listbox.retrieveFeature as AutofillFeatureSuggestion;\n      if (lastRetrievedFeature) {\n        const snapshot = featureToAutofillValueMap(lastRetrievedFeature);\n        if (!checkAutofillValuesChanged(autofillValues, snapshot)) {\n          continue;\n        }\n      }\n    }\n\n    // Show the confirmation with the first feature.\n    const accessToken = optionsArg.accessToken || config.accessToken;\n    const result = await confirmation.tryShow(autofillValues, {\n      ...optionsArg,\n      accessToken\n    });\n\n    // If changed, autofill the form.\n    if (result.type === 'change') {\n      input.dataset['mapboxSuccess'] = 'true';\n      const suggestion = featureToSuggestion(result.feature);\n      setFormAutofillValues(form, input, suggestion);\n      if (listbox) {\n        /**\n         * Imperatively update feature snapshot on listbox to keep it in sync with\n         * feature used by confirmation process to update form value.\n         */\n        listbox.retrieveFeature = result.feature;\n      }\n    }\n\n    // Set to changed if changed and not cancelled.\n    if (result.type === 'change' && collectedResult.type !== 'cancel') {\n      collectedResult = result;\n    }\n\n    // Set to cancelled if cancelled.\n    if (result.type === 'cancel') {\n      collectedResult = result;\n    }\n  }\n\n  return collectedResult;\n}\n"],
  "mappings": "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",
  "names": []
}
