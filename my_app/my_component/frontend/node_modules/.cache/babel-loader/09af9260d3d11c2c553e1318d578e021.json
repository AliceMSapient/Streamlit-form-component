{"ast":null,"code":"var SphericalMercator = function () {\n  // Closures including constants and other precalculated values.\n  var cache = {},\n      EPSLN = 1.0e-10,\n      D2R = Math.PI / 180,\n      R2D = 180 / Math.PI,\n      // 900913 properties.\n  A = 6378137.0,\n      MAXEXTENT = 20037508.342789244;\n\n  function isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n  } // SphericalMercator constructor: precaches calculations\n  // for fast tile lookups.\n\n\n  function SphericalMercator(options) {\n    options = options || {};\n    this.size = options.size || 256;\n    this.expansion = options.antimeridian === true ? 2 : 1;\n\n    if (!cache[this.size]) {\n      var size = this.size;\n      var c = cache[this.size] = {};\n      c.Bc = [];\n      c.Cc = [];\n      c.zc = [];\n      c.Ac = [];\n\n      for (var d = 0; d < 30; d++) {\n        c.Bc.push(size / 360);\n        c.Cc.push(size / (2 * Math.PI));\n        c.zc.push(size / 2);\n        c.Ac.push(size);\n        size *= 2;\n      }\n    }\n\n    this.Bc = cache[this.size].Bc;\n    this.Cc = cache[this.size].Cc;\n    this.zc = cache[this.size].zc;\n    this.Ac = cache[this.size].Ac;\n  }\n\n  ; // Convert lon lat to screen pixel value\n  //\n  // - `ll` {Array} `[lon, lat]` array of geographic coordinates.\n  // - `zoom` {Number} zoom level.\n\n  SphericalMercator.prototype.px = function (ll, zoom) {\n    if (isFloat(zoom)) {\n      var size = this.size * Math.pow(2, zoom);\n      var d = size / 2;\n      var bc = size / 360;\n      var cc = size / (2 * Math.PI);\n      var ac = size;\n      var f = Math.min(Math.max(Math.sin(D2R * ll[1]), -0.9999), 0.9999);\n      var x = d + ll[0] * bc;\n      var y = d + 0.5 * Math.log((1 + f) / (1 - f)) * -cc;\n      x > ac * this.expansion && (x = ac * this.expansion);\n      y > ac && (y = ac); //(x < 0) && (x = 0);\n      //(y < 0) && (y = 0);\n\n      return [x, y];\n    } else {\n      var d = this.zc[zoom];\n      var f = Math.min(Math.max(Math.sin(D2R * ll[1]), -0.9999), 0.9999);\n      var x = Math.round(d + ll[0] * this.Bc[zoom]);\n      var y = Math.round(d + 0.5 * Math.log((1 + f) / (1 - f)) * -this.Cc[zoom]);\n      x > this.Ac[zoom] * this.expansion && (x = this.Ac[zoom] * this.expansion);\n      y > this.Ac[zoom] && (y = this.Ac[zoom]); //(x < 0) && (x = 0);\n      //(y < 0) && (y = 0);\n\n      return [x, y];\n    }\n  }; // Convert screen pixel value to lon lat\n  //\n  // - `px` {Array} `[x, y]` array of geographic coordinates.\n  // - `zoom` {Number} zoom level.\n\n\n  SphericalMercator.prototype.ll = function (px, zoom) {\n    if (isFloat(zoom)) {\n      var size = this.size * Math.pow(2, zoom);\n      var bc = size / 360;\n      var cc = size / (2 * Math.PI);\n      var zc = size / 2;\n      var g = (px[1] - zc) / -cc;\n      var lon = (px[0] - zc) / bc;\n      var lat = R2D * (2 * Math.atan(Math.exp(g)) - 0.5 * Math.PI);\n      return [lon, lat];\n    } else {\n      var g = (px[1] - this.zc[zoom]) / -this.Cc[zoom];\n      var lon = (px[0] - this.zc[zoom]) / this.Bc[zoom];\n      var lat = R2D * (2 * Math.atan(Math.exp(g)) - 0.5 * Math.PI);\n      return [lon, lat];\n    }\n  }; // Convert tile xyz value to bbox of the form `[w, s, e, n]`\n  //\n  // - `x` {Number} x (longitude) number.\n  // - `y` {Number} y (latitude) number.\n  // - `zoom` {Number} zoom.\n  // - `tms_style` {Boolean} whether to compute using tms-style.\n  // - `srs` {String} projection for resulting bbox (WGS84|900913).\n  // - `return` {Array} bbox array of values in form `[w, s, e, n]`.\n\n\n  SphericalMercator.prototype.bbox = function (x, y, zoom, tms_style, srs) {\n    // Convert xyz into bbox with srs WGS84\n    if (tms_style) {\n      y = Math.pow(2, zoom) - 1 - y;\n    } // Use +y to make sure it's a number to avoid inadvertent concatenation.\n\n\n    var ll = [x * this.size, (+y + 1) * this.size]; // lower left\n    // Use +x to make sure it's a number to avoid inadvertent concatenation.\n\n    var ur = [(+x + 1) * this.size, y * this.size]; // upper right\n\n    var bbox = this.ll(ll, zoom).concat(this.ll(ur, zoom)); // If web mercator requested reproject to 900913.\n\n    if (srs === '900913') {\n      return this.convert(bbox, '900913');\n    } else {\n      return bbox;\n    }\n  }; // Convert bbox to xyx bounds\n  //\n  // - `bbox` {Number} bbox in the form `[w, s, e, n]`.\n  // - `zoom` {Number} zoom.\n  // - `tms_style` {Boolean} whether to compute using tms-style.\n  // - `srs` {String} projection of input bbox (WGS84|900913).\n  // - `@return` {Object} XYZ bounds containing minX, maxX, minY, maxY properties.\n\n\n  SphericalMercator.prototype.xyz = function (bbox, zoom, tms_style, srs) {\n    // If web mercator provided reproject to WGS84.\n    if (srs === '900913') {\n      bbox = this.convert(bbox, 'WGS84');\n    }\n\n    var ll = [bbox[0], bbox[1]]; // lower left\n\n    var ur = [bbox[2], bbox[3]]; // upper right\n\n    var px_ll = this.px(ll, zoom);\n    var px_ur = this.px(ur, zoom); // Y = 0 for XYZ is the top hence minY uses px_ur[1].\n\n    var x = [Math.floor(px_ll[0] / this.size), Math.floor((px_ur[0] - 1) / this.size)];\n    var y = [Math.floor(px_ur[1] / this.size), Math.floor((px_ll[1] - 1) / this.size)];\n    var bounds = {\n      minX: Math.min.apply(Math, x) < 0 ? 0 : Math.min.apply(Math, x),\n      minY: Math.min.apply(Math, y) < 0 ? 0 : Math.min.apply(Math, y),\n      maxX: Math.max.apply(Math, x),\n      maxY: Math.max.apply(Math, y)\n    };\n\n    if (tms_style) {\n      var tms = {\n        minY: Math.pow(2, zoom) - 1 - bounds.maxY,\n        maxY: Math.pow(2, zoom) - 1 - bounds.minY\n      };\n      bounds.minY = tms.minY;\n      bounds.maxY = tms.maxY;\n    }\n\n    return bounds;\n  }; // Convert projection of given bbox.\n  //\n  // - `bbox` {Number} bbox in the form `[w, s, e, n]`.\n  // - `to` {String} projection of output bbox (WGS84|900913). Input bbox\n  //   assumed to be the \"other\" projection.\n  // - `@return` {Object} bbox with reprojected coordinates.\n\n\n  SphericalMercator.prototype.convert = function (bbox, to) {\n    if (to === '900913') {\n      return this.forward(bbox.slice(0, 2)).concat(this.forward(bbox.slice(2, 4)));\n    } else {\n      return this.inverse(bbox.slice(0, 2)).concat(this.inverse(bbox.slice(2, 4)));\n    }\n  }; // Convert lon/lat values to 900913 x/y.\n\n\n  SphericalMercator.prototype.forward = function (ll) {\n    var xy = [A * ll[0] * D2R, A * Math.log(Math.tan(Math.PI * 0.25 + 0.5 * ll[1] * D2R))]; // if xy value is beyond maxextent (e.g. poles), return maxextent.\n\n    xy[0] > MAXEXTENT && (xy[0] = MAXEXTENT);\n    xy[0] < -MAXEXTENT && (xy[0] = -MAXEXTENT);\n    xy[1] > MAXEXTENT && (xy[1] = MAXEXTENT);\n    xy[1] < -MAXEXTENT && (xy[1] = -MAXEXTENT);\n    return xy;\n  }; // Convert 900913 x/y values to lon/lat.\n\n\n  SphericalMercator.prototype.inverse = function (xy) {\n    return [xy[0] * R2D / A, (Math.PI * 0.5 - 2.0 * Math.atan(Math.exp(-xy[1] / A))) * R2D];\n  };\n\n  return SphericalMercator;\n}();\n\nif (typeof module !== 'undefined' && typeof exports !== 'undefined') {\n  module.exports = exports = SphericalMercator;\n}","map":{"version":3,"names":["SphericalMercator","cache","EPSLN","D2R","Math","PI","R2D","A","MAXEXTENT","isFloat","n","Number","options","size","expansion","antimeridian","c","Bc","Cc","zc","Ac","d","push","prototype","px","ll","zoom","pow","bc","cc","ac","f","min","max","sin","x","y","log","round","g","lon","lat","atan","exp","bbox","tms_style","srs","ur","concat","convert","xyz","px_ll","px_ur","floor","bounds","minX","apply","minY","maxX","maxY","tms","to","forward","slice","inverse","xy","tan","module","exports"],"sources":["/Users/alimenzi/Desktop/streamlit/streamlit-react/my_app/my_component/frontend/node_modules/@mapbox/sphericalmercator/sphericalmercator.js"],"sourcesContent":["var SphericalMercator = (function(){\n\n// Closures including constants and other precalculated values.\nvar cache = {},\n    EPSLN = 1.0e-10,\n    D2R = Math.PI / 180,\n    R2D = 180 / Math.PI,\n    // 900913 properties.\n    A = 6378137.0,\n    MAXEXTENT = 20037508.342789244;\n\nfunction isFloat(n){\n    return Number(n) === n && n % 1 !== 0;\n}\n\n// SphericalMercator constructor: precaches calculations\n// for fast tile lookups.\nfunction SphericalMercator(options) {\n    options = options || {};\n    this.size = options.size || 256;\n    this.expansion = (options.antimeridian === true) ? 2 : 1;\n    if (!cache[this.size]) {\n        var size = this.size;\n        var c = cache[this.size] = {};\n        c.Bc = [];\n        c.Cc = [];\n        c.zc = [];\n        c.Ac = [];\n        for (var d = 0; d < 30; d++) {\n            c.Bc.push(size / 360);\n            c.Cc.push(size / (2 * Math.PI));\n            c.zc.push(size / 2);\n            c.Ac.push(size);\n            size *= 2;\n        }\n    }\n    this.Bc = cache[this.size].Bc;\n    this.Cc = cache[this.size].Cc;\n    this.zc = cache[this.size].zc;\n    this.Ac = cache[this.size].Ac;\n};\n\n// Convert lon lat to screen pixel value\n//\n// - `ll` {Array} `[lon, lat]` array of geographic coordinates.\n// - `zoom` {Number} zoom level.\nSphericalMercator.prototype.px = function(ll, zoom) {\n  if (isFloat(zoom)) {\n    var size = this.size * Math.pow(2, zoom);\n    var d = size / 2;\n    var bc = (size / 360);\n    var cc = (size / (2 * Math.PI));\n    var ac = size;\n    var f = Math.min(Math.max(Math.sin(D2R * ll[1]), -0.9999), 0.9999);\n    var x = d + ll[0] * bc;\n    var y = d + 0.5 * Math.log((1 + f) / (1 - f)) * -cc;\n    (x > ac * this.expansion) && (x = ac * this.expansion);\n    (y > ac) && (y = ac);\n    //(x < 0) && (x = 0);\n    //(y < 0) && (y = 0);\n    return [x, y];\n  } else {\n    var d = this.zc[zoom];\n    var f = Math.min(Math.max(Math.sin(D2R * ll[1]), -0.9999), 0.9999);\n    var x = Math.round(d + ll[0] * this.Bc[zoom]);\n    var y = Math.round(d + 0.5 * Math.log((1 + f) / (1 - f)) * (-this.Cc[zoom]));\n    (x > this.Ac[zoom] * this.expansion) && (x = this.Ac[zoom] * this.expansion);\n    (y > this.Ac[zoom]) && (y = this.Ac[zoom]);\n    //(x < 0) && (x = 0);\n    //(y < 0) && (y = 0);\n    return [x, y];\n  }\n};\n\n// Convert screen pixel value to lon lat\n//\n// - `px` {Array} `[x, y]` array of geographic coordinates.\n// - `zoom` {Number} zoom level.\nSphericalMercator.prototype.ll = function(px, zoom) {\n  if (isFloat(zoom)) {\n    var size = this.size * Math.pow(2, zoom);\n    var bc = (size / 360);\n    var cc = (size / (2 * Math.PI));\n    var zc = size / 2;\n    var g = (px[1] - zc) / -cc;\n    var lon = (px[0] - zc) / bc;\n    var lat = R2D * (2 * Math.atan(Math.exp(g)) - 0.5 * Math.PI);\n    return [lon, lat];\n  } else {\n    var g = (px[1] - this.zc[zoom]) / (-this.Cc[zoom]);\n    var lon = (px[0] - this.zc[zoom]) / this.Bc[zoom];\n    var lat = R2D * (2 * Math.atan(Math.exp(g)) - 0.5 * Math.PI);\n    return [lon, lat];\n  }\n};\n\n// Convert tile xyz value to bbox of the form `[w, s, e, n]`\n//\n// - `x` {Number} x (longitude) number.\n// - `y` {Number} y (latitude) number.\n// - `zoom` {Number} zoom.\n// - `tms_style` {Boolean} whether to compute using tms-style.\n// - `srs` {String} projection for resulting bbox (WGS84|900913).\n// - `return` {Array} bbox array of values in form `[w, s, e, n]`.\nSphericalMercator.prototype.bbox = function(x, y, zoom, tms_style, srs) {\n    // Convert xyz into bbox with srs WGS84\n    if (tms_style) {\n        y = (Math.pow(2, zoom) - 1) - y;\n    }\n    // Use +y to make sure it's a number to avoid inadvertent concatenation.\n    var ll = [x * this.size, (+y + 1) * this.size]; // lower left\n    // Use +x to make sure it's a number to avoid inadvertent concatenation.\n    var ur = [(+x + 1) * this.size, y * this.size]; // upper right\n    var bbox = this.ll(ll, zoom).concat(this.ll(ur, zoom));\n\n    // If web mercator requested reproject to 900913.\n    if (srs === '900913') {\n        return this.convert(bbox, '900913');\n    } else {\n        return bbox;\n    }\n};\n\n// Convert bbox to xyx bounds\n//\n// - `bbox` {Number} bbox in the form `[w, s, e, n]`.\n// - `zoom` {Number} zoom.\n// - `tms_style` {Boolean} whether to compute using tms-style.\n// - `srs` {String} projection of input bbox (WGS84|900913).\n// - `@return` {Object} XYZ bounds containing minX, maxX, minY, maxY properties.\nSphericalMercator.prototype.xyz = function(bbox, zoom, tms_style, srs) {\n    // If web mercator provided reproject to WGS84.\n    if (srs === '900913') {\n        bbox = this.convert(bbox, 'WGS84');\n    }\n\n    var ll = [bbox[0], bbox[1]]; // lower left\n    var ur = [bbox[2], bbox[3]]; // upper right\n    var px_ll = this.px(ll, zoom);\n    var px_ur = this.px(ur, zoom);\n    // Y = 0 for XYZ is the top hence minY uses px_ur[1].\n    var x = [ Math.floor(px_ll[0] / this.size), Math.floor((px_ur[0] - 1) / this.size) ];\n    var y = [ Math.floor(px_ur[1] / this.size), Math.floor((px_ll[1] - 1) / this.size) ];\n    var bounds = {\n        minX: Math.min.apply(Math, x) < 0 ? 0 : Math.min.apply(Math, x),\n        minY: Math.min.apply(Math, y) < 0 ? 0 : Math.min.apply(Math, y),\n        maxX: Math.max.apply(Math, x),\n        maxY: Math.max.apply(Math, y)\n    };\n    if (tms_style) {\n        var tms = {\n            minY: (Math.pow(2, zoom) - 1) - bounds.maxY,\n            maxY: (Math.pow(2, zoom) - 1) - bounds.minY\n        };\n        bounds.minY = tms.minY;\n        bounds.maxY = tms.maxY;\n    }\n    return bounds;\n};\n\n// Convert projection of given bbox.\n//\n// - `bbox` {Number} bbox in the form `[w, s, e, n]`.\n// - `to` {String} projection of output bbox (WGS84|900913). Input bbox\n//   assumed to be the \"other\" projection.\n// - `@return` {Object} bbox with reprojected coordinates.\nSphericalMercator.prototype.convert = function(bbox, to) {\n    if (to === '900913') {\n        return this.forward(bbox.slice(0, 2)).concat(this.forward(bbox.slice(2,4)));\n    } else {\n        return this.inverse(bbox.slice(0, 2)).concat(this.inverse(bbox.slice(2,4)));\n    }\n};\n\n// Convert lon/lat values to 900913 x/y.\nSphericalMercator.prototype.forward = function(ll) {\n    var xy = [\n        A * ll[0] * D2R,\n        A * Math.log(Math.tan((Math.PI*0.25) + (0.5 * ll[1] * D2R)))\n    ];\n    // if xy value is beyond maxextent (e.g. poles), return maxextent.\n    (xy[0] > MAXEXTENT) && (xy[0] = MAXEXTENT);\n    (xy[0] < -MAXEXTENT) && (xy[0] = -MAXEXTENT);\n    (xy[1] > MAXEXTENT) && (xy[1] = MAXEXTENT);\n    (xy[1] < -MAXEXTENT) && (xy[1] = -MAXEXTENT);\n    return xy;\n};\n\n// Convert 900913 x/y values to lon/lat.\nSphericalMercator.prototype.inverse = function(xy) {\n    return [\n        (xy[0] * R2D / A),\n        ((Math.PI*0.5) - 2.0 * Math.atan(Math.exp(-xy[1] / A))) * R2D\n    ];\n};\n\nreturn SphericalMercator;\n\n})();\n\nif (typeof module !== 'undefined' && typeof exports !== 'undefined') {\n    module.exports = exports = SphericalMercator;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}