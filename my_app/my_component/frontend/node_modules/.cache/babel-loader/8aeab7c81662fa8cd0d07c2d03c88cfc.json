{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj)) throw TypeError(\"Cannot \" + msg);\n};\n\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n\n  return getter ? getter.call(obj) : member.get(obj);\n};\n\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj)) throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\n\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n\n  return method;\n};\n\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = value => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n\n    var rejected = value => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n\n    var step = x => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n}; // src/components/MapboxSearchListbox.ts\n\n\nimport { createPopper } from \"@popperjs/core/lib/popper-lite\"; // src/utils/dom.ts\n\nvar subdoc = document.implementation.createHTMLDocument();\n\nfunction bindElements(root, elements) {\n  const binding = {};\n\n  for (const [key, selector] of Object.entries(elements)) {\n    binding[key] = root.querySelector(selector);\n  }\n\n  return binding;\n}\n\nfunction getChildElements(node) {\n  return Array.from(node.childNodes || []).filter(el => el.nodeType === Node.ELEMENT_NODE);\n}\n\nfunction createElementFromString(innerHTML) {\n  const template = document.createElement(\"template\");\n  template.innerHTML = innerHTML;\n  return template.content.firstElementChild;\n}\n\nfunction createCSSStyleSheet(text) {\n  const style = subdoc.createElement(\"style\");\n  style.textContent = text;\n  subdoc.head.appendChild(style);\n  return style.sheet;\n}\n\nfunction isVisible(element) {\n  const style = window.getComputedStyle(element);\n  return style.display !== \"none\";\n}\n\nfunction setValue(input, value) {\n  if (!input) {\n    return;\n  }\n\n  const set = Object.getOwnPropertyDescriptor(input.constructor.prototype, \"value\").set;\n  set.call(input, value);\n  const wrapperState = input;\n\n  if (wrapperState._valueTracker) {\n    wrapperState._valueTracker.setValue(\"\");\n  }\n\n  const onInputEvent = new Event(\"input\", {\n    bubbles: true\n  });\n  onInputEvent.simulated = true;\n  input.dispatchEvent(onInputEvent);\n  const onChangeEvent = new Event(\"change\", {\n    bubbles: true\n  });\n  onChangeEvent.simulated = true;\n  input.dispatchEvent(onChangeEvent);\n}\n\nfunction getElementSize(element) {\n  let deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let width;\n  let height;\n  const elementRect = element.getBoundingClientRect();\n\n  if (element.style.display === \"none\" || elementRect.height === 0 && elementRect.width === 0) {\n    const clone = element.cloneNode(deep);\n    element.parentElement.appendChild(clone);\n    clone.style.setProperty(\"display\", \"block\", \"important\");\n    const cloneRect = clone.getBoundingClientRect();\n    width = cloneRect.width;\n    height = cloneRect.height;\n    clone.style.setProperty(\"display\", \"none\");\n    clone.remove();\n  } else {\n    width = elementRect.width;\n    height = elementRect.height;\n  }\n\n  return {\n    height: Math.floor(height),\n    width: Math.floor(width)\n  };\n} // src/utils/class_name_transformers.ts\n\n\nvar IDENTIFIER_REGEX = new RegExp(\"[_a-zA-Z]+[_a-zA-Z0-9-]*\", \"g\");\nvar CLASS_NAME_REGEX = new RegExp(`\\\\.${IDENTIFIER_REGEX.source}`, \"g\");\nvar CONDITION_RULE_REGEX = new RegExp(`^\\\\s*(@(?:media|supports)[^{]*){(.*)}\\\\s*$`);\n\nfunction transformClassSelectors(css, transform) {\n  return css.replace(CLASS_NAME_REGEX, className => {\n    return \".\" + transform(className.slice(1));\n  });\n}\n\nfunction transformCSSClassRules(text, transform) {\n  const sheet = createCSSStyleSheet(text);\n  const rules = sheet.cssRules;\n\n  function transformCSSRule(rule) {\n    if (rule instanceof CSSStyleRule) {\n      const selector = transformClassSelectors(rule.selectorText, transform);\n      return `${selector} { ${rule.style.cssText} }`;\n    }\n\n    const atRule = CONDITION_RULE_REGEX.exec(rule.cssText.split(\"\\n\").join(\"\"));\n\n    if (atRule && atRule.length > 2) {\n      const rule2 = atRule[1];\n      const contents = atRule[2];\n      return `${rule2} { ${transformCSSClassRules(contents, transform)} }`;\n    }\n\n    return rule.cssText;\n  }\n\n  let style = \"\";\n\n  for (const rule of Array.from(rules)) {\n    style += transformCSSRule(rule) + \"\\n\\n\";\n  }\n\n  return style.trim();\n}\n\nfunction transformDOMClassAttributes(content, transform) {\n  const elements = Array.from(content.querySelectorAll(\"[class]\"));\n  elements.push(content);\n\n  for (const element of elements) {\n    const {\n      classList\n    } = element;\n\n    for (const className of Array.from(classList)) {\n      classList.remove(className);\n      classList.add(transform(className));\n    }\n  }\n\n  return content;\n} // src/utils/index.ts\n\n\nimport { SessionToken } from \"@mapbox/search-js-core\"; // src/utils/map.ts\n\nvar FLY_TO_SPEED = 1.4;\n\nfunction bboxViewport(map, bounds) {\n  let delta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.5;\n  const {\n    center,\n    zoom\n  } = map.cameraForBounds(bounds);\n  const transformedZoom = Math.max(zoom - delta, 0);\n  return {\n    center,\n    zoom: transformedZoom,\n    speed: FLY_TO_SPEED\n  };\n}\n\nfunction getMaxZoom(placeType) {\n  switch (placeType) {\n    case \"street\":\n      return 15;\n\n    case \"locality\":\n    case \"oaza\":\n      return 14;\n\n    case \"place\":\n    case \"city\":\n      return 13;\n\n    case \"district\":\n      return 9;\n\n    case \"region\":\n    case \"prefecture\":\n      return 6;\n\n    case \"country\":\n      return 4;\n\n    default:\n      return 16;\n  }\n}\n\nfunction getStaticBaseUrl(username, styleId) {\n  return `https://api.mapbox.com/styles/v1/${username}/${styleId}/static/`;\n} // src/constants.ts\n\n\nvar STATIC_BASE_URL_SATELLITE = getStaticBaseUrl(\"mapbox\", \"satellite-streets-v11\");\nvar AUTOFILL_SKU_TOKEN_PREFIX = \"20d01\";\nvar MAPBOX_DOMAINS = [\"mapbox.com\", \"mapbox.cn\", \"tilestream.net\"]; // src/utils/index.ts\n\nfunction randomValidID() {\n  return `mbx` + new SessionToken().id.slice(0, 8);\n}\n\nfunction tryParseJSON(json) {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction deepEquals(a, b) {\n  if (a == null || b == null) {\n    return a === b;\n  }\n\n  if (typeof a !== \"object\" || typeof b !== \"object\") {\n    return a === b;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n\n  for (const key of aKeys) {\n    if (!deepEquals(a[key], b[key])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction round(num, decimalPlaces) {\n  const factorOfTen = Math.pow(10, decimalPlaces);\n  return Math.round(num * factorOfTen) / factorOfTen;\n}\n\nfunction isLocalServer(hostname) {\n  return Boolean(hostname.match(/localhost|[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}|::1|\\.local|^$/gi));\n}\n\nfunction isMapboxDomain(hostname) {\n  return Boolean(MAPBOX_DOMAINS.some(domain => hostname.includes(domain)));\n} // src/components/HTMLScopedElement.ts\n\n\nvar _seed, _templateUserStyleElement, _transform;\n\nvar HTMLScopedElement = class extends HTMLElement {\n  constructor() {\n    super(...arguments);\n\n    __privateAdd(this, _seed, randomValidID());\n\n    __privateAdd(this, _templateUserStyleElement, void 0);\n\n    __privateAdd(this, _transform, className => {\n      return `${__privateGet(this, _seed)}--${className}`;\n    });\n  }\n\n  get template() {\n    return null;\n  }\n\n  get templateStyle() {\n    return null;\n  }\n\n  get templateUserStyle() {\n    return null;\n  }\n\n  clonedCallback(oldSeed, newSeed) {\n    const seedTransform = className => className.replace(oldSeed, newSeed);\n\n    transformDOMClassAttributes(this, seedTransform);\n    const styles = Array.from(this.querySelectorAll(\"style\"));\n\n    for (const style of styles) {\n      style.textContent = transformClassSelectors(style.textContent, seedTransform);\n    }\n\n    if (styles.length) {\n      __privateSet(this, _templateUserStyleElement, styles[styles.length - 1]);\n    }\n  }\n\n  connectedCallback() {\n    if (this.childElementCount > 0) {\n      const oldSeed = this.dataset.seed;\n\n      const newSeed = __privateGet(this, _seed);\n\n      if (oldSeed && oldSeed !== newSeed) {\n        this.clonedCallback(oldSeed, newSeed);\n        this.dataset.seed = newSeed;\n      }\n\n      return;\n    }\n\n    this.dataset.seed = __privateGet(this, _seed);\n    const template = this.template;\n\n    if (template) {\n      const element = this.prepareTemplate(template);\n      this.appendChild(element);\n    }\n\n    const templateStyle = this.templateStyle;\n\n    if (templateStyle) {\n      const style = document.createElement(\"style\");\n      style.textContent = this.prepareCSS(templateStyle);\n      this.appendChild(style);\n    }\n\n    const userStyle = document.createElement(\"style\");\n\n    if (this.templateUserStyle) {\n      userStyle.textContent = this.prepareCSS(this.templateUserStyle);\n    }\n\n    this.appendChild(userStyle);\n\n    __privateSet(this, _templateUserStyleElement, userStyle);\n  }\n\n  prepareTemplate(template) {\n    const element = template.content.firstElementChild;\n    return transformDOMClassAttributes(element.cloneNode(true), __privateGet(this, _transform));\n  }\n\n  prepareCSS(css) {\n    return transformCSSClassRules(css, __privateGet(this, _transform));\n  }\n\n  updateTemplateUserStyle(style) {\n    if (!__privateGet(this, _templateUserStyleElement)) {\n      return;\n    }\n\n    __privateGet(this, _templateUserStyleElement).textContent = this.prepareCSS(style);\n  }\n\n  querySelector(selectors) {\n    return super.querySelector(transformClassSelectors(selectors, __privateGet(this, _transform)));\n  }\n\n  querySelectorAll(selectors) {\n    return super.querySelectorAll(transformClassSelectors(selectors, __privateGet(this, _transform)));\n  }\n\n  addEventListener(type, listener, options) {\n    super.addEventListener(type, listener, options);\n  }\n\n  removeEventListener(type, listener, options) {\n    super.removeEventListener(type, listener, options);\n  }\n\n  dispatchEvent(event) {\n    return super.dispatchEvent(event);\n  }\n\n};\n_seed = new WeakMap();\n_templateUserStyleElement = new WeakMap();\n_transform = new WeakMap(); // src/MapboxHTMLEvent.ts\n\nvar MapboxHTMLEvent = class extends CustomEvent {\n  constructor(type, detail) {\n    super(type, {\n      composed: true,\n      detail\n    });\n  }\n\n  clone(newTarget) {\n    const eventClone = new MapboxHTMLEvent(this.type, this.detail);\n\n    if (newTarget) {\n      Object.defineProperty(eventClone, \"target\", {\n        value: newTarget\n      });\n    }\n\n    return eventClone;\n  }\n\n}; // src/icons/close.svg\n\nvar close_default = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\n<svg viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.79289 3.79289C4.18342 3.40237 4.81658 3.40237 5.20711 3.79289L9 7.58579L12.7929 3.79289C13.1834 3.40237 13.8166 3.40237 14.2071 3.79289C14.5976 4.18342 14.5976 4.81658 14.2071 5.20711L10.4142 9L14.2071 12.7929C14.5976 13.1834 14.5976 13.8166 14.2071 14.2071C13.8166 14.5976 13.1834 14.5976 12.7929 14.2071L9 10.4142L5.20711 14.2071C4.81658 14.5976 4.18342 14.5976 3.79289 14.2071C3.40237 13.8166 3.40237 13.1834 3.79289 12.7929L7.58579 9L3.79289 5.20711C3.40237 4.81658 3.40237 4.18342 3.79289 3.79289Z\" fill=\"currentColor\"/>\\n</svg>'; // src/icons/question.svg\n\nvar question_default = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\n<svg viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9 16C12.866 16 16 12.866 16 9C16 5.13401 12.866 2 9 2C5.13401 2 2 5.13401 2 9C2 12.866 5.13401 16 9 16ZM6.88128 4.88128C7.36552 4.39704 8.02229 4.125 8.70711 4.125H9.79289C10.4777 4.125 11.1345 4.39704 11.6187 4.88128C12.103 5.36552 12.375 6.02229 12.375 6.70711V6.86762C12.375 7.8775 11.8451 8.81333 10.9792 9.33291L10.4212 9.6677C10.1547 9.82759 9.96958 10.0882 9.90264 10.3844C9.87221 10.5191 9.76307 10.6324 9.625 10.6324H8.375C8.23693 10.6324 8.12387 10.5202 8.13584 10.3826C8.21527 9.47002 8.72673 8.64354 9.52082 8.16709L10.0788 7.8323C10.4177 7.62899 10.625 7.26279 10.625 6.86762V6.70711C10.625 6.48642 10.5373 6.27477 10.3813 6.11872C10.2252 5.96267 10.0136 5.875 9.79289 5.875H8.70711C8.48642 5.875 8.27477 5.96267 8.11872 6.11872C7.96267 6.27477 7.875 6.48642 7.875 6.70711V6.8889C7.875 7.37215 7.48325 7.7639 7 7.7639C6.51675 7.7639 6.125 7.37215 6.125 6.8889V6.70711C6.125 6.02229 6.39704 5.36552 6.88128 4.88128ZM10 13C10 13.5523 9.55228 14 9 14C8.44772 14 8 13.5523 8 13C8 12.4477 8.44772 12 9 12C9.55228 12 10 12.4477 10 13Z\" fill=\"currentColor\"/>\\n</svg>'; // src/icons/marker.svg\n\nvar marker_default = '<svg width=\"48\" height=\"56\" viewBox=\"0 0 48 56\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\\n<g filter=\"url(#filter0_d_17_871)\">\\n<path d=\"M24 50.4L37.7887 36.2834C40.5158 33.6058 42.3729 30.1944 43.1253 26.4806C43.8777 22.7667 43.4915 18.9172 42.0156 15.4188C40.5397 11.9204 38.0403 8.9303 34.8336 6.82657C31.6268 4.72284 27.8567 3.59998 24 3.59998C20.1433 3.59998 16.3732 4.72284 13.1664 6.82657C9.95966 8.9303 7.4603 11.9204 5.98438 15.4188C4.50846 18.9172 4.12229 22.7667 4.87468 26.4806C5.62707 30.1944 7.48424 33.6058 10.2113 36.2834L24 50.4Z\" fill=\"currentColor\"/>\\n<path d=\"M37.2632 35.7482L37.2576 35.7537L37.2521 35.7593L24 49.3266L10.7479 35.7593L10.7424 35.7537L10.7368 35.7482C8.11558 33.1746 6.33213 29.8974 5.60975 26.3316C4.88738 22.766 5.25802 19.07 6.6754 15.7103C8.09285 12.3505 10.4942 9.47664 13.5778 7.45367C16.6616 5.4306 20.2886 4.34998 24 4.34998C27.7114 4.34998 31.3384 5.4306 34.4222 7.45367C37.5058 9.47664 39.9072 12.3505 41.3246 15.7103C42.742 19.07 43.1126 22.766 42.3903 26.3316C41.6679 29.8974 39.8844 33.1746 37.2632 35.7482Z\" stroke=\"white\" stroke-width=\"1.5\"/>\\n</g>\\n<ellipse cx=\"24\" cy=\"22.45\" rx=\"5.84999\" ry=\"5.85\" fill=\"white\"/>\\n<defs>\\n<filter id=\"filter0_d_17_871\" x=\"0.5\" y=\"0.599976\" width=\"47\" height=\"54.8\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\\n<feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"/>\\n<feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\"/>\\n<feOffset dy=\"1\"/>\\n<feGaussianBlur stdDeviation=\"2\"/>\\n<feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.2 0\"/>\\n<feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_17_871\"/>\\n<feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow_17_871\" result=\"shape\"/>\\n</filter>\\n</defs>\\n</svg>'; // package.json\n\nvar version = \"1.0.0-beta.9\"; // src/theme.ts\n\nvar styleToggleSatelliteImg = `https://api.mapbox.com/search-js/v${version}/img/style-toggle-satellite.jpg`;\nvar styleToggleDefaultImg = `https://api.mapbox.com/search-js/v${version}/img/style-toggle-default.jpg`;\nvar MOBILE_BREAKPOINT = 768 - 1;\nvar MOBILE_MEDIA_QUERY = `@media only screen and (max-width: ${MOBILE_BREAKPOINT}px)`;\nvar DEFAULT_THEME = {\n  variables: {\n    unit: [\"mobile\", \"16px\", \"14px\"],\n    unitHeader: [\"mobile\", \"24px\", \"18px\"],\n    minWidth: \"min(300px, 100vw)\",\n    spacing: \"0.75em\",\n    padding: \"0.5em 0.75em\",\n    paddingModal: \"1.25em\",\n    colorText: \"rgba(0, 0, 0, 0.75)\",\n    colorPrimary: \"#4264FB\",\n    colorSecondary: \"#667F91\",\n    colorBackground: \"#fff\",\n    colorBackgroundHover: \"#f5f5f5\",\n    colorBackgroundActive: \"#f0f0f0\",\n    colorBackdrop: \"rgba(102, 127, 145, 0.3)\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    boxShadow: `\n      0 0 10px 2px rgba(0, 0, 0, 0.05),\n      0 0 6px 1px rgba(0, 0, 0, 0.1),\n      0 0 0 1px rgba(0, 0, 0, 0.1)\n    `,\n    lineHeight: \"1.2em\",\n    fontFamily: `\n      -apple-system, BlinkMacSystemFont,\n      avenir next, avenir,\n      segoe ui,\n      helvetica neue, helvetica,\n      Ubuntu, roboto, noto, arial, sans-serif\n    `,\n    fontWeight: \"normal\",\n    fontWeightSemibold: \"600\",\n    fontWeightBold: \"bold\",\n    duration: \"150ms\",\n    curve: \"ease-out\"\n  },\n  icons: {\n    close: close_default,\n    question: question_default,\n    marker: marker_default\n  },\n  images: {\n    styleToggleDefault: styleToggleDefaultImg,\n    styleToggleSatellite: styleToggleSatelliteImg\n  }\n};\n\nfunction getThemeCSS(rootSelector) {\n  let theme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  const variables = __spreadValues(__spreadValues({}, DEFAULT_THEME.variables), theme.variables || {});\n\n  let cssText = theme.cssText || \"\";\n  let rootVariables = \"\";\n\n  for (const [key, value] of Object.entries(variables)) {\n    if (!Array.isArray(value)) {\n      rootVariables += `--${key}: ${value};`;\n      continue;\n    }\n\n    if (value[0] !== \"mobile\") {\n      const valueStr = JSON.stringify(value);\n      throw new Error(`Unsupported expression in theme variables: ${key} ${valueStr}`);\n    }\n\n    const [, mobileValue, desktopValue] = value;\n    cssText += `${MOBILE_MEDIA_QUERY} { ${rootSelector} { --${key}: ${mobileValue} !important; } }`;\n    rootVariables += `--${key}: ${desktopValue};`;\n  }\n\n  return cssText + `${rootSelector} { ${rootVariables} }`;\n}\n\nfunction getIcon(iconName) {\n  let theme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  const icons = __spreadValues(__spreadValues({}, DEFAULT_THEME.icons), theme.icons || {});\n\n  const svgString = icons[iconName];\n  return svgString;\n}\n\nfunction getImage(imageName) {\n  let theme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  const images = __spreadValues(__spreadValues({}, DEFAULT_THEME.images), theme.images || {});\n\n  const imgString = images[imageName];\n  return imgString;\n} // src/style.css\n\n\nvar style_default = \"*{box-sizing:border-box!important}[role=button]{cursor:pointer}.MapboxSearch{--width:0;display:none}.Results{background-color:var(--colorBackground);border:var(--border);border-radius:var(--borderRadius);box-shadow:var(--boxShadow);color:var(--colorText);font-family:var(--fontFamily);font-size:var(--unit);font-weight:var(--fontWeight);line-height:var(--lineHeight);margin-top:var(--spacing)!important;min-width:var(--minWidth);overflow-y:auto;position:absolute;transform:translateZ(0);transition:visibility var(--duration);width:var(--width);z-index:1000}.Results:not([aria-hidden=true]){visibility:visible}.Results[aria-hidden=true]{animation:fadein var(--duration) var(--curve) reverse forwards;visibility:hidden}.Suggestion{padding:var(--padding)}.Suggestion:hover{cursor:pointer}.Suggestion[aria-selected=true]{background-color:var(--colorBackgroundHover)}.Suggestion:active{background-color:var(--colorBackgroundActive)}.SuggestionName{font-weight:var(--fontWeightBold)}.ResultsAttribution{padding:var(--padding)}.ResultsAttribution a{color:var(--colorSecondary)}.ResultsAttribution a:not(:hover){text-decoration:none}.ResultsList{list-style:none;margin:0;padding:0}.Label{display:none}.Input{background-color:var(--colorBackground);border:var(--border);border-radius:var(--borderRadius);box-shadow:var(--boxShadow);color:var(--colorText);font-family:var(--fontFamily);font-size:var(--unit);font-weight:var(--fontWeight);line-height:var(--lineHeight);padding:var(--padding);width:100%}mapbox-address-confirmation-feature[aria-hidden=true],mapbox-address-confirmation-no-feature[aria-hidden=true]{display:none}.MapboxAddressConfirmation{align-items:center;background-color:var(--colorBackdrop);bottom:0;display:flex;justify-content:center;left:0;position:fixed;right:0;top:0;transform:translateZ(0);z-index:1000}.MapboxAddressConfirmation:not([aria-hidden=true]){animation:fadein var(--duration) var(--curve) forwards;visibility:visible}.MapboxAddressConfirmation[aria-hidden=true]{visibility:hidden}.ContentFeature,.ContentNoFeature{width:var(--minWidth)}.Modal{background-color:var(--colorBackground);border:var(--border);border-radius:var(--borderRadius);box-shadow:var(--boxShadow);color:var(--colorText);font-family:var(--fontFamily);font-size:var(--unit);font-weight:var(--fontWeight);line-height:var(--lineHeight);padding:var(--paddingModal);width:100%}@media screen and (max-width:480px){.MapboxAddressConfirmation{align-items:flex-end}.ContentFeature,.ContentNoFeature{width:100%}.Modal{border-bottom-left-radius:0;border-bottom-right-radius:0}}.ModalHeader{align-items:center;color:var(--colorPrimary);display:flex;font-size:var(--unitHeader);font-weight:var(--fontWeightBold);margin-bottom:var(--spacing);user-select:none;width:100%}.ModalMap{height:calc(var(--minWidth)*9/16);margin-left:calc(var(--paddingModal)*-1);width:calc(100% + var(--paddingModal)*2)}.ModalMap[aria-hidden=true]{display:none}.Icon{height:var(--unitHeader);width:var(--unitHeader)}.Icon.IconClose{color:var(--colorSecondary)}.ModalHeaderTitle{flex:1;margin-left:.25em}.ModalFooter{color:var(--colorSecondary);margin-top:var(--spacing);text-align:center}.ModalSubheader{font-weight:var(--fontWeightBold);user-select:none}.ModalDescription{color:var(--colorPrimary)}.ModalAddress,.ModalSubheader{margin-bottom:var(--spacing)}.ModalAddress.ModalAddressApprove{color:var(--colorPrimary)}.Button{border-radius:var(--borderRadius);cursor:pointer;font-weight:var(--fontWeightSemibold);margin-top:var(--spacing);padding:var(--padding);text-align:center;user-select:none;width:100%}.Button[aria-hidden=true]{display:none}.Button.ButtonPrimary{background-color:var(--colorPrimary);color:var(--colorBackground)}.Button.ButtonSecondary{border:1px solid var(--colorSecondary);color:var(--colorSecondary)}@keyframes fadein{0%{opacity:0}to{opacity:1}}.MapboxAddressMinimap{font-family:var(--fontFamily);font-size:var(--unit);font-weight:var(--fontWeight);line-height:var(--lineHeight)}.MapboxAddressMinimap[aria-hidden=true]{display:none}.MinimapImageContainer{border-radius:var(--borderRadius);overflow:hidden}.MinimapImage{height:unset;max-height:unset;max-width:unset;position:relative;width:unset}.MinimapInnerFrame{border:var(--border);border-radius:inherit;height:inherit;left:0;overflow:hidden;position:absolute;top:0;width:inherit}.MinimapMarker{left:50%;position:absolute;top:50%}.MinimapMarker>svg{color:var(--colorPrimary);display:block!important}.MinimapAttributionLogo{bottom:0;left:0;margin:0 0 6px 6px;position:absolute}.MinimapAttributionLogo a{cursor:pointer;display:block;height:23px;width:88px}.MinimapAttributionText{background-color:hsla(0,0%,100%,.65);bottom:0;font:11px/16px Helvetica Neue,Arial,Helvetica,sans-serif;padding:0 5px;position:absolute;right:0}.MinimapAttributionText a{color:rgba(0,0,0,.75);text-decoration:none}.MinimapAttributionText a:hover{color:inherit;text-decoration:underline}.MinimapAttributionText a:not(:first-child){margin-left:3px}.MinimapStyleToggle{background-position:0;background-repeat:no-repeat;background-size:contain;border:2px solid #fff;border-radius:3px;box-shadow:var(--boxShadow);cursor:pointer;height:2em;position:absolute;right:var(--spacing);top:var(--spacing);width:2em}.MinimapFooter{color:var(--colorSecondary);font-family:var(--fontFamily);font-size:var(--unit);margin-top:var(--spacing)}.MinimapEditButtons{bottom:26px;display:flex;font-family:var(--fontFamily);position:absolute;right:var(--spacing)}.MinimapEditButtons .Button{box-shadow:var(--boxShadow)}.MinimapButtonCancel{background-color:var(--colorBackground);margin-left:var(--spacing)}.draggable{cursor:move;cursor:grab}.draggable:active{cursor:grabbing}\"; // src/components/MapboxSearchListbox.ts\n\nvar TEMPLATE = createElementFromString(`\n<template>\n  <div class=\"MapboxSearch\">\n      <div class=\"Label\" role=\"label\" aria-live=\"polite\" aria-atomic=\"true\">\n      </div>\n      <div class=\"Results\" aria-hidden=\"true\">\n        <div class=\"ResultsList\" role=\"listbox\">\n        </div>\n        <div class=\"ResultsAttribution\" aria-hidden=\"true\">\n          <a href=\"https://www.mapbox.com/search-service\" target=\"_blank\" tabindex=\"-1\">\n            Powered by Mapbox\n          </a>\n        </div>\n      </div>\n  </div>\n</template>\n`);\nvar RENDER_TEMPLATE = createElementFromString(`\n<template>\n  <div class=\"Suggestion\" role=\"option\">\n    <div class=\"SuggestionName\"></div>\n    <div class=\"SuggestionDesc\"></div>\n  </div>\n</template>\n`);\n\nfunction getAriaIdForSuggestion(resultListId, i) {\n  return `${resultListId}-${i}`;\n}\n\nvar _sessionInternal, _popper, _binding, _labelID, _resultListID, _inputInternal, _selectedIndexInternal, _showResults, showResults_fn, _hideResults, hideResults_fn, _renderResultsList, renderResultsList_fn, _optionsInternal, _themeInternal, _handleInput, _handleSuggest, _handleSuggestError, _handleFocus, _handleBlur, _handleKeyDown;\n\nvar MapboxSearchListbox = class extends HTMLScopedElement {\n  constructor() {\n    super(...arguments);\n\n    __privateAdd(this, _showResults);\n\n    __privateAdd(this, _hideResults);\n\n    __privateAdd(this, _renderResultsList);\n\n    __privateAdd(this, _sessionInternal, void 0);\n\n    __privateAdd(this, _popper, null);\n\n    __privateAdd(this, _binding, void 0);\n\n    __privateAdd(this, _labelID, randomValidID());\n\n    __privateAdd(this, _resultListID, randomValidID());\n\n    __privateAdd(this, _inputInternal, void 0);\n\n    __privateAdd(this, _selectedIndexInternal, 0);\n\n    __privateAdd(this, _optionsInternal, {});\n\n    __privateAdd(this, _themeInternal, {});\n\n    this.retrieveFeature = null;\n\n    __privateAdd(this, _handleInput, e => {\n      const {\n        Results\n      } = __privateGet(this, _binding);\n\n      const input = e.target;\n\n      if (input.dataset[\"mapboxSuccess\"]) {\n        delete input.dataset[\"mapboxSuccess\"];\n        return;\n      }\n\n      const searchText = input.value;\n      Results.setAttribute(\"aria-busy\", \"true\");\n      this.session.suggest(searchText, this.options);\n    });\n\n    __privateAdd(this, _handleSuggest, result => {\n      if (!result || !result.suggestions) {\n        __privateMethod(this, _hideResults, hideResults_fn).call(this);\n\n        return;\n      }\n\n      __privateMethod(this, _renderResultsList, renderResultsList_fn).call(this);\n\n      if (result.suggestions.length) {\n        __privateMethod(this, _showResults, showResults_fn).call(this);\n      }\n\n      this.dispatchEvent(new MapboxHTMLEvent(\"suggest\", result));\n\n      const {\n        Results\n      } = __privateGet(this, _binding);\n\n      Results.setAttribute(\"aria-busy\", \"false\");\n    });\n\n    __privateAdd(this, _handleSuggestError, error => {\n      this.dispatchEvent(new MapboxHTMLEvent(\"suggesterror\", error));\n\n      const {\n        Results\n      } = __privateGet(this, _binding);\n\n      Results.setAttribute(\"aria-busy\", \"false\");\n\n      __privateMethod(this, _hideResults, hideResults_fn).call(this);\n    });\n\n    __privateAdd(this, _handleFocus, () => {\n      const input = this.input;\n      delete input.dataset[\"mapboxSuccess\"];\n\n      __privateMethod(this, _showResults, showResults_fn).call(this);\n    });\n\n    __privateAdd(this, _handleBlur, () => {\n      if (document.activeElement === this.input) {\n        return;\n      }\n\n      this.session.abort();\n\n      __privateMethod(this, _hideResults, hideResults_fn).call(this);\n    });\n\n    __privateAdd(this, _handleKeyDown, e => {\n      if (e.key === \"Escape\") {\n        __privateMethod(this, _hideResults, hideResults_fn).call(this);\n\n        return;\n      }\n\n      if (e.key === \"ArrowUp\") {\n        e.preventDefault();\n        this.selectedIndex = Math.max(0, this.selectedIndex - 1);\n        return;\n      }\n\n      if (e.key === \"ArrowDown\") {\n        e.preventDefault();\n        this.selectedIndex = Math.min(this.selectedIndex + 1, this.suggestions.length - 1);\n        return;\n      }\n\n      if (e.key === \"Enter\") {\n        e.preventDefault();\n        this.retrieve(this.suggestions[this.selectedIndex]);\n        return;\n      }\n    });\n  }\n\n  get template() {\n    return TEMPLATE;\n  }\n\n  get templateStyle() {\n    return style_default;\n  }\n\n  get templateUserStyle() {\n    return getThemeCSS(\".MapboxSearch\", this.theme);\n  }\n\n  get session() {\n    return __privateGet(this, _sessionInternal);\n  }\n\n  set session(newSession) {\n    const oldSession = __privateGet(this, _sessionInternal);\n\n    if (oldSession) {\n      newSession.removeEventListener(\"suggest\", __privateGet(this, _handleSuggest));\n      newSession.removeEventListener(\"suggesterror\", __privateGet(this, _handleSuggestError));\n    }\n\n    if (newSession) {\n      newSession.addEventListener(\"suggest\", __privateGet(this, _handleSuggest));\n      newSession.addEventListener(\"suggesterror\", __privateGet(this, _handleSuggestError));\n    }\n\n    __privateSet(this, _sessionInternal, newSession);\n  }\n\n  get suggestions() {\n    var _a;\n\n    return (_a = this.session.suggestions) == null ? void 0 : _a.suggestions;\n  }\n\n  get input() {\n    return __privateGet(this, _inputInternal);\n  }\n\n  set input(newInput) {\n    const oldInput = __privateGet(this, _inputInternal);\n\n    if (oldInput) {\n      oldInput.removeEventListener(\"input\", __privateGet(this, _handleInput));\n      oldInput.removeEventListener(\"focus\", __privateGet(this, _handleFocus));\n      oldInput.removeEventListener(\"blur\", __privateGet(this, _handleBlur));\n      oldInput.removeEventListener(\"keydown\", __privateGet(this, _handleKeyDown));\n\n      if (__privateGet(this, _popper)) {\n        __privateGet(this, _popper).destroy();\n      }\n    }\n\n    if (newInput) {\n      newInput.addEventListener(\"input\", __privateGet(this, _handleInput));\n      newInput.addEventListener(\"focus\", __privateGet(this, _handleFocus));\n      newInput.addEventListener(\"blur\", __privateGet(this, _handleBlur));\n      newInput.addEventListener(\"keydown\", __privateGet(this, _handleKeyDown));\n      newInput.setAttribute(\"role\", \"combobox\");\n      newInput.setAttribute(\"aria-autocomplete\", \"list\");\n      newInput.setAttribute(\"aria-controls\", __privateGet(this, _resultListID));\n\n      if (this.isConnected) {\n        __privateSet(this, _popper, createPopper(newInput, __privateGet(this, _binding).Results, {\n          placement: \"bottom-start\"\n        }));\n      }\n    }\n\n    __privateSet(this, _inputInternal, newInput);\n  }\n\n  get selectedIndex() {\n    return __privateGet(this, _selectedIndexInternal);\n  }\n\n  set selectedIndex(newIndex) {\n    const oldIndex = __privateGet(this, _selectedIndexInternal);\n\n    __privateSet(this, _selectedIndexInternal, newIndex);\n\n    const {\n      ResultsList,\n      Label\n    } = __privateGet(this, _binding);\n\n    const id = getAriaIdForSuggestion(__privateGet(this, _resultListID), newIndex);\n    this.input.setAttribute(\"aria-activedescendant\", id);\n    ResultsList.setAttribute(\"aria-activedescendant\", id);\n\n    if (oldIndex !== newIndex) {\n      const oldId = getAriaIdForSuggestion(__privateGet(this, _resultListID), oldIndex);\n      const oldEl = ResultsList.querySelector(`#${oldId}`);\n      oldEl == null ? void 0 : oldEl.removeAttribute(\"aria-selected\");\n      const el = ResultsList.querySelector(`#${id}`);\n      el == null ? void 0 : el.setAttribute(\"aria-selected\", \"true\");\n    }\n\n    Label.textContent = this.suggestions[newIndex].address + `: Suggestion ${newIndex + 1} of ${this.suggestions.length}`;\n  }\n\n  renderItem(i) {\n    const element = this.prepareTemplate(RENDER_TEMPLATE);\n    element.id = getAriaIdForSuggestion(__privateGet(this, _resultListID), i);\n    return element;\n  }\n\n  fillItem(el, item, i) {\n    const [nameEl, descriptionEl] = Array.from(el.querySelectorAll('[role=\"option\"] > *'));\n    nameEl.textContent = \"address_line1\" in item ? item.address_line1 || item.matching_name || item.feature_name : item.matching_name || item.feature_name;\n    descriptionEl.textContent = item.description;\n\n    if (i === this.selectedIndex) {\n      el.setAttribute(\"aria-selected\", \"true\");\n    } else {\n      el.removeAttribute(\"aria-selected\");\n    }\n  }\n\n  get options() {\n    return __privateGet(this, _optionsInternal);\n  }\n\n  set options(newOptions) {\n    __privateSet(this, _optionsInternal, newOptions);\n  }\n\n  get theme() {\n    return __privateGet(this, _themeInternal);\n  }\n\n  set theme(theme) {\n    __privateSet(this, _themeInternal, theme);\n\n    if (!__privateGet(this, _binding) || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(getThemeCSS(\".MapboxSearch\", theme));\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    __privateSet(this, _binding, bindElements(this, {\n      MapboxSearch: \".MapboxSearch\",\n      Results: \".Results\",\n      ResultsList: \".ResultsList\",\n      Label: \".Label\"\n    }));\n\n    const {\n      Results,\n      ResultsList,\n      Label\n    } = __privateGet(this, _binding);\n\n    Label.id = __privateGet(this, _labelID);\n    ResultsList.id = __privateGet(this, _resultListID);\n    ResultsList.setAttribute(\"aria-labelledby\", __privateGet(this, _labelID));\n    Results.addEventListener(\"blur\", __privateGet(this, _handleBlur));\n\n    if (!__privateGet(this, _popper) && this.input) {\n      __privateSet(this, _popper, createPopper(this.input, __privateGet(this, _binding).Results, {\n        placement: \"bottom-start\"\n      }));\n    }\n\n    requestAnimationFrame(() => {\n      if (__privateGet(this, _popper)) {\n        __privateGet(this, _popper).update();\n      }\n    });\n  }\n\n  disconnectedCallback() {\n    this.input = null;\n\n    const {\n      Results\n    } = __privateGet(this, _binding);\n\n    Results.removeEventListener(\"blur\", __privateGet(this, _handleBlur));\n  }\n\n  retrieve(suggestion) {\n    return __async(this, null, function* () {\n      var _a;\n\n      const input = this.input;\n\n      if (input) {\n        input.dataset[\"mapboxSuccess\"] = \"true\";\n      }\n\n      const result = yield this.session.retrieve(suggestion, this.options);\n      this.retrieveFeature = (_a = result.features) == null ? void 0 : _a[0];\n\n      __privateMethod(this, _hideResults, hideResults_fn).call(this);\n\n      this.dispatchEvent(new MapboxHTMLEvent(\"retrieve\", result));\n    });\n  }\n\n  focus() {\n    if (document.activeElement === this.input) {\n      __privateGet(this, _handleFocus).call(this);\n    } else {\n      this.input.focus();\n    }\n  }\n\n  updatePopover() {\n    if (__privateGet(this, _popper)) {\n      __privateGet(this, _popper).update();\n    }\n  }\n\n};\n_sessionInternal = new WeakMap();\n_popper = new WeakMap();\n_binding = new WeakMap();\n_labelID = new WeakMap();\n_resultListID = new WeakMap();\n_inputInternal = new WeakMap();\n_selectedIndexInternal = new WeakMap();\n_showResults = new WeakSet();\n\nshowResults_fn = function () {\n  if (!this.suggestions || !this.suggestions.length) {\n    return;\n  }\n\n  const {\n    Results,\n    MapboxSearch: MapboxSearch2\n  } = __privateGet(this, _binding);\n\n  const rect = this.input.getBoundingClientRect();\n  MapboxSearch2.style.setProperty(\"--width\", `${rect.width}px`);\n  MapboxSearch2.style.setProperty(\"display\", \"block\");\n  this.input.setAttribute(\"aria-expanded\", \"true\");\n  Results.removeAttribute(\"aria-hidden\");\n  this.selectedIndex = 0;\n};\n\n_hideResults = new WeakSet();\n\nhideResults_fn = function () {\n  const {\n    Results,\n    ResultsList\n  } = __privateGet(this, _binding);\n\n  Results.setAttribute(\"aria-hidden\", \"true\");\n  this.input.removeAttribute(\"aria-expanded\");\n  ResultsList.removeAttribute(\"aria-activedescendant\");\n  this.input.removeAttribute(\"aria-activedescendant\");\n};\n\n_renderResultsList = new WeakSet();\n\nrenderResultsList_fn = function () {\n  const {\n    ResultsList\n  } = __privateGet(this, _binding);\n\n  const suggestions = this.suggestions;\n\n  if (!suggestions || !suggestions.length) {\n    ResultsList.innerHTML = \"\";\n\n    __privateMethod(this, _hideResults, hideResults_fn).call(this);\n\n    return;\n  }\n\n  const elements = getChildElements(ResultsList);\n\n  if (suggestions.length > elements.length) {\n    for (let i = elements.length; i < suggestions.length; i++) {\n      const item = this.renderItem(i);\n      elements.push(item);\n\n      item.onmouseenter = () => {\n        this.selectedIndex = i;\n      };\n\n      ResultsList.appendChild(item);\n    }\n  }\n\n  if (suggestions.length < elements.length) {\n    for (let i = suggestions.length; i < elements.length; i++) {\n      elements[i].remove();\n    }\n  }\n\n  for (const suggestion of suggestions) {\n    const i = suggestions.indexOf(suggestion);\n    const element = elements[i];\n    this.fillItem(element, suggestion, i);\n\n    element.onclick = () => {\n      this.retrieve(suggestion);\n    };\n  }\n};\n\n_optionsInternal = new WeakMap();\n_themeInternal = new WeakMap();\n_handleInput = new WeakMap();\n_handleSuggest = new WeakMap();\n_handleSuggestError = new WeakMap();\n_handleFocus = new WeakMap();\n_handleBlur = new WeakMap();\n_handleKeyDown = new WeakMap();\nwindow.MapboxSearchListbox = MapboxSearchListbox;\n\nif (!window.customElements.get(\"mapbox-search-listbox\")) {\n  customElements.define(\"mapbox-search-listbox\", MapboxSearchListbox);\n} // src/utils/aria.ts\n\n\nfunction ariaButtonKeyDown(e) {\n  const el = e.currentTarget;\n\n  if (e.key === \" \" || e.key === \"Enter\") {\n    e.preventDefault();\n    e.stopPropagation();\n    el.dispatchEvent(new MouseEvent(\"click\", {\n      bubbles: true,\n      composed: true\n    }));\n  }\n} // src/utils/autofill.ts\n\n\nimport { featureToSuggestion } from \"@mapbox/search-js-core\";\nvar AUTOFILL_TOKENS = /* @__PURE__ */new Set([\"street-address\", \"address-line1\", \"address-line2\", \"address-line3\", \"address-level4\", \"address-level3\", \"address-level2\", \"address-level1\", \"country\", \"country-name\", \"postal-code\"]);\nvar AUTOFILL_SKIP_TOKENS = /* @__PURE__ */new Set([\"off\", \"on\", \"true\", \"false\"]);\n\nfunction findParentForm(el) {\n  let node = el.parentNode;\n\n  while (node) {\n    if (node instanceof HTMLFormElement) {\n      return node;\n    }\n\n    node = node.parentNode;\n  }\n\n  return null;\n}\n\nfunction findAddressInputs(form) {\n  const parent = form || document;\n  return Array.from(parent.querySelectorAll('input[autocomplete~=\"address-line1\"], input[autocomplete~=\"street-address\"]'));\n}\n\nvar SECTION = \"section-\";\nvar SECTION_DEFAULT = \"section-default\";\nvar SECTION_SHIPPING = \"section-shipping\";\nvar SECTION_BILLING = \"section-billing\";\n\nfunction parseFormStructure(form) {\n  const inputs = Array.from(form.querySelectorAll(\"[autocomplete]\")).filter(el => {\n    const tagName = el.tagName.toLowerCase();\n    return tagName === \"input\" || tagName === \"select\" || tagName === \"textarea\";\n  });\n  const res = [];\n\n  for (const input of inputs) {\n    if (!isVisible(input)) {\n      continue;\n    }\n\n    const autocomplete = input.getAttribute(\"autocomplete\") || \"\";\n\n    if (!autocomplete || AUTOFILL_SKIP_TOKENS.has(autocomplete)) {\n      continue;\n    }\n\n    const tokens = autocomplete.toLowerCase().split(\" \");\n\n    if (tokens.length > 3) {\n      continue;\n    }\n\n    const field = tokens[tokens.length - 1];\n\n    if (!AUTOFILL_TOKENS.has(field)) {\n      continue;\n    }\n\n    tokens.pop();\n    let section = SECTION_DEFAULT;\n\n    if (tokens.length) {\n      const sectionToken = tokens[tokens.length - 1];\n\n      if (sectionToken === \"shipping\") {\n        section = SECTION_SHIPPING;\n        tokens.pop();\n      }\n\n      if (sectionToken === \"billing\") {\n        section = SECTION_BILLING;\n        tokens.pop();\n      }\n    }\n\n    if (tokens.length) {\n      const sectionToken = tokens[tokens.length - 1];\n\n      if (sectionToken.startsWith(SECTION)) {\n        section = sectionToken;\n      }\n    }\n\n    res.push({\n      input,\n      section,\n      field\n    });\n  }\n\n  return res;\n}\n\nfunction findAddressAutofillInputs(form, ref) {\n  const logicalSections = [];\n  const logicalSectionSections = [];\n  const formStructure = parseFormStructure(form);\n  let foundSection = null;\n\n  for (const {\n    input,\n    section,\n    field\n  } of formStructure) {\n    let lastIndex = logicalSections.length - 1;\n    let createNewSection = false;\n\n    if (!logicalSections.length) {\n      createNewSection = true;\n    } else if (logicalSectionSections[lastIndex] !== section) {\n      createNewSection = true;\n    } else if (logicalSections[lastIndex][field]) {\n      createNewSection = true;\n    }\n\n    if (createNewSection) {\n      if (foundSection) {\n        break;\n      }\n\n      logicalSections.push({\n        [field]: input\n      });\n      logicalSectionSections.push(section);\n      lastIndex++;\n    } else {\n      logicalSections[lastIndex][field] = input;\n    }\n\n    if (input === ref) {\n      foundSection = logicalSections[lastIndex];\n    }\n  }\n\n  return foundSection != null ? foundSection : {};\n}\n\nfunction setFormAutofillValues(form, ref, suggestion) {\n  var _a;\n\n  const map = findAddressAutofillInputs(form, ref);\n  const streetAddress = [suggestion.address_line1, suggestion.address_line2, suggestion.address_line3].filter(part => Boolean(part)).join(\", \");\n  setValue(map[\"street-address\"], streetAddress);\n  setValue(map[\"address-line1\"], suggestion.address_line1 || \"\");\n  setValue(map[\"address-level1\"], suggestion.address_level1 || \"\");\n  setValue(map[\"address-level2\"], suggestion.address_level2 || \"\");\n  setValue(map[\"address-level3\"], suggestion.address_level3 || \"\");\n  const countryCode = ((_a = suggestion.metadata) == null ? void 0 : _a.iso_3166_1) || \"\";\n\n  if (map.country && map.country instanceof HTMLSelectElement) {\n    const firstOption = map.country.querySelector(`option`).value;\n    const isUpperCase = firstOption === firstOption.toUpperCase();\n    setValue(map[\"country\"], isUpperCase ? countryCode.toUpperCase() : countryCode);\n  } else {\n    setValue(map[\"country\"], countryCode);\n  }\n\n  setValue(map[\"country-name\"], suggestion.country || \"\");\n  setValue(map[\"postal-code\"], suggestion.postcode || \"\");\n}\n\nfunction getFormAutofillValues(form, ref) {\n  const map = findAddressAutofillInputs(form, ref);\n  const values = {};\n\n  for (const [key, input] of Object.entries(map)) {\n    if (input == null ? void 0 : input.value) {\n      values[key] = input.value;\n    }\n  }\n\n  return values;\n}\n\nfunction getAutofillSearchText(snapshot) {\n  const searchText = [];\n\n  if (snapshot[\"street-address\"]) {\n    searchText.push(snapshot[\"street-address\"]);\n  } else {\n    searchText.push(snapshot[\"address-line1\"] || \"\");\n    searchText.push(snapshot[\"address-line2\"] || \"\");\n    searchText.push(snapshot[\"address-line3\"] || \"\");\n  }\n\n  searchText.push(snapshot[\"address-level3\"] || \"\");\n  searchText.push(snapshot[\"address-level2\"] || \"\");\n  searchText.push(snapshot[\"address-level1\"] || \"\");\n  searchText.push(snapshot[\"postal-code\"] || \"\");\n\n  if (snapshot[\"country-name\"]) {\n    searchText.push(snapshot[\"country-name\"]);\n  } else {\n    searchText.push(snapshot[\"country\"] || \"\");\n  }\n\n  return searchText.filter(part => Boolean(part)).join(\", \");\n}\n\nfunction fillFormWithFeature(feature, input) {\n  const form = findParentForm(input);\n\n  if (!form) {\n    return;\n  }\n\n  const suggestion = featureToSuggestion(feature);\n  setFormAutofillValues(form, input, suggestion);\n}\n\nfunction featureToAutofillValueMap(feature) {\n  var _a;\n\n  const values = {};\n  const streetAddress = [feature.properties.address_line1, feature.properties.address_line2, feature.properties.address_line3].filter(part => Boolean(part)).join(\", \");\n  values[\"street-address\"] = streetAddress;\n  values[\"address-line1\"] = feature.properties.address_line1;\n  values[\"address-line2\"] = feature.properties.address_line2;\n  values[\"address-line3\"] = feature.properties.address_line3;\n  values[\"address-level1\"] = feature.properties.address_level1;\n  values[\"address-level2\"] = feature.properties.address_level2;\n  values[\"address-level3\"] = feature.properties.address_level3;\n  values[\"country\"] = (_a = feature.properties.metadata) == null ? void 0 : _a.iso_3166_1;\n  values[\"country-name\"] = feature.properties.country;\n  values[\"postal-code\"] = feature.properties.postcode;\n  return values;\n}\n\nfunction checkAutofillValuesChanged(targetMap, referenceMap) {\n  for (const [key, value] of Object.entries(targetMap)) {\n    if (referenceMap[key] !== value) return true;\n  }\n\n  return false;\n} // src/utils/confirmation.ts\n\n\nfunction createAddressElement(autofillValues, baseAddress) {\n  if (baseAddress) {\n    const element = createElementFromString(`\n        <span>\n          <span></span>\n          <br />\n          <span></span>\n        </span>\n      `);\n    const [firstLine, lastLine] = Array.from(element.querySelectorAll(\"span > span\"));\n    const parts = baseAddress.split(\",\");\n    firstLine.textContent = parts[0].trim();\n    lastLine.textContent = parts.slice(1).join(\",\").trim();\n\n    if (autofillValues[\"address-line2\"]) {\n      const span = document.createElement(\"span\");\n      span.textContent = autofillValues[\"address-line2\"];\n      element.insertBefore(span, lastLine);\n      element.insertBefore(document.createElement(\"br\"), lastLine);\n    }\n\n    if (autofillValues[\"address-line3\"]) {\n      const span = document.createElement(\"span\");\n      span.textContent = autofillValues[\"address-line3\"];\n      element.insertBefore(span, lastLine);\n      element.insertBefore(document.createElement(\"br\"), lastLine);\n    }\n\n    return element;\n  } else {\n    const firstLine = autofillValues[\"street-address\"] || autofillValues[\"address-line1\"] || \"\";\n    const line2 = autofillValues[\"address-line2\"];\n    const line3 = autofillValues[\"address-line3\"];\n    const lastLine = [autofillValues[\"address-level4\"] || \"\", autofillValues[\"address-level3\"] || \"\", autofillValues[\"address-level2\"] || \"\", `${autofillValues[\"address-level1\"] || \"\"} ${autofillValues[\"postal-code\"] || \"\"}`, autofillValues.country || autofillValues[\"country-name\"] || \"\"].filter(Boolean).join(\", \");\n    const addressLines = [firstLine, line2, line3, lastLine].filter(Boolean);\n    const addressLinesHtml = addressLines.map(val => `<span>${val}</span>`).join(\"<br />\");\n    const element = createElementFromString(`\n        <span>${addressLinesHtml}</span>\n      `);\n    return element;\n  }\n} // src/config.ts\n\n\nimport { SessionToken as SessionToken2 } from \"@mapbox/search-js-core\";\nvar Config = class {\n  constructor() {\n    this.feedbackEnabled = true;\n    this.autofillSessionToken = new SessionToken2();\n    this.autofillSessionEnabled = false;\n  }\n\n};\nvar config = new Config();\nObject.defineProperty(config, \"autofillSessionToken\", {\n  configurable: false,\n  writable: false\n}); // src/utils/contribute.ts\n\nvar CONTRIBUTE_API_BASE_URL = \"https://contribute-api.mapbox.com/v1\";\nvar CONTRIBUTE_API_STAGING_BASE_URL = \"https://contribute-api-staging.tilestream.net/v1\";\nvar EDIT_SUGGESTION_ENDPOINT = \"edit-suggestion\";\n\nfunction sendFeedback(accessToken, feedbackArgs) {\n  if (!config.feedbackEnabled) return;\n  const hostname = window.location.hostname;\n  const BASE_URL = isLocalServer(hostname) || isMapboxDomain(hostname) ? CONTRIBUTE_API_STAGING_BASE_URL : CONTRIBUTE_API_BASE_URL;\n  const url = `${BASE_URL}/${EDIT_SUGGESTION_ENDPOINT}/address?access_token=${accessToken}`;\n  const {\n    originalCoordinate,\n    originalAddress,\n    changes\n  } = feedbackArgs;\n  const payload = {\n    action: \"update\",\n    reason: \"incorrect_address\",\n    location: {\n      longitude: originalCoordinate[0],\n      latitude: originalCoordinate[1]\n    },\n    userEmail: \"no-reply-autofill@mapbox.com\",\n    changes,\n    placeName: originalAddress\n  };\n  fetch(url, {\n    method: \"POST\",\n    headers: new Headers({\n      \"User-Agent\": `mapbox-search-js.${version}.${navigator.userAgent}`,\n      \"Content-Type\": \"application/json\"\n    }),\n    body: JSON.stringify(payload)\n  });\n} // src/components/MapboxAddressConfirmationFeature.ts\n\n\nvar TEMPLATE2 = createElementFromString(`\n<template>\n  <div class=\"MapboxAddressConfirmationFeature\">\n    <div class=\"Modal\" aria-modal=\"true\" role=\"dialog\">\n      <div class=\"ModalHeader\">\n        <svg viewBox=\"0 0 18 18\" class=\"Icon IconQuestion\"></svg>\n        <div class=\"ModalHeaderTitle\">Did you mean?</div>\n        <svg\n          viewBox=\"0 0 18 18\"\n          class=\"Icon IconClose\"\n          tabindex=\"0\"\n          role=\"button\"\n          title=\"Close\"\n          aria-label=\"Close\"\n          aria-expanded=\"true\"\n        ></svg>\n      </div>\n\n      <div class=\"ModalAddress ModalAddressApprove\"></div>\n            \n      <div class=\"ModalMap\">\n        <mapbox-address-minimap class=\"Minimap\"></mapbox-address-minimap>\n      </div>\n\n      <div\n        class=\"Button ButtonPrimary ButtonApprove\"\n        tabindex=\"0\"\n        role=\"button\"\n        aria-label=\"Yes\"\n      >\n        Yes\n      </div>\n      \n      <div\n        class=\"Button ButtonSecondary ButtonReject\"\n        tabindex=\"0\"\n        role=\"button\"\n        aria-label=\"No, use the address I provided\"\n      >\n        No, use the address I provided\n      </div>\n\n      <div class=\"ModalFooter\">\n          Your confirmation helps ensure your order is delivered correctly.\n      </div>\n    </div>\n  </div>\n</template>\n`);\n\nvar _binding2, _themeInternal2, _feature, _formValues, _handleClose, _modalID, _modalHeaderTitleID, _modalAddressApproveID;\n\nvar MapboxAddressConfirmationFeature = class extends HTMLScopedElement {\n  constructor() {\n    super(...arguments);\n\n    __privateAdd(this, _binding2, void 0);\n\n    __privateAdd(this, _themeInternal2, {});\n\n    this.minimap = false;\n\n    __privateAdd(this, _feature, void 0);\n\n    __privateAdd(this, _formValues, void 0);\n\n    this.update = (feature, autofillValues) => {\n      __privateSet(this, _feature, feature);\n\n      __privateSet(this, _formValues, autofillValues);\n\n      const {\n        ModalMap,\n        Minimap,\n        ModalAddressApprove\n      } = __privateGet(this, _binding2);\n\n      if (this.minimap) {\n        ModalMap.removeAttribute(\"aria-hidden\");\n        Minimap.accessToken = this.accessToken;\n\n        if (typeof this.minimap === \"object\") {\n          const {\n            defaultMapStyle,\n            theme,\n            mapStyleMode,\n            satelliteToggle\n          } = this.minimap;\n          defaultMapStyle && (Minimap.defaultMapStyle = this.minimap.defaultMapStyle);\n          theme && (Minimap.theme = this.minimap.theme);\n          mapStyleMode && (Minimap.mapStyleMode = mapStyleMode);\n          satelliteToggle !== void 0 && (Minimap.satelliteToggle = satelliteToggle);\n        }\n\n        Minimap.feature = feature;\n      } else {\n        ModalMap.setAttribute(\"aria-hidden\", \"true\");\n      }\n\n      const approveAddress = feature.properties.place_name || feature.properties.full_address || feature.properties.address;\n      ModalAddressApprove.innerHTML = \"\";\n      ModalAddressApprove.appendChild(createAddressElement(autofillValues, approveAddress));\n    };\n\n    __privateAdd(this, _handleClose, () => {\n      this.dispatchEvent(new MapboxHTMLEvent(\"result\", \"cancel\"));\n    });\n\n    this.approve = () => {\n      this.dispatchEvent(new MapboxHTMLEvent(\"result\", \"change\"));\n    };\n\n    this.reject = () => {\n      this.dispatchEvent(new MapboxHTMLEvent(\"result\", \"nochange\"));\n      sendFeedback(this.accessToken, {\n        originalCoordinate: __privateGet(this, _feature).geometry.coordinates,\n        originalAddress: __privateGet(this, _feature).properties.full_address,\n        changes: {\n          address: getAutofillSearchText(__privateGet(this, _formValues))\n        }\n      });\n    };\n\n    __privateAdd(this, _modalID, randomValidID());\n\n    __privateAdd(this, _modalHeaderTitleID, randomValidID());\n\n    __privateAdd(this, _modalAddressApproveID, randomValidID());\n  }\n\n  get template() {\n    return TEMPLATE2;\n  }\n\n  get templateStyle() {\n    return style_default;\n  }\n\n  get templateUserStyle() {\n    return getThemeCSS(\".MapboxAddressConfirmationFeature\", this.theme);\n  }\n\n  get theme() {\n    return __privateGet(this, _themeInternal2);\n  }\n\n  set theme(theme) {\n    __privateSet(this, _themeInternal2, theme);\n\n    if (!__privateGet(this, _binding2) || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(getThemeCSS(\".MapboxAddressConfirmationFeature\", theme));\n\n    const {\n      IconQuestion,\n      IconClose\n    } = __privateGet(this, _binding2);\n\n    IconQuestion.innerHTML = getIcon(\"question\", theme);\n    IconClose.innerHTML = getIcon(\"close\", theme);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    __privateSet(this, _binding2, bindElements(this, {\n      MapboxAddressConfirmationFeature: \".MapboxAddressConfirmationFeature\",\n      Modal: \".Modal\",\n      ModalHeaderTitle: \".ModalHeaderTitle\",\n      ModalMap: \".ModalMap\",\n      Minimap: \".Minimap\",\n      IconQuestion: \".IconQuestion\",\n      IconClose: \".IconClose\",\n      ButtonApprove: \".ButtonApprove\",\n      ButtonReject: \".ButtonReject\",\n      ModalAddressApprove: \".ModalAddressApprove\"\n    }));\n\n    const {\n      Modal,\n      ModalHeaderTitle,\n      IconClose,\n      ButtonApprove,\n      ButtonReject,\n      ModalAddressApprove\n    } = __privateGet(this, _binding2);\n\n    Modal.setAttribute(\"aria-labelledby\", __privateGet(this, _modalHeaderTitleID));\n    Modal.setAttribute(\"aria-describedby\", __privateGet(this, _modalAddressApproveID));\n    IconClose.setAttribute(\"aria-controls\", __privateGet(this, _modalID));\n    Modal.id = __privateGet(this, _modalID);\n    ModalHeaderTitle.id = __privateGet(this, _modalHeaderTitleID);\n    ModalAddressApprove.id = __privateGet(this, _modalAddressApproveID);\n    const buttons = Array.from(this.querySelectorAll('[role=\"button\"]'));\n\n    for (const button of buttons) {\n      button.addEventListener(\"keydown\", ariaButtonKeyDown);\n    }\n\n    IconClose.addEventListener(\"click\", __privateGet(this, _handleClose));\n    ButtonApprove.addEventListener(\"click\", this.approve);\n    ButtonReject.addEventListener(\"click\", this.reject);\n    const theme = this.theme;\n\n    if (theme) {\n      const {\n        IconQuestion,\n        IconClose: IconClose2\n      } = __privateGet(this, _binding2);\n\n      IconQuestion.innerHTML = getIcon(\"question\", theme);\n      IconClose2.innerHTML = getIcon(\"close\", theme);\n    }\n  }\n\n  disconnectedCallback() {\n    const {\n      IconClose,\n      ButtonApprove\n    } = __privateGet(this, _binding2);\n\n    IconClose.removeEventListener(\"click\", __privateGet(this, _handleClose));\n    ButtonApprove.removeEventListener(\"click\", this.approve);\n  }\n\n};\n_binding2 = new WeakMap();\n_themeInternal2 = new WeakMap();\n_feature = new WeakMap();\n_formValues = new WeakMap();\n_handleClose = new WeakMap();\n_modalID = new WeakMap();\n_modalHeaderTitleID = new WeakMap();\n_modalAddressApproveID = new WeakMap();\nwindow.MapboxAddressConfirmationFeature = MapboxAddressConfirmationFeature;\n\nif (!window.customElements.get(\"mapbox-address-confirmation-feature\")) {\n  customElements.define(\"mapbox-address-confirmation-feature\", MapboxAddressConfirmationFeature);\n} // src/components/MapboxAddressConfirmationNoFeature.ts\n\n\nvar TEMPLATE3 = createElementFromString(`\n<template>\n  <div class=\"MapboxAddressConfirmationNoFeature\">\n    <div class=\"Modal\" aria-modal=\"true\" role=\"dialog\">\n      <div class=\"ModalHeader\">\n        <svg viewBox=\"0 0 18 18\" class=\"Icon IconQuestion\"></svg>\n        <div class=\"ModalHeaderTitle\">Confirm address</div>\n        <svg\n          viewBox=\"0 0 18 18\"\n          class=\"Icon IconClose\"\n          tabindex=\"0\"\n          role=\"button\"\n          title=\"Close\"\n          aria-label=\"Close\"\n          aria-expanded=\"true\"\n        ></svg>\n      </div>\n      <div class=\"ModalDescription\">\n        We couldn't verify this address. Please check that your information is correct before continuing.\n      </div>\n      <br />\n      <div class=\"ModalSubheader\">\n        You entered\n      </div>\n      <div class=\"ModalAddress\"></div>\n      <div\n        class=\"Button ButtonPrimary\"\n        tabindex=\"0\"\n        role=\"button\"\n        aria-label=\"Use the address I provided\"\n      >\n        Use the address I provided\n      </div>\n    </div>\n  </div>\n</template>\n`);\n\nvar _binding3, _themeInternal3, _handleClose2, _modalID2, _modalHeaderTitleID2, _modalAddressID;\n\nvar MapboxAddressConfirmationNoFeature = class extends HTMLScopedElement {\n  constructor() {\n    super(...arguments);\n\n    __privateAdd(this, _binding3, void 0);\n\n    __privateAdd(this, _themeInternal3, {});\n\n    this.update = autofillValues => {\n      const {\n        ModalAddress\n      } = __privateGet(this, _binding3);\n\n      ModalAddress.innerHTML = \"\";\n      ModalAddress.appendChild(createAddressElement(autofillValues));\n    };\n\n    __privateAdd(this, _handleClose2, () => {\n      this.dispatchEvent(new MapboxHTMLEvent(\"result\", \"cancel\"));\n    });\n\n    this.reject = () => {\n      this.dispatchEvent(new MapboxHTMLEvent(\"result\", \"nochange\"));\n    };\n\n    __privateAdd(this, _modalID2, randomValidID());\n\n    __privateAdd(this, _modalHeaderTitleID2, randomValidID());\n\n    __privateAdd(this, _modalAddressID, randomValidID());\n  }\n\n  get template() {\n    return TEMPLATE3;\n  }\n\n  get templateStyle() {\n    return style_default;\n  }\n\n  get templateUserStyle() {\n    return getThemeCSS(\".MapboxAddressConfirmationNoFeature\", this.theme);\n  }\n\n  get theme() {\n    return __privateGet(this, _themeInternal3);\n  }\n\n  set theme(theme) {\n    __privateSet(this, _themeInternal3, theme);\n\n    if (!__privateGet(this, _binding3) || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(getThemeCSS(\".MapboxAddressConfirmationNoFeature\", theme));\n\n    const {\n      IconQuestion,\n      IconClose\n    } = __privateGet(this, _binding3);\n\n    IconQuestion.innerHTML = getIcon(\"question\", theme);\n    IconClose.innerHTML = getIcon(\"close\", theme);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    __privateSet(this, _binding3, bindElements(this, {\n      Modal: \".Modal\",\n      ModalHeaderTitle: \".ModalHeaderTitle\",\n      IconQuestion: \".IconQuestion\",\n      IconClose: \".IconClose\",\n      ModalAddress: \".ModalAddress\",\n      ButtonReject: \".Button\"\n    }));\n\n    const {\n      Modal,\n      ModalHeaderTitle,\n      IconClose,\n      ModalAddress,\n      ButtonReject\n    } = __privateGet(this, _binding3);\n\n    Modal.setAttribute(\"aria-labelledby\", __privateGet(this, _modalHeaderTitleID2));\n    Modal.setAttribute(\"aria-describedby\", __privateGet(this, _modalAddressID));\n    IconClose.setAttribute(\"aria-controls\", __privateGet(this, _modalID2));\n    Modal.id = __privateGet(this, _modalID2);\n    ModalHeaderTitle.id = __privateGet(this, _modalHeaderTitleID2);\n    ModalAddress.id = __privateGet(this, _modalAddressID);\n    const buttons = Array.from(this.querySelectorAll('[role=\"button\"]'));\n\n    for (const button of buttons) {\n      button.addEventListener(\"keydown\", ariaButtonKeyDown);\n    }\n\n    IconClose.addEventListener(\"click\", __privateGet(this, _handleClose2));\n    ButtonReject.addEventListener(\"click\", this.reject);\n    const theme = this.theme;\n\n    if (theme) {\n      const {\n        IconQuestion,\n        IconClose: IconClose2\n      } = __privateGet(this, _binding3);\n\n      IconQuestion.innerHTML = getIcon(\"question\", theme);\n      IconClose2.innerHTML = getIcon(\"close\", theme);\n    }\n  }\n\n  disconnectedCallback() {\n    const {\n      IconClose,\n      ButtonReject\n    } = __privateGet(this, _binding3);\n\n    IconClose.removeEventListener(\"click\", __privateGet(this, _handleClose2));\n    ButtonReject.removeEventListener(\"click\", this.reject);\n  }\n\n};\n_binding3 = new WeakMap();\n_themeInternal3 = new WeakMap();\n_handleClose2 = new WeakMap();\n_modalID2 = new WeakMap();\n_modalHeaderTitleID2 = new WeakMap();\n_modalAddressID = new WeakMap();\nwindow.MapboxAddressConfirmationNoFeature = MapboxAddressConfirmationNoFeature;\n\nif (!window.customElements.get(\"mapbox-address-confirmation-no-feature\")) {\n  customElements.define(\"mapbox-address-confirmation-no-feature\", MapboxAddressConfirmationNoFeature);\n} // src/components/MapboxAddressConfirmation.ts\n\n\nimport { AutofillMatchCodeConfidence, MapboxAutofill } from \"@mapbox/search-js-core\";\nimport noScroll from \"no-scroll\";\nimport { createFocusTrap } from \"focus-trap\";\nvar TEMPLATE4 = createElementFromString(`\n<template>\n  <div class=\"MapboxAddressConfirmation\" aria-hidden=\"true\">\n    <mapbox-address-confirmation-feature class=\"ContentFeature\"></mapbox-address-confirmation-feature>\n    <mapbox-address-confirmation-no-feature class=\"ContentNoFeature\"></mapbox-address-confirmation-no-feature>\n  </div>\n</template>\n`);\n\nvar _show, _binding4, _focusTrap, _themeInternal4;\n\nvar MapboxAddressConfirmation = class extends HTMLScopedElement {\n  constructor() {\n    super(...arguments);\n\n    __privateAdd(this, _show, false);\n\n    __privateAdd(this, _binding4, void 0);\n\n    __privateAdd(this, _focusTrap, void 0);\n\n    __privateAdd(this, _themeInternal4, {});\n  }\n\n  get template() {\n    return TEMPLATE4;\n  }\n\n  get templateStyle() {\n    return style_default;\n  }\n\n  get templateUserStyle() {\n    return getThemeCSS(\".MapboxAddressConfirmation\", this.theme);\n  }\n\n  get theme() {\n    return __privateGet(this, _themeInternal4);\n  }\n\n  set theme(theme) {\n    __privateSet(this, _themeInternal4, theme);\n\n    if (!__privateGet(this, _binding4) || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(getThemeCSS(\".MapboxAddressConfirmation\", theme));\n\n    const {\n      ContentFeature,\n      ContentNoFeature\n    } = __privateGet(this, _binding4);\n\n    ContentFeature.theme = theme;\n    ContentNoFeature.theme = theme;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    __privateSet(this, _binding4, bindElements(this, {\n      MapboxAddressConfirmation: \".MapboxAddressConfirmation\",\n      ContentFeature: \".ContentFeature\",\n      ContentNoFeature: \".ContentNoFeature\"\n    }));\n\n    const {\n      MapboxAddressConfirmation: MapboxAddressConfirmation2\n    } = __privateGet(this, _binding4);\n\n    MapboxAddressConfirmation2.setAttribute(\"aria-hidden\", \"true\");\n    const theme = this.theme;\n\n    if (theme) {\n      const {\n        ContentFeature,\n        ContentNoFeature\n      } = __privateGet(this, _binding4);\n\n      ContentFeature.theme = theme;\n      ContentNoFeature.theme = theme;\n    }\n  }\n\n  disconnectedCallback() {\n    __privateSet(this, _focusTrap, null);\n  }\n\n  hide() {\n    var _a;\n\n    __privateSet(this, _show, false);\n\n    if (!__privateGet(this, _binding4)) {\n      return;\n    }\n\n    const {\n      MapboxAddressConfirmation: MapboxAddressConfirmation2\n    } = __privateGet(this, _binding4);\n\n    MapboxAddressConfirmation2.setAttribute(\"aria-hidden\", \"true\");\n    (_a = __privateGet(this, _focusTrap)) == null ? void 0 : _a.deactivate();\n    noScroll.off();\n  }\n\n  show(autofillValues, optionsArg, feature) {\n    return __async(this, null, function* () {\n      var _a;\n\n      if (!__privateGet(this, _binding4)) {\n        return {\n          type: \"cancel\"\n        };\n      }\n\n      const {\n        MapboxAddressConfirmation: MapboxAddressConfirmation2,\n        ContentFeature,\n        ContentNoFeature\n      } = __privateGet(this, _binding4);\n\n      const {\n        accessToken,\n        minimap = false,\n        theme\n      } = optionsArg;\n      this.theme = theme;\n\n      if (feature) {\n        ContentFeature.removeAttribute(\"aria-hidden\");\n        ContentNoFeature.setAttribute(\"aria-hidden\", \"true\");\n        ContentFeature.minimap = minimap;\n        ContentFeature.accessToken = accessToken;\n        ContentFeature.update(feature, autofillValues);\n      } else {\n        ContentFeature.setAttribute(\"aria-hidden\", \"true\");\n        ContentNoFeature.removeAttribute(\"aria-hidden\");\n        ContentNoFeature.update(autofillValues);\n      }\n\n      __privateSet(this, _show, true);\n\n      MapboxAddressConfirmation2.removeAttribute(\"aria-hidden\");\n      noScroll.on();\n      const activeContentElement = feature ? ContentFeature : ContentNoFeature;\n\n      __privateSet(this, _focusTrap, createFocusTrap(MapboxAddressConfirmation2, {\n        fallbackFocus: activeContentElement,\n        escapeDeactivates: () => {\n          this.hide();\n          return true;\n        }\n      }));\n\n      (_a = __privateGet(this, _focusTrap)) == null ? void 0 : _a.activate();\n      return new Promise(resolve => {\n        const eventHost = activeContentElement;\n\n        const fn = e => {\n          eventHost.removeEventListener(\"result\", fn);\n          const result = e.detail;\n          this.hide();\n\n          if (result === \"change\") {\n            resolve({\n              type: \"change\",\n              feature\n            });\n          } else {\n            resolve({\n              type: result\n            });\n          }\n        };\n\n        eventHost.addEventListener(\"result\", fn);\n      });\n    });\n  }\n\n  tryShow(autofillValues, optionsArg) {\n    return __async(this, null, function* () {\n      if (!__privateGet(this, _binding4)) {\n        return {\n          type: \"cancel\"\n        };\n      }\n\n      const {\n        accessToken,\n        options = {}\n      } = optionsArg;\n      const autofill2 = new MapboxAutofill(__spreadValues({\n        accessToken\n      }, options));\n      const searchText = getAutofillSearchText(autofillValues);\n      const featureCollection = yield autofill2.retrieve(searchText, {\n        sessionToken: config.autofillSessionToken\n      });\n      const feature = featureCollection.features[0];\n\n      if (feature) {\n        const defaultValidation = feature2 => feature2.properties.match_code.confidence === AutofillMatchCodeConfidence.exact;\n\n        const {\n          skipConfirmModal = defaultValidation\n        } = optionsArg;\n\n        if (skipConfirmModal(feature)) {\n          return {\n            type: \"nochange\"\n          };\n        }\n      }\n\n      return yield this.show(autofillValues, optionsArg, feature);\n    });\n  }\n\n};\n_show = new WeakMap();\n_binding4 = new WeakMap();\n_focusTrap = new WeakMap();\n_themeInternal4 = new WeakMap();\nwindow.MapboxAddressConfirmation = MapboxAddressConfirmation;\n\nif (!window.customElements.get(\"mapbox-address-confirmation\")) {\n  customElements.define(\"mapbox-address-confirmation\", MapboxAddressConfirmation);\n} // src/components/MapboxAddressAutofill.ts\n\n\nimport { MapboxAutofill as MapboxAutofill2, SearchSession } from \"@mapbox/search-js-core\";\n\nvar _autofill, _session, _input, _listbox, _handleSuggest2, _handleSuggestError2, _handleRetrieve, _handleObserve, _observer;\n\nvar MapboxAddressAutofill = class extends HTMLScopedElement {\n  constructor() {\n    super(...arguments);\n\n    __privateAdd(this, _autofill, new MapboxAutofill2());\n\n    __privateAdd(this, _session, new SearchSession(__privateGet(this, _autofill)));\n\n    __privateAdd(this, _input, void 0);\n\n    __privateAdd(this, _listbox, new MapboxSearchListbox());\n\n    __privateAdd(this, _handleSuggest2, e => {\n      this.dispatchEvent(e.clone());\n    });\n\n    __privateAdd(this, _handleSuggestError2, e => {\n      this.dispatchEvent(e.clone());\n    });\n\n    __privateAdd(this, _handleRetrieve, e => {\n      this.dispatchEvent(e.clone());\n\n      if (!__privateGet(this, _input)) {\n        return;\n      }\n\n      const featureCollection = e.detail;\n\n      if (!featureCollection || !featureCollection.features || !featureCollection.features.length) {\n        return;\n      }\n\n      fillFormWithFeature(featureCollection.features[0], __privateGet(this, _input));\n    });\n\n    __privateAdd(this, _handleObserve, () => {\n      var _a;\n\n      try {\n        const input = (_a = this.querySelector(\"input\")) != null ? _a : null;\n\n        __privateSet(this, _input, input);\n\n        __privateGet(this, _listbox).input = input;\n      } catch (e) {\n        __privateSet(this, _input, null);\n\n        __privateGet(this, _listbox).input = null;\n        console.error(e.message || e);\n      }\n    });\n\n    __privateAdd(this, _observer, new MutationObserver(__privateGet(this, _handleObserve)));\n  }\n\n  get accessToken() {\n    return __privateGet(this, _autofill).accessToken;\n  }\n\n  set accessToken(newToken) {\n    __privateGet(this, _autofill).accessToken = newToken;\n  }\n\n  get options() {\n    return __privateGet(this, _listbox).options;\n  }\n\n  set options(newOptions) {\n    __privateGet(this, _listbox).options = newOptions;\n  }\n\n  get theme() {\n    return __privateGet(this, _listbox).theme;\n  }\n\n  set theme(theme) {\n    __privateGet(this, _listbox).theme = theme;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    config.autofillSessionEnabled = true;\n    __privateGet(this, _listbox).session = __privateGet(this, _session);\n    __privateGet(this, _listbox).session.sessionToken = config.autofillSessionToken;\n\n    __privateGet(this, _listbox).addEventListener(\"suggest\", __privateGet(this, _handleSuggest2));\n\n    __privateGet(this, _listbox).addEventListener(\"suggesterror\", __privateGet(this, _handleSuggestError2));\n\n    __privateGet(this, _listbox).addEventListener(\"retrieve\", __privateGet(this, _handleRetrieve));\n\n    document.body.appendChild(__privateGet(this, _listbox));\n\n    __privateGet(this, _observer).observe(this, {\n      subtree: true,\n      childList: true\n    });\n\n    __privateGet(this, _handleObserve).call(this);\n  }\n\n  disconnectedCallback() {\n    __privateGet(this, _listbox).remove();\n\n    __privateGet(this, _listbox).removeEventListener(\"suggest\", __privateGet(this, _handleSuggest2));\n\n    __privateGet(this, _listbox).removeEventListener(\"suggesterror\", __privateGet(this, _handleSuggestError2));\n\n    __privateGet(this, _listbox).removeEventListener(\"retrieve\", __privateGet(this, _handleRetrieve));\n\n    __privateGet(this, _observer).disconnect();\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === \"access-token\") {\n      __privateGet(this, _autofill).accessToken = newValue;\n      return;\n    }\n\n    if (name === \"theme\") {\n      this.theme = tryParseJSON(newValue);\n      return;\n    }\n\n    const optionName = name.split(\"-\").join(\"_\");\n\n    if (!newValue) {\n      delete __privateGet(this, _listbox).options[optionName];\n    }\n\n    __privateGet(this, _listbox).options[optionName] = newValue;\n  }\n\n  focus() {\n    __privateGet(this, _listbox).focus();\n  }\n\n};\n_autofill = new WeakMap();\n_session = new WeakMap();\n_input = new WeakMap();\n_listbox = new WeakMap();\n_handleSuggest2 = new WeakMap();\n_handleSuggestError2 = new WeakMap();\n_handleRetrieve = new WeakMap();\n_handleObserve = new WeakMap();\n_observer = new WeakMap();\nMapboxAddressAutofill.observedAttributes = [\"access-token\", \"theme\", \"css-text\", \"language\", \"country\", \"bbox\", \"limit\", \"proximity\"];\nwindow.MapboxAddressAutofill = MapboxAddressAutofill;\n\nif (!window.customElements.get(\"mapbox-address-autofill\")) {\n  customElements.define(\"mapbox-address-autofill\", MapboxAddressAutofill);\n} // src/components/MapboxSearchBox.ts\n\n\nimport { featureToSuggestion as featureToSuggestion2, LngLatBounds, MapboxSearch, SearchSession as SearchSession2 } from \"@mapbox/search-js-core\";\nimport bbox from \"@turf/bbox\";\nimport bboxPolygon from \"@turf/bbox-polygon\";\nvar MAX_ZOOM = 9;\nvar TEMPLATE5 = createElementFromString(`\n<template>\n  <input class=\"Input\" type=\"text\" />\n</template>\n`);\n\nvar _search, _session2, _map, _input2, _listbox2, _handleSuggest3, _handleSuggestError3, _handleRetrieve2, _handleInput2, _handleMoveEnd;\n\nvar MapboxSearchBox = class extends HTMLScopedElement {\n  constructor() {\n    super(...arguments);\n\n    __privateAdd(this, _search, new MapboxSearch({}));\n\n    __privateAdd(this, _session2, new SearchSession2(__privateGet(this, _search)));\n\n    __privateAdd(this, _map, null);\n\n    __privateAdd(this, _input2, void 0);\n\n    __privateAdd(this, _listbox2, new MapboxSearchListbox());\n\n    __privateAdd(this, _handleSuggest3, e => {\n      this.dispatchEvent(e.clone());\n    });\n\n    __privateAdd(this, _handleSuggestError3, e => {\n      this.dispatchEvent(e.clone());\n    });\n\n    __privateAdd(this, _handleRetrieve2, e => __async(this, null, function* () {\n      var _a;\n\n      this.dispatchEvent(e.clone());\n      const featureCollection = e.detail;\n\n      if (!featureCollection || !featureCollection.features.length) {\n        return;\n      }\n\n      const suggestion = featureToSuggestion2(featureCollection.features[0]);\n      __privateGet(this, _input2).value = suggestion.feature_name;\n\n      const map = __privateGet(this, _map);\n\n      if (!map) {\n        return;\n      }\n\n      const features = featureCollection.features;\n\n      if (features.length === 1) {\n        const feature = features[0];\n        const placeType = (_a = feature.properties.place_type) == null ? void 0 : _a[0];\n        const bounds2 = feature.bbox;\n\n        if (bounds2) {\n          map.flyTo(bboxViewport(map, LngLatBounds.convert(bounds2).toFlatArray()));\n        } else {\n          const center = feature.geometry.coordinates;\n          const zoom = getMaxZoom(placeType);\n          map.flyTo({\n            center,\n            zoom,\n            speed: FLY_TO_SPEED\n          });\n        }\n\n        return;\n      }\n\n      const geoAccurateFeatures = featureCollection.features.map(feature => {\n        if (feature.bbox) {\n          return bboxPolygon(LngLatBounds.convert(feature.bbox).toFlatArray());\n        }\n\n        return feature;\n      });\n      const bounds = bbox({\n        type: \"FeatureCollection\",\n        features: geoAccurateFeatures\n      });\n      map.flyTo(bboxViewport(map, bounds));\n    }));\n\n    __privateAdd(this, _handleInput2, e => {\n      const event = new MapboxHTMLEvent(\"input\");\n      Object.assign(event, __spreadValues({}, e));\n      this.dispatchEvent(event);\n    });\n\n    __privateAdd(this, _handleMoveEnd, () => {\n      const map = __privateGet(this, _map);\n\n      const options = __spreadValues({}, __privateGet(this, _listbox2).options);\n\n      if (map.getZoom() <= MAX_ZOOM) {\n        delete options.proximity;\n        __privateGet(this, _listbox2).options = options;\n        return;\n      }\n\n      const center = map.getCenter();\n      __privateGet(this, _listbox2).options = __spreadProps(__spreadValues({}, options), {\n        proximity: center\n      });\n    });\n  }\n\n  get accessToken() {\n    return __privateGet(this, _search).accessToken;\n  }\n\n  set accessToken(newToken) {\n    __privateGet(this, _search).accessToken = newToken;\n  }\n\n  get value() {\n    return __privateGet(this, _input2).value;\n  }\n\n  set value(newValue) {\n    __privateGet(this, _input2).value = newValue;\n  }\n\n  get template() {\n    return TEMPLATE5;\n  }\n\n  get templateStyle() {\n    return style_default;\n  }\n\n  get templateUserStyle() {\n    return getThemeCSS(\".Input\", __privateGet(this, _listbox2).theme);\n  }\n\n  get options() {\n    return __privateGet(this, _listbox2).options;\n  }\n\n  set options(newOptions) {\n    __privateGet(this, _listbox2).options = newOptions;\n  }\n\n  get theme() {\n    return __privateGet(this, _listbox2).theme;\n  }\n\n  set theme(theme) {\n    __privateGet(this, _listbox2).theme = theme;\n\n    const input = __privateGet(this, _input2);\n\n    if (!input) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(getThemeCSS(\".Input\", theme));\n\n    __privateGet(this, _listbox2).updatePopover();\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    const input = this.querySelector(\".Input\");\n    input.addEventListener(\"input\", __privateGet(this, _handleInput2));\n\n    __privateSet(this, _input2, input);\n\n    __privateGet(this, _listbox2).session = __privateGet(this, _session2);\n    __privateGet(this, _listbox2).input = input;\n\n    __privateGet(this, _listbox2).addEventListener(\"suggest\", __privateGet(this, _handleSuggest3));\n\n    __privateGet(this, _listbox2).addEventListener(\"suggesterror\", __privateGet(this, _handleSuggestError3));\n\n    __privateGet(this, _listbox2).addEventListener(\"retrieve\", __privateGet(this, _handleRetrieve2));\n\n    document.body.appendChild(__privateGet(this, _listbox2));\n  }\n\n  disconnectedCallback() {\n    __privateGet(this, _listbox2).remove();\n\n    __privateGet(this, _listbox2).input = null;\n\n    __privateGet(this, _listbox2).removeEventListener(\"suggest\", __privateGet(this, _handleSuggest3));\n\n    __privateGet(this, _listbox2).removeEventListener(\"suggesterror\", __privateGet(this, _handleSuggestError3));\n\n    __privateGet(this, _listbox2).removeEventListener(\"retrieve\", __privateGet(this, _handleRetrieve2));\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === \"access-token\") {\n      __privateGet(this, _search).accessToken = newValue;\n      return;\n    }\n\n    if (name === \"theme\") {\n      this.theme = tryParseJSON(newValue);\n      return;\n    }\n\n    const optionName = name.split(\"-\").join(\"_\");\n\n    if (!newValue) {\n      delete __privateGet(this, _listbox2).options[optionName];\n    }\n\n    __privateGet(this, _listbox2).options[optionName] = newValue;\n  }\n\n  focus() {\n    __privateGet(this, _listbox2).focus();\n  }\n\n  bindMap(map) {\n    if (__privateGet(this, _map)) {\n      __privateGet(this, _map).off(\"moveend\", __privateGet(this, _handleMoveEnd));\n    }\n\n    if (map) {\n      map.on(\"moveend\", __privateGet(this, _handleMoveEnd));\n    }\n\n    __privateSet(this, _map, map);\n  }\n\n  unbindMap() {\n    this.bindMap(null);\n  }\n\n  onAdd(map) {\n    this.bindMap(map);\n    this.remove();\n    const container = document.createElement(\"div\");\n    container.className = \"mapboxgl-ctrl\";\n    container.style.width = \"300px\";\n    container.appendChild(this);\n    return container;\n  }\n\n  onRemove() {\n    this.remove();\n    this.unbindMap();\n  }\n\n  getDefaultPosition() {\n    return \"top-right\";\n  }\n\n};\n_search = new WeakMap();\n_session2 = new WeakMap();\n_map = new WeakMap();\n_input2 = new WeakMap();\n_listbox2 = new WeakMap();\n_handleSuggest3 = new WeakMap();\n_handleSuggestError3 = new WeakMap();\n_handleRetrieve2 = new WeakMap();\n_handleInput2 = new WeakMap();\n_handleMoveEnd = new WeakMap();\nMapboxSearchBox.observedAttributes = [\"access-token\", \"theme\", \"language\", \"country\", \"bbox\", \"limit\", \"navigation-profile\", \"origin\", \"proximity\", \"eta-type\", \"types\"];\nwindow.MapboxSearchBox = MapboxSearchBox;\n\nif (!window.customElements.get(\"mapbox-search-box\")) {\n  customElements.define(\"mapbox-search-box\", MapboxSearchBox);\n} // src/components/MapboxAddressMinimap.ts\n\n\nimport { LngLat } from \"@mapbox/search-js-core\"; // src/utils/minimap.ts\n\nimport SphericalMercator from \"@mapbox/sphericalmercator\";\nvar merc = new SphericalMercator({\n  size: 512,\n  antimeridian: true\n});\nvar MAX_IMAGE_DIM = 1280;\n\nfunction getAnchorOffset(marker, anchor) {\n  const {\n    width,\n    height\n  } = getElementSize(marker, true);\n\n  switch (anchor) {\n    case \"center\":\n      return [0, 0];\n\n    case \"top\":\n      return [0, height / 2];\n\n    case \"bottom\":\n      return [0, -1 * height / 2];\n\n    case \"left\":\n      return [width / 2, 0];\n\n    case \"right\":\n      return [-1 * width / 2, 0];\n\n    case \"top-left\":\n      return [width / 2, height / 2];\n\n    case \"top-right\":\n      return [-1 * width / 2, height / 2];\n\n    case \"bottom-left\":\n      return [width / 2, -1 * height / 2];\n\n    case \"bottom-right\":\n      return [-1 * width / 2, -1 * height / 2];\n  }\n}\n\nvar _anchor, _handleAnchorResize, _markerTransform, _isActive, _originalCoordinate, _onPointerDownMarker, _onPointerUpMarker, _onPointerMoveMarker, _onPointerDownImage, _onPointerUpImage, _onPointerMoveImage, _updatePointerPosition, _updateMarkerTransform;\n\nvar MarkerController = class {\n  constructor(imageContainer, marker, keepMarkerCentered, zoom, anchor) {\n    __privateAdd(this, _anchor, void 0);\n\n    __privateAdd(this, _handleAnchorResize, () => {\n      [this.anchorOffsetX, this.anchorOffsetY] = getAnchorOffset(this.markerElement, this.anchor);\n      this.markerTransform = {\n        anchorX: this.anchorOffsetX,\n        anchorY: this.anchorOffsetY\n      };\n    });\n\n    __privateAdd(this, _markerTransform, {\n      anchorX: 0,\n      anchorY: 0,\n      globalX: 0,\n      globalY: 0\n    });\n\n    __privateAdd(this, _isActive, false);\n\n    __privateAdd(this, _originalCoordinate, void 0);\n\n    __privateAdd(this, _onPointerDownMarker, m => {\n      if (!this.isActive) return;\n      m.preventDefault();\n      m.stopPropagation();\n\n      __privateGet(this, _updatePointerPosition).call(this, m);\n\n      window.addEventListener(\"pointermove\", __privateGet(this, _onPointerMoveMarker));\n      window.addEventListener(\"pointerup\", __privateGet(this, _onPointerUpMarker));\n    });\n\n    __privateAdd(this, _onPointerUpMarker, () => {\n      window.removeEventListener(\"pointermove\", __privateGet(this, _onPointerMoveMarker));\n      window.removeEventListener(\"pointerup\", __privateGet(this, _onPointerUpMarker));\n    });\n\n    __privateAdd(this, _onPointerMoveMarker, m => {\n      m.preventDefault();\n      m.stopPropagation();\n      const diffX = this.curPointerXPos - m.pageX;\n      const diffY = this.curPointerYPos - m.pageY;\n      this.markerDeltaX += diffX;\n      this.markerDeltaY -= diffY;\n      this.markerDeltaX = Math.max(Math.min(this.imgWidth / 2, this.markerDeltaX), this.imgWidth / 2 * -1);\n      this.markerDeltaY = Math.max(Math.min(this.imgHeight / 2, this.markerDeltaY), this.imgHeight / 2 * -1);\n      const imageOffsetX = this.imgCenterPx[0] - this.imgCenterAdjustedPx[0];\n      const imageOffsetY = this.imgCenterPx[1] - this.imgCenterAdjustedPx[1];\n      const deltaX = this.markerDeltaX - imageOffsetX;\n      const deltaY = this.markerDeltaY + imageOffsetY;\n      this.markerTransform = {\n        globalX: deltaX,\n        globalY: deltaY\n      };\n\n      __privateGet(this, _updatePointerPosition).call(this, m);\n    });\n\n    __privateAdd(this, _onPointerDownImage, m => {\n      if (!this.isActive) return;\n      m.preventDefault();\n      m.stopPropagation();\n\n      __privateGet(this, _updatePointerPosition).call(this, m);\n\n      window.addEventListener(\"pointermove\", __privateGet(this, _onPointerMoveImage));\n      window.addEventListener(\"pointerup\", __privateGet(this, _onPointerUpImage));\n    });\n\n    __privateAdd(this, _onPointerUpImage, () => {\n      window.removeEventListener(\"pointermove\", __privateGet(this, _onPointerMoveImage));\n      window.removeEventListener(\"pointerup\", __privateGet(this, _onPointerUpImage));\n    });\n\n    __privateAdd(this, _onPointerMoveImage, m => {\n      m.preventDefault();\n      let top = Math.round(this.imgContainerElement.scrollTop + (this.curPointerYPos - m.pageY));\n      top = Math.max(Math.min(this.imgHeight - this.imgContainerElement.clientHeight, top), 0);\n      let left = Math.round(this.imgContainerElement.scrollLeft + (this.curPointerXPos - m.pageX));\n      left = Math.max(Math.min(this.imgWidth - this.imgContainerElement.clientWidth, left), 0);\n      this.imgContainerElement.scrollTop = top;\n      this.imgContainerElement.scrollLeft = left;\n      const diffX = Math.round(left - (this.imgWidth - this.imgContainerElement.clientWidth) / 2);\n      const diffY = Math.round((this.imgHeight - this.imgContainerElement.clientHeight) / 2 - top);\n      this.imgCenterAdjustedPx = [this.imgCenterPx[0] + diffX, this.imgCenterPx[1] - diffY];\n\n      if (!this.keepMarkerCentered) {\n        const deltaX = this.markerDeltaX + diffX;\n        const deltaY = this.markerDeltaY + diffY;\n        this.markerTransform = {\n          globalX: deltaX,\n          globalY: deltaY\n        };\n      }\n\n      __privateGet(this, _updatePointerPosition).call(this, m);\n    });\n\n    __privateAdd(this, _updatePointerPosition, m => {\n      this.curPointerXPos = m.pageX;\n      this.curPointerYPos = m.pageY;\n    });\n\n    __privateAdd(this, _updateMarkerTransform, () => {\n      const {\n        anchorX,\n        anchorY,\n        globalX,\n        globalY\n      } = __privateGet(this, _markerTransform);\n\n      const transformX = anchorX - globalX;\n      const transformY = anchorY + globalY;\n      this.markerElement.style.transform = `translate(calc(-50% + ${transformX}px), calc(-50% + ${transformY}px))`;\n    });\n\n    this.reCenter = () => {\n      const top = (this.imgHeight - this.imgContainerElement.clientHeight) / 2;\n      const left = (this.imgWidth - this.imgContainerElement.clientWidth) / 2;\n      this.imgContainerElement.scrollTop = top;\n      this.imgContainerElement.scrollLeft = left;\n      this.imgCenterAdjustedPx = this.imgCenterPx;\n      this.markerDeltaX = this.markerDeltaY = 0;\n      this.markerTransform = {\n        globalX: 0,\n        globalY: 0\n      };\n    };\n\n    this.markerElement = marker;\n    this.imgContainerElement = imageContainer;\n    this.keepMarkerCentered = keepMarkerCentered;\n    this.zoom = zoom;\n    this.anchor = anchor;\n    this.curPointerXPos = 0;\n    this.curPointerYPos = 0;\n    this.markerDeltaX = 0;\n    this.markerDeltaY = 0;\n    this.imgContainerElement.addEventListener(\"pointerdown\", __privateGet(this, _onPointerDownImage));\n\n    if (!this.keepMarkerCentered) {\n      this.markerElement.addEventListener(\"pointerdown\", __privateGet(this, _onPointerDownMarker));\n    }\n\n    const resizeObserver = new ResizeObserver(__privateGet(this, _handleAnchorResize));\n    resizeObserver.observe(this.markerElement);\n  }\n\n  get anchor() {\n    return __privateGet(this, _anchor);\n  }\n\n  set anchor(newAnchor) {\n    __privateSet(this, _anchor, newAnchor);\n\n    [this.anchorOffsetX, this.anchorOffsetY] = getAnchorOffset(this.markerElement, newAnchor);\n    this.markerTransform = {\n      anchorX: this.anchorOffsetX,\n      anchorY: this.anchorOffsetY\n    };\n  }\n\n  get markerTransform() {\n    return __privateGet(this, _markerTransform);\n  }\n\n  set markerTransform(val) {\n    __privateSet(this, _markerTransform, __spreadValues(__spreadValues({}, __privateGet(this, _markerTransform)), val));\n\n    __privateGet(this, _updateMarkerTransform).call(this);\n  }\n\n  get isActive() {\n    return __privateGet(this, _isActive);\n  }\n\n  set isActive(val) {\n    this.imgContainerElement.style.touchAction = val ? \"none\" : \"\";\n\n    __privateSet(this, _isActive, val);\n  }\n\n  get imgHeight() {\n    return Math.min(this.imgContainerElement.clientHeight * 2, MAX_IMAGE_DIM);\n  }\n\n  get imgWidth() {\n    return Math.min(this.imgContainerElement.clientWidth * 2, MAX_IMAGE_DIM);\n  }\n\n  get coordinate() {\n    const adjustedPx = this.keepMarkerCentered ? this.imgCenterAdjustedPx : [this.imgCenterPx[0] - this.markerDeltaX, this.imgCenterPx[1] + this.markerDeltaY];\n\n    if (deepEquals(adjustedPx, this.imgCenterPx)) {\n      return __privateGet(this, _originalCoordinate);\n    } else {\n      const lngLat = merc.ll(adjustedPx, this.zoom);\n      return [round(lngLat[0], 6), round(lngLat[1], 6)];\n    }\n  }\n\n  set coordinate(lngLat) {\n    __privateSet(this, _originalCoordinate, lngLat);\n\n    this.imgCenterPx = this.imgCenterAdjustedPx = merc.px(lngLat, this.zoom);\n  }\n\n};\n_anchor = new WeakMap();\n_handleAnchorResize = new WeakMap();\n_markerTransform = new WeakMap();\n_isActive = new WeakMap();\n_originalCoordinate = new WeakMap();\n_onPointerDownMarker = new WeakMap();\n_onPointerUpMarker = new WeakMap();\n_onPointerMoveMarker = new WeakMap();\n_onPointerDownImage = new WeakMap();\n_onPointerUpImage = new WeakMap();\n_onPointerMoveImage = new WeakMap();\n_updatePointerPosition = new WeakMap();\n_updateMarkerTransform = new WeakMap(); // src/icons/mapboxgl-ctrl-logo.svg\n\nvar mapboxgl_ctrl_logo_default = '<svg width=\"88\" height=\"23\" viewBox=\"0 0 88 23\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" fill-rule=\"evenodd\">\\n    <defs>\\n        <path id=\"logo\" d=\"M11.5 2.25c5.105 0 9.25 4.145 9.25 9.25s-4.145 9.25-9.25 9.25-9.25-4.145-9.25-9.25 4.145-9.25 9.25-9.25zM6.997 15.983c-.051-.338-.828-5.802 2.233-8.873a4.395 4.395 0 013.13-1.28c1.27 0 2.49.51 3.39 1.42.91.9 1.42 2.12 1.42 3.39 0 1.18-.449 2.301-1.28 3.13C12.72 16.93 7 16 7 16l-.003-.017zM15.3 10.5l-2 .8-.8 2-.8-2-2-.8 2-.8.8-2 .8 2 2 .8z\" />\\n        <path id=\"text\" d=\"M50.63 8c.13 0 .23.1.23.23V9c.7-.76 1.7-1.18 2.73-1.18 2.17 0 3.95 1.85 3.95 4.17s-1.77 4.19-3.94 4.19c-1.04 0-2.03-.43-2.74-1.18v3.77c0 .13-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V8.23c0-.12.1-.23.23-.23h1.4zm-3.86.01c.01 0 .01 0 .01-.01.13 0 .22.1.22.22v7.55c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V15c-.7.76-1.69 1.19-2.73 1.19-2.17 0-3.94-1.87-3.94-4.19 0-2.32 1.77-4.19 3.94-4.19 1.03 0 2.02.43 2.73 1.18v-.75c0-.12.1-.23.23-.23h1.4zm26.375-.19a4.24 4.24 0 00-4.16 3.29c-.13.59-.13 1.19 0 1.77a4.233 4.233 0 004.17 3.3c2.35 0 4.26-1.87 4.26-4.19 0-2.32-1.9-4.17-4.27-4.17zM60.63 5c.13 0 .23.1.23.23v3.76c.7-.76 1.7-1.18 2.73-1.18 1.88 0 3.45 1.4 3.84 3.28.13.59.13 1.2 0 1.8-.39 1.88-1.96 3.29-3.84 3.29-1.03 0-2.02-.43-2.73-1.18v.77c0 .12-.1.23-.23.23h-1.4c-.13 0-.23-.1-.23-.23V5.23c0-.12.1-.23.23-.23h1.4zm-34 11h-1.4c-.13 0-.23-.11-.23-.23V8.22c.01-.13.1-.22.23-.22h1.4c.13 0 .22.11.23.22v.68c.5-.68 1.3-1.09 2.16-1.1h.03c1.09 0 2.09.6 2.6 1.55.45-.95 1.4-1.55 2.44-1.56 1.62 0 2.93 1.25 2.9 2.78l.03 5.2c0 .13-.1.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.8 0-1.46.7-1.59 1.62l.01 4.68c0 .13-.11.23-.23.23h-1.41c-.13 0-.23-.11-.23-.23v-4.59c0-.98-.74-1.71-1.62-1.71-.85 0-1.54.79-1.6 1.8v4.5c0 .13-.1.23-.23.23zm53.615 0h-1.61c-.04 0-.08-.01-.12-.03-.09-.06-.13-.19-.06-.28l2.43-3.71-2.39-3.65a.213.213 0 01-.03-.12c0-.12.09-.21.21-.21h1.61c.13 0 .24.06.3.17l1.41 2.37 1.4-2.37a.34.34 0 01.3-.17h1.6c.04 0 .08.01.12.03.09.06.13.19.06.28l-2.37 3.65 2.43 3.7c0 .05.01.09.01.13 0 .12-.09.21-.21.21h-1.61c-.13 0-.24-.06-.3-.17l-1.44-2.42-1.44 2.42a.34.34 0 01-.3.17zm-7.12-1.49c-1.33 0-2.42-1.12-2.42-2.51 0-1.39 1.08-2.52 2.42-2.52 1.33 0 2.42 1.12 2.42 2.51 0 1.39-1.08 2.51-2.42 2.52zm-19.865 0c-1.32 0-2.39-1.11-2.42-2.48v-.07c.02-1.38 1.09-2.49 2.4-2.49 1.32 0 2.41 1.12 2.41 2.51 0 1.39-1.07 2.52-2.39 2.53zm-8.11-2.48c-.01 1.37-1.09 2.47-2.41 2.47s-2.42-1.12-2.42-2.51c0-1.39 1.08-2.52 2.4-2.52 1.33 0 2.39 1.11 2.41 2.48l.02.08zm18.12 2.47c-1.32 0-2.39-1.11-2.41-2.48v-.06c.02-1.38 1.09-2.48 2.41-2.48s2.42 1.12 2.42 2.51c0 1.39-1.09 2.51-2.42 2.51z\" />\\n    </defs>\\n    <mask id=\"clip\">\\n        <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"white\" />\\n        <use xlink:href=\"#logo\" />\\n        <use xlink:href=\"#text\" />\\n    </mask>\\n\\n    <g id=\"outline\" opacity=\"0.3\" stroke=\"#000\" stroke-width=\"3\">\\n        <circle mask=\"url(#clip)\" cx=\"11.5\" cy=\"11.5\" r=\"9.25\" />\\n        <use xlink:href=\"#text\" mask=\"url(#clip)\" />\\n    </g>\\n    <g id=\"fill\" opacity=\"0.9\" fill=\"#fff\" >\\n        <use xlink:href=\"#logo\" />\\n        <use xlink:href=\"#text\" />\\n    </g>\\n</svg>\\n'; // src/components/MapboxAddressMinimap.ts\n\nvar ZOOM = 16;\nvar TEMPLATE6 = createElementFromString(`\n<template>\n  <div class=\"MapboxAddressMinimap\" aria-hidden=\"true\">\n    <div class=\"MinimapImageContainer\">\n      <img class=\"MinimapImage\" draggable=\"false\"></img>\n      <div class=\"MinimapInnerFrame\">\n        <div class=\"MinimapMarker\"></div>\n        <div class=\"MinimapAttribution\">\n          <div class=\"MinimapAttributionLogo\">\n            <a target=\"_blank\" rel=\"noopener nofollow\" href=\"https://www.mapbox.com/\" aria-label=\"Mapbox logo\">\n              ${mapboxgl_ctrl_logo_default}\n            </a>\n          </div>\n          <div class=\"MinimapAttributionText\">\n            <a target=\"_blank\" href='https://www.mapbox.com/about/maps/'>\\xA9 Mapbox</a><a target=\"_blank\" href='http://www.openstreetmap.org/copyright'>\\xA9 OpenStreetMap</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n`);\nvar STYLE_TOGGLE_TEMPLATE = createElementFromString(`\n<template>\n  <button type=\"button\" class=\"MinimapStyleToggle\"></button>\n</template>\n`);\nvar FOOTER_TEMPLATE = createElementFromString(`\n<template>\n  <div class=\"MinimapFooter\">Adjust the marker on the map if it doesn't precisely match your location. This helps your delivery reach you faster.</div>\n</template>\n`);\nvar EDIT_BUTTONS_TEMPLATE = createElementFromString(`\n<template>\n  <div class=\"MinimapEditButtons\">\n    <div class=\"Button ButtonPrimary MinimapButtonAdjust\">Adjust pin</div>\n    <div class=\"Button ButtonPrimary MinimapButtonSave\" aria-hidden=\"true\">Save</div>\n    <div class=\"Button MinimapButtonCancel\" aria-hidden=\"true\">Cancel</div>\n  </div>\n</template>\n`);\n\nvar _canAdjustMarkerInternal, _isAdjustMarkerEditing, _imageLoaded, _feature2, _url, _width, _height, _binding5, _markerController, _accessToken, _themeInternal5, _satelliteToggleInternal, _mapStyleMode, _defaultMapStyle, _container, _toggleMarkerEditing, _handleStartMarkerEditing, _handleSaveMarkerEditing, _handleCancelMarkerEditing, _handleToggleMapStyle, _handleImageLoad, _handleImageError, _getImageUrl, _updateImageSrc, _getToggleBackgroundImageUrl, _setSize, _addMarkerEditControls, _removeMarkerEditControls, _addSatelliteToggle, _removeSatelliteToggle;\n\nvar MapboxAddressMinimap = class extends HTMLScopedElement {\n  constructor() {\n    super(...arguments);\n\n    __privateAdd(this, _canAdjustMarkerInternal, false);\n\n    this.keepMarkerCentered = false;\n    this.markerAnchor = \"bottom\";\n\n    __privateAdd(this, _isAdjustMarkerEditing, false);\n\n    __privateAdd(this, _imageLoaded, false);\n\n    __privateAdd(this, _feature2, void 0);\n\n    __privateAdd(this, _url, \"\");\n\n    __privateAdd(this, _width, void 0);\n\n    __privateAdd(this, _height, void 0);\n\n    __privateAdd(this, _binding5, void 0);\n\n    __privateAdd(this, _markerController, void 0);\n\n    __privateAdd(this, _accessToken, void 0);\n\n    __privateAdd(this, _themeInternal5, {});\n\n    __privateAdd(this, _satelliteToggleInternal, false);\n\n    __privateAdd(this, _mapStyleMode, \"default\");\n\n    __privateAdd(this, _defaultMapStyle, [\"mapbox\", \"streets-v11\"]);\n\n    __privateAdd(this, _container, void 0);\n\n    __privateAdd(this, _toggleMarkerEditing, () => {\n      const {\n        ImageContainer,\n        ButtonAdjust,\n        ButtonSave,\n        ButtonCancel\n      } = __privateGet(this, _binding5);\n\n      if (__privateGet(this, _isAdjustMarkerEditing)) {\n        ImageContainer.classList.add(`${this.dataset.seed}--draggable`);\n        __privateGet(this, _markerController).isActive = true;\n        ButtonAdjust.setAttribute(\"aria-hidden\", \"true\");\n        ButtonSave.removeAttribute(\"aria-hidden\");\n        ButtonCancel.removeAttribute(\"aria-hidden\");\n      } else {\n        ImageContainer.classList.remove(`${this.dataset.seed}--draggable`);\n        __privateGet(this, _markerController).isActive = false;\n        ButtonAdjust.removeAttribute(\"aria-hidden\");\n        ButtonSave.setAttribute(\"aria-hidden\", \"true\");\n        ButtonCancel.setAttribute(\"aria-hidden\", \"true\");\n      }\n    });\n\n    __privateAdd(this, _handleStartMarkerEditing, () => {\n      __privateSet(this, _isAdjustMarkerEditing, true);\n\n      __privateGet(this, _toggleMarkerEditing).call(this);\n    });\n\n    __privateAdd(this, _handleSaveMarkerEditing, () => {\n      if (this.feature.properties.full_address && !deepEquals(this.feature.geometry.coordinates, __privateGet(this, _markerController).coordinate)) {\n        const [lng, lat] = __privateGet(this, _markerController).coordinate;\n\n        sendFeedback(this.accessToken, {\n          originalCoordinate: this.feature.geometry.coordinates,\n          originalAddress: this.feature.properties.full_address,\n          changes: {\n            location: {\n              longitude: lng,\n              latitude: lat\n            }\n          }\n        });\n      }\n\n      if (this.onSaveMarkerLocation) {\n        this.onSaveMarkerLocation(__privateGet(this, _markerController).coordinate);\n      }\n\n      __privateSet(this, _isAdjustMarkerEditing, false);\n\n      __privateGet(this, _toggleMarkerEditing).call(this);\n    });\n\n    __privateAdd(this, _handleCancelMarkerEditing, () => {\n      __privateGet(this, _markerController).reCenter();\n\n      __privateSet(this, _isAdjustMarkerEditing, false);\n\n      __privateGet(this, _toggleMarkerEditing).call(this);\n    });\n\n    __privateAdd(this, _handleToggleMapStyle, () => {\n      this.mapStyleMode = this.mapStyleMode === \"default\" ? \"satellite\" : \"default\";\n    });\n\n    __privateAdd(this, _handleImageLoad, () => {\n      if (!__privateGet(this, _imageLoaded)) {\n        __privateGet(this, _markerController).reCenter();\n      }\n\n      __privateSet(this, _imageLoaded, true);\n    });\n\n    __privateAdd(this, _handleImageError, () => {\n      __privateSet(this, _imageLoaded, false);\n    });\n\n    __privateAdd(this, _getImageUrl, lngLatLike => {\n      if (__privateGet(this, _width) === 0 || __privateGet(this, _height) === 0) return \"\";\n      const [username, styleId] = this.defaultMapStyle;\n      const defaultBaseUrl = getStaticBaseUrl(username, styleId);\n      const baseUrl = this.mapStyleMode === \"default\" ? defaultBaseUrl : STATIC_BASE_URL_SATELLITE;\n      const skuToken = AUTOFILL_SKU_TOKEN_PREFIX + config.autofillSessionToken.toString();\n      let imgUrl = baseUrl + LngLat.convert(lngLatLike).toArray().join(\",\") + \",\" + ZOOM + \",0/\" + Math.min(__privateGet(this, _width) * 2, MAX_IMAGE_DIM) + \"x\" + Math.min(__privateGet(this, _height) * 2, MAX_IMAGE_DIM) + \"?access_token=\" + this.accessToken + \"&attribution=false&logo=false\";\n\n      if (config.autofillSessionEnabled) {\n        imgUrl += `&sku=${skuToken}`;\n      }\n\n      return imgUrl;\n    });\n\n    __privateAdd(this, _updateImageSrc, () => {\n      if (__privateGet(this, _feature2)) {\n        const lngLat = __privateGet(this, _feature2).geometry.coordinates;\n\n        __privateSet(this, _url, __privateGet(this, _getImageUrl).call(this, lngLat));\n\n        const {\n          Image\n        } = __privateGet(this, _binding5);\n\n        Image.src = __privateGet(this, _url);\n      }\n    });\n\n    __privateAdd(this, _getToggleBackgroundImageUrl, styleMode => {\n      return `url(\"${getImage(styleMode === \"default\" ? \"styleToggleDefault\" : \"styleToggleSatellite\", this.theme)}\")`;\n    });\n\n    __privateAdd(this, _setSize, () => {\n      const {\n        MapboxAddressMinimap: MapboxAddressMinimap2,\n        ImageContainer\n      } = __privateGet(this, _binding5);\n\n      const {\n        width,\n        height\n      } = getElementSize(this.container);\n\n      __privateSet(this, _width, Math.min(width, MAX_IMAGE_DIM));\n\n      __privateSet(this, _height, Math.min(height, MAX_IMAGE_DIM));\n\n      MapboxAddressMinimap2.style.setProperty(\"width\", `${__privateGet(this, _width)}px`);\n      ImageContainer.style.setProperty(\"height\", `${__privateGet(this, _height)}px`);\n      ImageContainer.style.setProperty(\"width\", `${__privateGet(this, _width)}px`);\n\n      __privateGet(this, _updateImageSrc).call(this);\n    });\n\n    __privateAdd(this, _addMarkerEditControls, () => {\n      const existingFooter = this.querySelector(\".MinimapFooter\");\n      if (existingFooter) return;\n      const footerElement = this.prepareTemplate(FOOTER_TEMPLATE);\n      const minimapElement = this.querySelector(\".MapboxAddressMinimap\");\n      if (!minimapElement) return;\n      minimapElement.appendChild(footerElement);\n      const existingEditBtns = this.querySelector(\".MinimapEditButtons\");\n      if (existingEditBtns) return;\n      const editButtonsElement = this.prepareTemplate(EDIT_BUTTONS_TEMPLATE);\n      const innerFrame = this.querySelector(\".MinimapInnerFrame\");\n      innerFrame.appendChild(editButtonsElement);\n\n      __privateSet(this, _binding5, __spreadProps(__spreadValues({}, __privateGet(this, _binding5)), {\n        EditButtons: this.querySelector(\".MinimapEditButtons\"),\n        ButtonAdjust: this.querySelector(\".MinimapButtonAdjust\"),\n        ButtonSave: this.querySelector(\".MinimapButtonSave\"),\n        ButtonCancel: this.querySelector(\".MinimapButtonCancel\")\n      }));\n\n      const {\n        ButtonAdjust,\n        ButtonSave,\n        ButtonCancel\n      } = __privateGet(this, _binding5);\n\n      ButtonAdjust.addEventListener(\"click\", __privateGet(this, _handleStartMarkerEditing));\n      ButtonSave.addEventListener(\"click\", __privateGet(this, _handleSaveMarkerEditing));\n      ButtonCancel.addEventListener(\"click\", __privateGet(this, _handleCancelMarkerEditing));\n    });\n\n    __privateAdd(this, _removeMarkerEditControls, () => {\n      if (!__privateGet(this, _binding5)) return;\n\n      const {\n        EditButtons,\n        ButtonAdjust,\n        ButtonSave,\n        ButtonCancel\n      } = __privateGet(this, _binding5);\n\n      const existingFooter = this.querySelector(\".MinimapFooter\");\n      existingFooter == null ? void 0 : existingFooter.remove();\n      EditButtons == null ? void 0 : EditButtons.remove();\n\n      if (ButtonAdjust) {\n        ButtonAdjust.remove();\n        ButtonAdjust.removeEventListener(\"click\", __privateGet(this, _handleStartMarkerEditing));\n      }\n\n      if (ButtonSave) {\n        ButtonSave.remove();\n        ButtonSave.removeEventListener(\"click\", __privateGet(this, _handleSaveMarkerEditing));\n      }\n\n      if (ButtonCancel) {\n        ButtonCancel.remove();\n        ButtonCancel.removeEventListener(\"click\", __privateGet(this, _handleCancelMarkerEditing));\n      }\n\n      delete __privateGet(this, _binding5).EditButtons;\n      delete __privateGet(this, _binding5).ButtonAdjust;\n      delete __privateGet(this, _binding5).ButtonSave;\n      delete __privateGet(this, _binding5).ButtonCancel;\n    });\n\n    __privateAdd(this, _addSatelliteToggle, () => {\n      const existingToggle = this.querySelector(\".MinimapStyleToggle\");\n      if (existingToggle) return;\n      const toggleElement = this.prepareTemplate(STYLE_TOGGLE_TEMPLATE);\n      const innerFrame = this.querySelector(\".MinimapInnerFrame\");\n      if (!innerFrame) return;\n      innerFrame.appendChild(toggleElement);\n      __privateGet(this, _binding5).MapStyleToggle = toggleElement;\n      toggleElement.addEventListener(\"click\", __privateGet(this, _handleToggleMapStyle));\n      toggleElement.style.backgroundImage = __privateGet(this, _getToggleBackgroundImageUrl).call(this, this.mapStyleMode === \"default\" ? \"satellite\" : \"default\");\n      toggleElement.setAttribute(\"title\", `Switch to ${this.mapStyleMode === \"default\" ? \"Satellite\" : \"Default\"}`);\n    });\n\n    __privateAdd(this, _removeSatelliteToggle, () => {\n      if (!__privateGet(this, _binding5)) return;\n\n      const {\n        MapStyleToggle\n      } = __privateGet(this, _binding5);\n\n      if (!MapStyleToggle) return;\n      MapStyleToggle.remove();\n      MapStyleToggle.removeEventListener(\"click\", __privateGet(this, _handleToggleMapStyle));\n      delete __privateGet(this, _binding5).MapStyleToggle;\n    });\n  }\n\n  get canAdjustMarker() {\n    return __privateGet(this, _canAdjustMarkerInternal);\n  }\n\n  set canAdjustMarker(val) {\n    __privateSet(this, _canAdjustMarkerInternal, val);\n\n    val ? __privateGet(this, _addMarkerEditControls).call(this) : __privateGet(this, _removeMarkerEditControls).call(this);\n  }\n\n  get accessToken() {\n    return __privateGet(this, _accessToken) || config.accessToken;\n  }\n\n  set accessToken(newToken) {\n    __privateSet(this, _accessToken, newToken);\n  }\n\n  get feature() {\n    return __privateGet(this, _feature2);\n  }\n\n  set feature(feature) {\n    __privateSet(this, _feature2, feature);\n\n    if (!feature) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  get template() {\n    return TEMPLATE6;\n  }\n\n  get templateStyle() {\n    return style_default;\n  }\n\n  get templateUserStyle() {\n    return getThemeCSS(\".MapboxAddressMinimap\", this.theme);\n  }\n\n  get satelliteToggle() {\n    return __privateGet(this, _satelliteToggleInternal);\n  }\n\n  set satelliteToggle(val) {\n    __privateSet(this, _satelliteToggleInternal, val);\n\n    val ? __privateGet(this, _addSatelliteToggle).call(this) : __privateGet(this, _removeSatelliteToggle).call(this);\n  }\n\n  get theme() {\n    return __privateGet(this, _themeInternal5);\n  }\n\n  set theme(theme) {\n    __privateSet(this, _themeInternal5, theme);\n\n    if (!__privateGet(this, _binding5) || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(getThemeCSS(\".MapboxAddressMinimap\", theme));\n\n    const {\n      Marker,\n      MapStyleToggle\n    } = __privateGet(this, _binding5);\n\n    Marker.innerHTML = getIcon(\"marker\", theme);\n\n    if (MapStyleToggle) {\n      MapStyleToggle.style.backgroundImage = __privateGet(this, _getToggleBackgroundImageUrl).call(this, this.mapStyleMode === \"default\" ? \"satellite\" : \"default\");\n    }\n  }\n\n  get mapStyleMode() {\n    return __privateGet(this, _mapStyleMode);\n  }\n\n  set mapStyleMode(styleMode) {\n    const prevStyleMode = __privateGet(this, _mapStyleMode);\n\n    __privateSet(this, _mapStyleMode, styleMode);\n\n    if (!__privateGet(this, _binding5)) {\n      return;\n    }\n\n    const {\n      MapStyleToggle\n    } = __privateGet(this, _binding5);\n\n    if (!MapStyleToggle) {\n      return;\n    }\n\n    MapStyleToggle.style.backgroundImage = __privateGet(this, _getToggleBackgroundImageUrl).call(this, prevStyleMode);\n    MapStyleToggle.setAttribute(\"title\", `Switch to ${prevStyleMode === \"satellite\" ? \"Satellite\" : \"Default\"}`);\n\n    __privateGet(this, _updateImageSrc).call(this);\n  }\n\n  get defaultMapStyle() {\n    return __privateGet(this, _defaultMapStyle);\n  }\n\n  set defaultMapStyle(style) {\n    __privateSet(this, _defaultMapStyle, style);\n\n    __privateGet(this, _updateImageSrc).call(this);\n  }\n\n  get container() {\n    return __privateGet(this, _container);\n  }\n\n  set container(newContainer) {\n    if (newContainer) {\n      newContainer.style.position = \"relative\";\n\n      __privateSet(this, _container, newContainer);\n    }\n  }\n\n  show() {\n    if (!__privateGet(this, _feature2)) {\n      return;\n    }\n\n    const lngLat = __privateGet(this, _feature2).geometry.coordinates;\n\n    __privateGet(this, _markerController).coordinate = lngLat;\n\n    __privateSet(this, _url, __privateGet(this, _getImageUrl).call(this, lngLat));\n\n    const {\n      MapboxAddressMinimap: MapboxAddressMinimap2,\n      Image\n    } = __privateGet(this, _binding5);\n\n    Image.src = __privateGet(this, _url);\n    MapboxAddressMinimap2.removeAttribute(\"aria-hidden\");\n  }\n\n  hide() {\n    const {\n      MapboxAddressMinimap: MapboxAddressMinimap2\n    } = __privateGet(this, _binding5);\n\n    MapboxAddressMinimap2.setAttribute(\"aria-hidden\", \"true\");\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    __privateSet(this, _binding5, bindElements(this, {\n      MapboxAddressMinimap: \".MapboxAddressMinimap\",\n      ImageContainer: \".MinimapImageContainer\",\n      Image: \".MinimapImage\",\n      Marker: \".MinimapMarker\",\n      MapStyleToggle: \".MinimapStyleToggle\",\n      EditButtons: \".MinimapEditButtons\",\n      ButtonAdjust: \".MinimapButtonAdjust\",\n      ButtonSave: \".MinimapButtonSave\",\n      ButtonCancel: \".MinimapButtonCancel\"\n    }));\n\n    this.mapStyleMode = __privateGet(this, _mapStyleMode);\n    this.theme = __spreadValues({}, this.theme);\n\n    if (this.canAdjustMarker) {\n      __privateGet(this, _addMarkerEditControls).call(this);\n    }\n\n    if (this.satelliteToggle) {\n      __privateGet(this, _addSatelliteToggle).call(this);\n    }\n\n    this.container = this.parentElement;\n    const resizeObserver = new ResizeObserver(__privateGet(this, _setSize));\n    resizeObserver.observe(this.container);\n\n    __privateGet(this, _setSize).call(this);\n\n    const {\n      MapboxAddressMinimap: MapboxAddressMinimap2,\n      ImageContainer,\n      Image,\n      Marker\n    } = __privateGet(this, _binding5);\n\n    __privateSet(this, _markerController, new MarkerController(ImageContainer, Marker, this.keepMarkerCentered, ZOOM, this.markerAnchor));\n\n    __privateGet(this, _markerController).reCenter();\n\n    Image.onload = __privateGet(this, _handleImageLoad);\n    Image.onerror = __privateGet(this, _handleImageError);\n    Image.src = __privateGet(this, _url);\n    if (__privateGet(this, _feature2)) MapboxAddressMinimap2.removeAttribute(\"aria-hidden\");else MapboxAddressMinimap2.setAttribute(\"aria-hidden\", \"true\");\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === \"access-token\") {\n      this.accessToken = newValue;\n    } else if (name === \"can-adjust-marker\") {\n      this.canAdjustMarker = newValue === \"true\";\n    } else if (name === \"keep-marker-centered\") {\n      this.keepMarkerCentered = newValue === \"true\";\n    } else if (name === \"marker-anchor\") {\n      const newAnchor = newValue;\n      this.markerAnchor = newAnchor;\n      __privateGet(this, _markerController) && (__privateGet(this, _markerController).anchor = newAnchor);\n    } else if (name === \"satellite-toggle\") {\n      this.satelliteToggle = newValue === \"true\";\n    }\n  }\n\n};\n_canAdjustMarkerInternal = new WeakMap();\n_isAdjustMarkerEditing = new WeakMap();\n_imageLoaded = new WeakMap();\n_feature2 = new WeakMap();\n_url = new WeakMap();\n_width = new WeakMap();\n_height = new WeakMap();\n_binding5 = new WeakMap();\n_markerController = new WeakMap();\n_accessToken = new WeakMap();\n_themeInternal5 = new WeakMap();\n_satelliteToggleInternal = new WeakMap();\n_mapStyleMode = new WeakMap();\n_defaultMapStyle = new WeakMap();\n_container = new WeakMap();\n_toggleMarkerEditing = new WeakMap();\n_handleStartMarkerEditing = new WeakMap();\n_handleSaveMarkerEditing = new WeakMap();\n_handleCancelMarkerEditing = new WeakMap();\n_handleToggleMapStyle = new WeakMap();\n_handleImageLoad = new WeakMap();\n_handleImageError = new WeakMap();\n_getImageUrl = new WeakMap();\n_updateImageSrc = new WeakMap();\n_getToggleBackgroundImageUrl = new WeakMap();\n_setSize = new WeakMap();\n_addMarkerEditControls = new WeakMap();\n_removeMarkerEditControls = new WeakMap();\n_addSatelliteToggle = new WeakMap();\n_removeSatelliteToggle = new WeakMap();\nMapboxAddressMinimap.observedAttributes = [\"access-token\", \"can-adjust-marker\", \"keep-marker-centered\", \"marker-anchor\", \"satellite-toggle\"];\nwindow.MapboxAddressMinimap = MapboxAddressMinimap;\n\nif (!window.customElements.get(\"mapbox-address-minimap\")) {\n  customElements.define(\"mapbox-address-minimap\", MapboxAddressMinimap);\n} // src/autofill.ts\n\n\nimport { Evented, MapboxAutofill as MapboxAutofill3, SearchSession as SearchSession3 } from \"@mapbox/search-js-core\";\n\nvar _input3, _collection, _handleSuggest4, _handleSuggestError4, _handleRetrieve3;\n\nvar AutofillInstance = class {\n  constructor(collection, input, autofillRef) {\n    __privateAdd(this, _input3, void 0);\n\n    __privateAdd(this, _collection, void 0);\n\n    this.listbox = new MapboxSearchListbox();\n\n    __privateAdd(this, _handleSuggest4, e => {\n      __privateGet(this, _collection).fire(\"suggest\", e.clone(__privateGet(this, _input3)));\n    });\n\n    __privateAdd(this, _handleSuggestError4, e => {\n      __privateGet(this, _collection).fire(\"suggesterror\", e.clone(__privateGet(this, _input3)));\n    });\n\n    __privateAdd(this, _handleRetrieve3, e => {\n      __privateGet(this, _collection).fire(\"retrieve\", e.clone(__privateGet(this, _input3)));\n\n      if (!__privateGet(this, _input3)) {\n        return;\n      }\n\n      const featureCollection = e.detail;\n\n      if (!featureCollection || !featureCollection.features || !featureCollection.features.length) {\n        return;\n      }\n\n      fillFormWithFeature(featureCollection.features[0], __privateGet(this, _input3));\n    });\n\n    __privateSet(this, _input3, input);\n\n    __privateSet(this, _collection, collection);\n\n    this.listbox.input = __privateGet(this, _input3);\n    this.listbox.session = new SearchSession3(autofillRef);\n    this.listbox.session.sessionToken = config.autofillSessionToken;\n    this.listbox.addEventListener(\"suggest\", __privateGet(this, _handleSuggest4));\n    this.listbox.addEventListener(\"suggesterror\", __privateGet(this, _handleSuggestError4));\n    this.listbox.addEventListener(\"retrieve\", __privateGet(this, _handleRetrieve3));\n    document.body.appendChild(this.listbox);\n  }\n\n  remove() {\n    this.listbox.remove();\n    this.listbox.removeEventListener(\"suggest\", __privateGet(this, _handleSuggest4));\n    this.listbox.removeEventListener(\"suggesterror\", __privateGet(this, _handleSuggestError4));\n    this.listbox.removeEventListener(\"retrieve\", __privateGet(this, _handleRetrieve3));\n  }\n\n};\n_input3 = new WeakMap();\n_collection = new WeakMap();\n_handleSuggest4 = new WeakMap();\n_handleSuggestError4 = new WeakMap();\n_handleRetrieve3 = new WeakMap();\n\nvar _currentInputs, _autofill2, _options, _theme, _handleObserve2, _observer2;\n\nvar AutofillCollection = class extends Evented {\n  constructor(_ref) {\n    let {\n      accessToken,\n      options,\n      theme\n    } = _ref;\n    super();\n    this.instances = [];\n\n    __privateAdd(this, _currentInputs, void 0);\n\n    __privateAdd(this, _autofill2, new MapboxAutofill3());\n\n    __privateAdd(this, _options, void 0);\n\n    __privateAdd(this, _theme, void 0);\n\n    __privateAdd(this, _handleObserve2, () => {\n      if (!deepEquals(findAddressInputs(), __privateGet(this, _currentInputs))) {\n        this.update();\n      }\n    });\n\n    __privateAdd(this, _observer2, new MutationObserver(__privateGet(this, _handleObserve2)));\n\n    config.autofillSessionEnabled = true;\n    this.accessToken = accessToken || config.accessToken;\n    options && (this.options = options);\n    theme && (this.theme = theme);\n    this.update();\n  }\n\n  get accessToken() {\n    return __privateGet(this, _autofill2).accessToken;\n  }\n\n  set accessToken(newToken) {\n    __privateGet(this, _autofill2).accessToken = newToken;\n  }\n\n  get options() {\n    return __privateGet(this, _options);\n  }\n\n  set options(newOptions) {\n    __privateSet(this, _options, __spreadValues(__spreadValues({}, __privateGet(this, _options)), newOptions));\n\n    this.instances.forEach(instance => {\n      instance.listbox.options = __spreadValues(__spreadValues({}, instance.listbox.options), newOptions);\n    });\n  }\n\n  get theme() {\n    return __privateGet(this, _theme);\n  }\n\n  set theme(newTheme) {\n    __privateSet(this, _theme, newTheme);\n\n    this.instances.forEach(instance => {\n      instance.listbox.theme = newTheme;\n    });\n  }\n\n  update() {\n    this.instances.forEach(instance => {\n      instance.remove();\n    });\n\n    __privateSet(this, _currentInputs, findAddressInputs());\n\n    this.instances = [];\n\n    __privateGet(this, _currentInputs).forEach(input => {\n      const autofillInstance = new AutofillInstance(this, input, __privateGet(this, _autofill2));\n      autofillInstance.listbox.options = this.options;\n      autofillInstance.listbox.theme = this.theme;\n      this.instances.push(autofillInstance);\n    });\n  }\n\n  observe() {\n    __privateGet(this, _observer2).observe(document, {\n      subtree: true,\n      childList: true\n    });\n\n    __privateGet(this, _handleObserve2).call(this);\n  }\n\n  unobserve() {\n    __privateGet(this, _observer2).disconnect();\n  }\n\n};\n_currentInputs = new WeakMap();\n_autofill2 = new WeakMap();\n_options = new WeakMap();\n_theme = new WeakMap();\n_handleObserve2 = new WeakMap();\n_observer2 = new WeakMap();\n\nfunction autofill(optionsArg) {\n  const {\n    accessToken,\n    options\n  } = optionsArg;\n  return new AutofillCollection({\n    accessToken,\n    options\n  });\n} // src/confirmAddress.ts\n\n\nimport { featureToSuggestion as featureToSuggestion3 } from \"@mapbox/search-js-core\";\nvar confirmation = new MapboxAddressConfirmation();\n\nfunction confirmAddress(_0) {\n  return __async(this, arguments, function* (form) {\n    let optionsArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      sections = []\n    } = optionsArg;\n\n    if (!confirmation.parentNode) {\n      document.body.appendChild(confirmation);\n    }\n\n    let collectedResult = {\n      type: \"nochange\"\n    };\n    const inputs = findAddressInputs(form);\n    const structure = parseFormStructure(form);\n    const listboxComponents = Array.from(document.querySelectorAll(\"mapbox-search-listbox\"));\n\n    for (const input of inputs) {\n      if (sections.length) {\n        const structureRef = structure.find(s => s.input === input);\n\n        if (!structureRef) {\n          continue;\n        }\n\n        if (!sections.includes(structureRef.section)) {\n          continue;\n        }\n      }\n\n      const autofillValues = getFormAutofillValues(form, input);\n      const listbox = listboxComponents.find(lb => lb.input === input);\n\n      if (listbox) {\n        const lastRetrievedFeature = listbox.retrieveFeature;\n\n        if (lastRetrievedFeature) {\n          const snapshot = featureToAutofillValueMap(lastRetrievedFeature);\n\n          if (!checkAutofillValuesChanged(autofillValues, snapshot)) {\n            continue;\n          }\n        }\n      }\n\n      const accessToken = optionsArg.accessToken || config.accessToken;\n      const result = yield confirmation.tryShow(autofillValues, __spreadProps(__spreadValues({}, optionsArg), {\n        accessToken\n      }));\n\n      if (result.type === \"change\") {\n        input.dataset[\"mapboxSuccess\"] = \"true\";\n        const suggestion = featureToSuggestion3(result.feature);\n        setFormAutofillValues(form, input, suggestion);\n\n        if (listbox) {\n          listbox.retrieveFeature = result.feature;\n        }\n      }\n\n      if (result.type === \"change\" && collectedResult.type !== \"cancel\") {\n        collectedResult = result;\n      }\n\n      if (result.type === \"cancel\") {\n        collectedResult = result;\n      }\n    }\n\n    return collectedResult;\n  });\n}\n\nexport { MapboxAddressAutofill, MapboxAddressConfirmation, MapboxAddressMinimap, MapboxHTMLEvent, MapboxSearchBox, autofill, config, confirmAddress, getAutofillSearchText, getFormAutofillValues };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,8D;;ACGA,IAAMA,SAASC,SAASC,cAAT,CAAwBC,kBAAxB,EAAf;;AAEO,sBAELC,IAFK,EAEUC,QAFV,EAEiE;EACtE,MAAMC,UAAmB,EAAzB;;EACA,WAAW,CAACC,GAAD,EAAMC,QAAN,CAAX,IAA8BC,OAAOC,OAAP,CAAeL,QAAf,CAA9B,EAAwD;IACtDC,QAAQC,GAAR,IAAgCH,KAAKO,aAAL,CAAmBH,QAAnB,CAAhC;EAAmD;;EAGrD,OAAOF,OAAP;AAAO;;AAMF,0BAA0BM,IAA1B,EAAqD;EAC1D,OAAOC,MAAMC,IAAN,CAAWF,KAAKG,UAAL,IAAmB,EAA9B,EAAkCC,MAAlC,CACJC,EAAD,IAAQA,GAAGC,QAAH,KAAgBC,KAAKC,YADxB,CAAP;AAC+B;;AAO1B,iCACLC,SADK,EAEF;EACH,MAAMC,WAAWrB,SAASsB,aAAT,CAAuB,UAAvB,CAAjB;EACAD,SAASD,SAAT,GAAqBA,SAArB;EACA,OAAOC,SAASE,OAAT,CAAiBC,iBAAxB;AAAwB;;AAUnB,6BAA6BC,IAA7B,EAA0D;EAC/D,MAAMC,QAAQ3B,OAAOuB,aAAP,CAAqB,OAArB,CAAd;EACAI,MAAMC,WAAN,GAAoBF,IAApB;EACA1B,OAAO6B,IAAP,CAAYC,WAAZ,CAAwBH,KAAxB;EACA,OAAOA,MAAMI,KAAb;AAAa;;AAQR,mBAAmBC,OAAnB,EAAkD;EACvD,MAAML,QAAQM,OAAOC,gBAAP,CAAwBF,OAAxB,CAAd;EACA,OAAOL,MAAMQ,OAAN,KAAkB,MAAzB;AAAyB;;AA8BpB,kBACLC,KADK,EAELC,KAFK,EAGC;EACN,IAAI,CAACD,KAAL,EAAY;IACV;EAAA;;EAGF,MAAME,MAAM7B,OAAO8B,wBAAP,CACVH,MAAMI,WAAN,CAAkBC,SADR,EAEV,OAFU,EAGVH,GAHF;EAIAA,IAAII,IAAJ,CAASN,KAAT,EAAgBC,KAAhB;EAGA,MAAMM,eAAeP,KAArB;;EACA,IAAIO,aAAaC,aAAjB,EAAgC;IAC9BD,aAAaC,aAAb,CAA2BC,QAA3B,CAAoC,EAApC;EAAoC;;EAGtC,MAAMC,eAAe,IAAIC,KAAJ,CAAU,OAAV,EAAmB;IACtCC,SAAS;EAD6B,CAAnB,CAArB;EAGAF,aAAaG,SAAb,GAAyB,IAAzB;EAEAb,MAAMc,aAAN,CAAoBJ,YAApB;EAEA,MAAMK,gBAAgB,IAAIJ,KAAJ,CAAU,QAAV,EAAoB;IACxCC,SAAS;EAD+B,CAApB,CAAtB;EAGAG,cAAcF,SAAd,GAA0B,IAA1B;EAEAb,MAAMc,aAAN,CAAoBC,aAApB;AAAoB;;AASf,wBACLnB,OADK,EAML;EAAA,IAJAoB,IAIA,uEAJO,KAIP;EACA,IAAIC,KAAJ;EACA,IAAIC,MAAJ;EACA,MAAMC,cAAcvB,QAAQwB,qBAAR,EAApB;;EACA,IACExB,QAAQL,KAAR,CAAcQ,OAAd,KAA0B,MAA1B,IACCoB,YAAYD,MAAZ,KAAuB,CAAvB,IAA4BC,YAAYF,KAAZ,KAAsB,CAFrD,EAGE;IACA,MAAMI,QAAQzB,QAAQ0B,SAAR,CAAkBN,IAAlB,CAAd;IACApB,QAAQ2B,aAAR,CAAsB7B,WAAtB,CAAkC2B,KAAlC;IACAA,MAAM9B,KAAN,CAAYiC,WAAZ,CAAwB,SAAxB,EAAmC,OAAnC,EAA4C,WAA5C;IACA,MAAMC,YAAYJ,MAAMD,qBAAN,EAAlB;IACAH,QAAQQ,UAAUR,KAAlB;IACAC,SAASO,UAAUP,MAAnB;IACAG,MAAM9B,KAAN,CAAYiC,WAAZ,CAAwB,SAAxB,EAAmC,MAAnC;IACAH,MAAMK,MAAN;EAAM,CAXR,MAYO;IACLT,QAAQE,YAAYF,KAApB;IACAC,SAASC,YAAYD,MAArB;EAAqB;;EAEvB,OAAO;IACLA,QAAQS,KAAKC,KAAL,CAAWV,MAAX,CADH;IAELD,OAAOU,KAAKC,KAAL,CAAWX,KAAX;EAFF,CAAP;AAEoB,C;;;AC7ItB,IAAMY,mBAAmB,IAAIC,MAAJ,CAAW,0BAAX,EAAuC,GAAvC,CAAzB;AACA,IAAMC,mBAAmB,IAAID,MAAJ,CAAW,MAAMD,iBAAiBG,QAAlC,EAA4C,GAA5C,CAAzB;AASA,IAAMC,uBAAuB,IAAIH,MAAJ,CAC3B,4CAD2B,CAA7B;;AAIO,iCACLI,GADK,EAELC,SAFK,EAGG;EACR,OAAOD,IAAIE,OAAJ,CAAYL,gBAAZ,EAA+BM,SAAD,IAAuB;IAC1D,OAAO,MAAMF,UAAUE,UAAUC,KAAV,CAAgB,CAAhB,CAAV,CAAb;EAAuC,CADlC,CAAP;AACyC;;AAWpC,gCACLhD,IADK,EAEL6C,SAFK,EAGG;EAGR,MAAMxC,QAAQ4C,oBAAoBjD,IAApB,CAAd;EACA,MAAMkD,QAAQ7C,MAAM8C,QAApB;;EAKA,0BAA0BC,IAA1B,EAAiD;IAO/C,IAAIA,gBAAgBC,YAApB,EAAkC;MAChC,MAAMvE,WAAWwE,wBAAwBF,KAAKG,YAA7B,EAA2CV,SAA3C,CAAjB;MACA,OAAO,GAAG/D,cAAcsE,KAAKnD,KAAL,CAAWuD,WAAnC;IAAmC;;IAerC,MAAMC,SAASd,qBAAqBe,IAArB,CAA0BN,KAAKI,OAAL,CAAaG,KAAb,CAAmB,IAAnB,EAAyBC,IAAzB,CAA8B,EAA9B,CAA1B,CAAf;;IACA,IAAIH,UAAUA,OAAOI,MAAP,GAAgB,CAA9B,EAAiC;MAC/B,MAAMC,QAAOL,OAAO,CAAP,CAAb;MACA,MAAMM,WAAWN,OAAO,CAAP,CAAjB;MAGA,OAAO,GAAGK,WAAUE,uBAAuBD,QAAvB,EAAiClB,SAAjC,CAAiC,IAArD;IAAqD;;IAMvD,OAAOO,KAAKI,OAAZ;EAAY;;EAKd,IAAIvD,QAAQ,EAAZ;;EACA,WAAWmD,IAAX,IAAmBjE,MAAMC,IAAN,CAAW8D,KAAX,CAAnB,EAAsC;IACpCjD,SAASgE,iBAAiBb,IAAjB,IAAyB,MAAlC;EAAkC;;EAGpC,OAAOnD,MAAMiE,IAAN,EAAP;AAAa;;AAUR,qCACLpE,OADK,EAEL+C,SAFK,EAGQ;EAGb,MAAMlE,WAAWQ,MAAMC,IAAN,CAAWU,QAAQqE,gBAAR,CAAyB,SAAzB,CAAX,CAAjB;EAEAxF,SAASyF,IAAT,CAActE,OAAd;;EAEA,WAAWQ,OAAX,IAAsB3B,QAAtB,EAAgC;IAC9B,MAAM;MAAE0F;IAAF,IAAgB/D,OAAtB;;IACA,WAAWyC,SAAX,IAAwB5D,MAAMC,IAAN,CAAWiF,SAAX,CAAxB,EAA+C;MAC7CA,UAAUjC,MAAV,CAAiBW,SAAjB;MACAsB,UAAUC,GAAV,CAAczB,UAAUE,SAAV,CAAd;IAAwB;EAAA;;EAK5B,OAAOjD,OAAP;AAAO,C;;;AClIT,sD;;ACMO,IAAMyE,eAAe,GAArB;;AAQA,sBACLC,GADK,EAELC,MAFK,EAIkB;EAAA,IADvBC,KACuB,uEADf,GACe;EAEvB,MAAM;IAAEC,MAAF;IAAUC;EAAV,IAAmBJ,IAAIK,eAAJ,CAAoBJ,MAApB,CAAzB;EACA,MAAMK,kBAAkBzC,KAAK0C,GAAL,CAASH,OAAOF,KAAhB,EAAuB,CAAvB,CAAxB;EAEA,OAAO;IACLC,MADK;IAELC,MAAME,eAFD;IAGLE,OAAOT;EAHF,CAAP;AAGS;;AAUJ,oBAAoBU,SAApB,EAAgE;EACrE,QAAQA,SAAR;IAAQ,KACD,QADC;MAEJ,OAAO,EAAP;;IAAO,KACJ,UADI;IACJ,KACA,MADA;MAEH,OAAO,EAAP;;IAAO,KACJ,OADI;IACJ,KACA,MADA;MAEH,OAAO,EAAP;;IAAO,KACJ,UADI;MAEP,OAAO,CAAP;;IAAO,KACJ,QADI;IACJ,KACA,YADA;MAEH,OAAO,CAAP;;IAAO,KACJ,SADI;MAEP,OAAO,CAAP;;IAAO;MAEP,OAAO,EAAP;EAjBJ;AAiBW;;AAWN,0BAA0BC,QAA1B,EAA4CC,OAA5C,EAAqE;EAC1E,OAAO,oCAAoCD,YAAYC,iBAAvD;AAAuD,C;;;AClElD,IAAMC,4BAA4BC,iBACvC,QADuC,EAEvC,uBAFuC,CAAlC;AAKA,IAAMC,4BAA4B,OAAlC;AAEA,IAAMC,iBAAiB,CAAC,YAAD,EAAe,WAAf,EAA4B,gBAA5B,CAAvB,C;;AFMA,yBAAiC;EACtC,OAAO,QAAQ,IAAIC,YAAJ,GAAmBC,EAAnB,CAAsBzC,KAAtB,CAA4B,CAA5B,EAA+B,CAA/B,CAAf;AAA8C;;AAMzC,sBAAyB0C,IAAzB,EAAiD;EACtD,IAAI;IACF,OAAOC,KAAKC,KAAL,CAAWF,IAAX,CAAP;EAAkB,CADpB,CACoB,OACXG,CADW,EAClB;IACA,OAAO,IAAP;EAAO;AAAA;;AAIJ,oBAAuBC,CAAvB,EAA6BC,CAA7B,EAA4C;EACjD,IAAID,KAAK,IAAL,IAAaC,KAAK,IAAtB,EAA4B;IAC1B,OAAOD,MAAMC,CAAb;EAAa;;EAGf,IAAI,OAAOD,CAAP,KAAa,QAAb,IAAyB,OAAOC,CAAP,KAAa,QAA1C,EAAoD;IAClD,OAAOD,MAAMC,CAAb;EAAa;;EAGf,MAAMC,QAAQjH,OAAOkH,IAAP,CAAYH,CAAZ,CAAd;EACA,MAAMI,QAAQnH,OAAOkH,IAAP,CAAYF,CAAZ,CAAd;;EAEA,IAAIC,MAAMnC,MAAN,KAAiBqC,MAAMrC,MAA3B,EAAmC;IACjC,OAAO,KAAP;EAAO;;EAGT,WAAWhF,GAAX,IAAkBmH,KAAlB,EAAyB;IACvB,IAAI,CAACG,WAAWL,EAAEjH,GAAF,CAAX,EAAmBkH,EAAElH,GAAF,CAAnB,CAAL,EAAiC;MAC/B,OAAO,KAAP;IAAO;EAAA;;EAIX,OAAO,IAAP;AAAO;;AASF,eAAeuH,GAAf,EAA4BC,aAA5B,EAA2D;EAChE,MAAMC,cAAcjE,KAAKkE,GAAL,CAAS,EAAT,EAAaF,aAAb,CAApB;EACA,OAAOhE,KAAKmE,KAAL,CAAWJ,MAAME,WAAjB,IAAgCA,WAAvC;AAAuC;;AAQlC,uBAAuBG,QAAvB,EAAkD;EACvD,OAAOC,QACLD,SAASE,KAAT,CACE,2EADF,CADK,CAAP;AAEI;;AAUC,wBAAwBF,QAAxB,EAAmD;EACxD,OAAOC,QAAQnB,eAAeqB,IAAf,CAAqBC,MAAD,IAAYJ,SAASK,QAAT,CAAkBD,MAAlB,CAAhC,CAAR,CAAP;AAAiE,C;;;AGrFnE;;AAoCO,sCAKGE,WALH,CAKe;EALfjG,cApCP;IAoCO;;IAOLkG,0BAAQC,eAAR;;IAcAD;;IA6EAA,+BAAcjE,SAAD,IAA+B;MAC1C,OAAO,GAAGmE,mBAAKC,KAAL,CAAK,KAAUpE,WAAzB;IAAyB,CAD3B;EAC2B;;EA1Fb,eAAgC;IAC5C,OAAO,IAAP;EAAO;;EAGK,oBAAwB;IACpC,OAAO,IAAP;EAAO;;EAGK,wBAA4B;IACxC,OAAO,IAAP;EAAO;;EAWTqE,eAAeC,OAAf,EAAgCC,OAAhC,EAAuD;IAGrD,MAAMC,gBAAiBxE,SAAD,IACpBA,UAAUD,OAAV,CAAkBuE,OAAlB,EAA2BC,OAA3B,CADF;;IAGAE,4BAA4B,IAA5B,EAAkCD,aAAlC;IAEA,MAAME,SAAStI,MAAMC,IAAN,CAAW,KAAK+E,gBAAL,CAAwC,OAAxC,CAAX,CAAf;;IACA,WAAWlE,KAAX,IAAoBwH,MAApB,EAA4B;MAC1BxH,MAAMC,WAAN,GAAoBoD,wBAClBrD,MAAMC,WADY,EAElBqH,aAFkB,CAApB;IAEE;;IAKJ,IAAIE,OAAO5D,MAAX,EAAmB;MACjB6D,mBAAKC,yBAAL,EAAiCF,OAAOA,OAAO5D,MAAP,GAAgB,CAAvB,CAAjC;IAAwD;EAAA;;EAI5D+D,oBAA0B;IAExB,IAAI,KAAKC,iBAAL,GAAyB,CAA7B,EAAgC;MAC9B,MAAMR,UAAU,KAAKS,OAAL,CAAaC,IAA7B;;MACA,MAAMT,UAAUJ,mBAAKC,KAAL,CAAhB;;MAIA,IAAIE,WAAWA,YAAYC,OAA3B,EAAoC;QAClC,KAAKF,cAAL,CAAoBC,OAApB,EAA6BC,OAA7B;QAGA,KAAKQ,OAAL,CAAaC,IAAb,GAAoBT,OAApB;MAAoB;;MAGtB;IAAA;;IAGF,KAAKQ,OAAL,CAAaC,IAAb,GAAoBb,mBAAKC,KAAL,CAApB;IAIA,MAAMvH,WAAW,KAAKA,QAAtB;;IACA,IAAIA,QAAJ,EAAc;MACZ,MAAMU,UAAU,KAAK0H,eAAL,CAAqBpI,QAArB,CAAhB;MACA,KAAKQ,WAAL,CAAiBE,OAAjB;IAAiB;;IAGnB,MAAM2H,gBAAgB,KAAKA,aAA3B;;IACA,IAAIA,aAAJ,EAAmB;MACjB,MAAMhI,QAAQ1B,SAASsB,aAAT,CAAuB,OAAvB,CAAd;MACAI,MAAMC,WAAN,GAAoB,KAAKgI,UAAL,CAAgBD,aAAhB,CAApB;MACA,KAAK7H,WAAL,CAAiBH,KAAjB;IAAiB;;IAGnB,MAAMkI,YAAY5J,SAASsB,aAAT,CAAuB,OAAvB,CAAlB;;IACA,IAAI,KAAKuI,iBAAT,EAA4B;MAC1BD,UAAUjI,WAAV,GAAwB,KAAKgI,UAAL,CAAgB,KAAKE,iBAArB,CAAxB;IAA6C;;IAE/C,KAAKhI,WAAL,CAAiB+H,SAAjB;;IACAT,mBAAKC,yBAAL,EAAiCQ,SAAjC;EAAiC;;EAWnCH,gBAAgBpI,QAAhB,EAA4D;IAC1D,MAAMU,UAAUV,SAASE,OAAT,CAAiBC,iBAAjC;IACA,OAAOyH,4BACLlH,QAAQ0B,SAAR,CAAkB,IAAlB,CADK,EAELkF,mBAAKmB,UAAL,CAFK,CAAP;EAEO;;EAITH,WAAWtF,GAAX,EAAgC;IAC9B,OAAOoB,uBAAuBpB,GAAvB,EAA4BsE,mBAAKmB,UAAL,CAA5B,CAAP;EAAwC;;EAG1CC,wBAAwBrI,KAAxB,EAA6C;IAC3C,IAAI,CAACiH,mBAAKS,yBAAL,CAAL,EAAqC;MACnC;IAAA;;IAEFT,mBAAKS,yBAAL,EAA+BzH,WAA/B,GAA6C,KAAKgI,UAAL,CAAgBjI,KAAhB,CAA7C;EAA6D;;EAG/DhB,cAA2CsJ,SAA3C,EAAiE;IAC/D,OAAO,MAAMtJ,aAAN,CACLqE,wBAAwBiF,SAAxB,EAAmCrB,mBAAKmB,UAAL,CAAnC,CADK,CAAP;EAC0C;;EAI5ClE,iBACEoE,SADF,EAEiB;IACf,OAAO,MAAMpE,gBAAN,CACLb,wBAAwBiF,SAAxB,EAAmCrB,mBAAKmB,UAAL,CAAnC,CADK,CAAP;EAC0C;;EAS5CG,iBACEC,IADF,EAEEC,QAFF,EAGEC,OAHF,EAIQ;IACN,MAAMH,gBAAN,CAAuBC,IAAvB,EAA6BC,QAA7B,EAAuCC,OAAvC;EAAuC;;EAQzCC,oBACEH,IADF,EAEEC,QAFF,EAGEC,OAHF,EAIQ;IACN,MAAMC,mBAAN,CAA0BH,IAA1B,EAAgCC,QAAhC,EAA0CC,OAA1C;EAA0C;;EAG5CnH,cAAsCqH,KAAtC,EAAiE;IAC/D,OAAO,MAAMrH,aAAN,CAAoBqH,KAApB,CAAP;EAA2B;;AA7JT,CALf;AAOL1B;AAcAQ;AA6EAU,2B;;AC3HK,oCAAiCS,WAAjC,CAAgD;EACrDhI,YAAY2H,IAAZ,EAA0BM,MAA1B,EAAsC;IACpC,MAAMN,IAAN,EAAY;MACVO,UAAU,IADA;MAEVD;IAFU,CAAZ;EAEE;;EAcJhH,MAAMkH,SAAN,EAAmD;IACjD,MAAMC,aAAa,IAAIC,eAAJ,CAAoB,KAAKV,IAAzB,EAA+B,KAAKM,MAApC,CAAnB;;IACA,IAAIE,SAAJ,EAAe;MACblK,OAAOqK,cAAP,CAAsBF,UAAtB,EAAkC,QAAlC,EAA4C;QAAEvI,OAAOsI;MAAT,CAA5C;IAAqD;;IAEvD,OAAOC,UAAP;EAAO;;AAvB4C,CAAhD,C;;;;;;;;;;ACNP,IAAMG,0BAA0B,qCAAqCC,wCAArE;AACA,IAAMC,wBAAwB,qCAAqCD,sCAAnE;AAMO,IAAME,oBAAoB,MAAM,CAAhC;AACP,IAAMC,qBAAqB,sCAAsCD,sBAAjE;AAySA,IAAME,gBAAuB;EAC3BC,WAAW;IAETC,MAAM,CAAC,QAAD,EAAW,MAAX,EAAmB,MAAnB,CAFG;IAGTC,YAAY,CAAC,QAAD,EAAW,MAAX,EAAmB,MAAnB,CAHH;IAKTC,UAAU,mBALD;IAMTC,SAAS,QANA;IAOTC,SAAS,cAPA;IAQTC,cAAc,QARL;IAUTC,WAAW,qBAVF;IAWTC,cAAc,SAXL;IAYTC,gBAAgB,SAZP;IAcTC,iBAAiB,MAdR;IAeTC,sBAAsB,SAfb;IAgBTC,uBAAuB,SAhBd;IAkBTC,eAAe,0BAlBN;IAoBTC,QAAQ,MApBC;IAsBTC,cAAc,KAtBL;IAuBTC,WAAW;AAAA;AAAA;AAAA;AAAA,KAvBF;IA6BTC,YAAY,OA7BH;IAkCTC,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAlCH;IAyCTC,YAAY,QAzCH;IA0CTC,oBAAoB,KA1CX;IA2CTC,gBAAgB,MA3CP;IA6CTC,UAAU,OA7CD;IA8CTC,OAAO;EA9CE,CADgB;EAiD3BC,OAAO;IACLC,OAAOC,aADF;IAELC,UAAUC,gBAFL;IAILC,QAAQC;EAJH,CAjDoB;EAuD3BC,QAAQ;IACNC,oBAAoBpC,qBADd;IAENqC,sBAAsBvC;EAFhB;AAvDmB,CAA7B;;AAmEO,qBAAqBwC,YAArB,EAAuE;EAAA,IAA5BC,KAA4B,uEAAb,EAAa;;EAC5E,MAAMnC,YAAYoC,kCAEbrC,cAAcC,SAFD,GAGZmC,MAAMnC,SAAN,IAAmB,EAHP,CAAlB;;EAMA,IAAInG,UAAUsI,MAAMtI,OAAN,IAAiB,EAA/B;EACA,IAAIwI,gBAAgB,EAApB;;EAEA,WAAW,CAACnN,GAAD,EAAM8B,KAAN,CAAX,IAA2B5B,OAAOC,OAAP,CAAe2K,SAAf,CAA3B,EAAsD;IAEpD,IAAI,CAACxK,MAAM8M,OAAN,CAActL,KAAd,CAAL,EAA2B;MACzBqL,iBAAiB,KAAKnN,QAAQ8B,QAA9B;MACA;IAAA;;IAIF,IAAIA,MAAM,CAAN,MAAa,QAAjB,EAA2B;MACzB,MAAMuL,WAAWvG,KAAKwG,SAAL,CAAexL,KAAf,CAAjB;MACA,MAAM,IAAIyL,KAAJ,CACJ,8CAA8CvN,OAAOqN,UADjD,CAAN;IACuD;;IAIzD,MAAM,GAAGG,WAAH,EAAgBC,YAAhB,IAAgC3L,KAAtC;IAGA6C,WAAW,GAAGiG,wBAAwBoC,oBAAoBhN,QAAQwN,6BAAlE;IAEAL,iBAAiB,KAAKnN,QAAQyN,eAA9B;EAA8B;;EAGhC,OAAO9I,UAAU,GAAGqI,kBAAkBG,iBAAtC;AAAsC;;AAGjC,iBACLO,QADK,EAGe;EAAA,IADpBT,KACoB,uEADL,EACK;;EACpB,MAAMX,QAAQY,kCACTrC,cAAcyB,KADL,GAERW,MAAMX,KAAN,IAAe,EAFP,CAAd;;EAKA,MAAMqB,YAAYrB,MAAMoB,QAAN,CAAlB;EACA,OAAOC,SAAP;AAAO;;AAGF,kBACLC,SADK,EAGe;EAAA,IADpBX,KACoB,uEADL,EACK;;EACpB,MAAMJ,SAASK,kCACVrC,cAAcgC,MADJ,GAETI,MAAMJ,MAAN,IAAgB,EAFP,CAAf;;EAKA,MAAMgB,YAAYhB,OAAOe,SAAP,CAAlB;EACA,OAAOC,SAAP;AAAO,C;;;;;AR7ZT,IAAMC,WAAWC,wBAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7C,CAAjB;AAkBA,IAAMC,kBAAkBD,wBAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7C,CAAxB;;AASA,gCAAgCE,YAAhC,EAAsDC,CAAtD,EAAyE;EACvE,OAAO,GAAGD,gBAAgBC,GAA1B;AAA0B;;AAnD5B;;AAqFO,wCAKGC,iBALH,CAOL;EAPKlM,cArFP;IAqFO;;IA+ILkG;;IAmBAA;;IAmCAA;;IAjLAA;;IA2CAA,4BAAkD,IAAlD;;IAEAA;;IAEAA,6BAAWC,eAAX;;IACAD,kCAAgBC,eAAhB;;IAEAD;;IAyCAA,2CAAyB,CAAzB;;IA0IAA,qCAAqC,EAArC;;IAUAA,mCAAwB,EAAxB;;IAgBA,uBAAiE,IAAjE;;IAEAA,iCAAgBnB,CAAD,IAAyB;MAEtC,MAAM;QAAEoH;MAAF,IAAc/F,mBAAKgG,QAAL,CAApB;;MACA,MAAMxM,QAAQmF,EAAEsH,MAAhB;;MAEA,IAAIzM,MAAMoH,OAAN,CAAc,eAAd,CAAJ,EAAoC;QAClC,OAAOpH,MAAMoH,OAAN,CAAc,eAAd,CAAP;QACA;MAAA;;MAGF,MAAMsF,aAAa1M,MAAMC,KAAzB;MAGAsM,QAAQI,YAAR,CAAqB,WAArB,EAAkC,MAAlC;MAEA,KAAKC,OAAL,CAAaC,OAAb,CAAqBH,UAArB,EAAiC,KAAKzE,OAAtC;IAAsC,CAfxC;;IAqBA3B,mCAAkBwG,MAAD,IAAsC;MACrD,IAAI,CAACA,MAAD,IAAW,CAACA,OAAOC,WAAvB,EAAoC;QAClCC,sBAAKC,YAAL,EAAKC,cAAL;;QACA;MAAA;;MAGFF,sBAAKG,kBAAL,EAAKC,oBAAL;;MACA,IAAIN,OAAOC,WAAP,CAAmB5J,MAAvB,EAA+B;QAC7B6J,sBAAKK,YAAL,EAAKC,cAAL;MAAA;;MAIF,KAAKxM,aAAL,CAAmB,IAAI2H,eAAJ,CAAoB,SAApB,EAA+BqE,MAA/B,CAAnB;;MAEA,MAAM;QAAEP;MAAF,IAAc/F,mBAAKgG,QAAL,CAApB;;MAEAD,QAAQI,YAAR,CAAqB,WAArB,EAAkC,OAAlC;IAAkC,CAhBpC;;IAsBArG,wCAAuBiH,KAAD,IAAwB;MAE5C,KAAKzM,aAAL,CAAmB,IAAI2H,eAAJ,CAAoB,cAApB,EAAoC8E,KAApC,CAAnB;;MAEA,MAAM;QAAEhB;MAAF,IAAc/F,mBAAKgG,QAAL,CAApB;;MAEAD,QAAQI,YAAR,CAAqB,WAArB,EAAkC,OAAlC;;MAEAK,sBAAKC,YAAL,EAAKC,cAAL;IAAA,CARF;;IAWA5G,iCAAe,MAAY;MACzB,MAAMtG,QAAQ,KAAKA,KAAnB;MACA,OAAOA,MAAMoH,OAAN,CAAc,eAAd,CAAP;;MAEA4F,sBAAKK,YAAL,EAAKC,cAAL;IAAA,CAJF;;IAOAhH,gCAAc,MAAY;MAExB,IAAIzI,SAAS2P,aAAT,KAA2B,KAAKxN,KAApC,EAA2C;QACzC;MAAA;;MAIF,KAAK4M,OAAL,CAAaa,KAAb;;MACAT,sBAAKC,YAAL,EAAKC,cAAL;IAAA,CARF;;IAWA5G,mCAAkBnB,CAAD,IAA4B;MAC3C,IAAIA,EAAEhH,GAAF,KAAU,QAAd,EAAwB;QACtB6O,sBAAKC,YAAL,EAAKC,cAAL;;QACA;MAAA;;MAGF,IAAI/H,EAAEhH,GAAF,KAAU,SAAd,EAAyB;QACvBgH,EAAEuI,cAAF;QACA,KAAKC,aAAL,GAAqBhM,KAAK0C,GAAL,CAAS,CAAT,EAAY,KAAKsJ,aAAL,GAAqB,CAAjC,CAArB;QACA;MAAA;;MAGF,IAAIxI,EAAEhH,GAAF,KAAU,WAAd,EAA2B;QACzBgH,EAAEuI,cAAF;QACA,KAAKC,aAAL,GAAqBhM,KAAKiM,GAAL,CACnB,KAAKD,aAAL,GAAqB,CADF,EAEnB,KAAKZ,WAAL,CAAiB5J,MAAjB,GAA0B,CAFP,CAArB;QAIA;MAAA;;MAGF,IAAIgC,EAAEhH,GAAF,KAAU,OAAd,EAAuB;QACrBgH,EAAEuI,cAAF;QACA,KAAKG,QAAL,CAAc,KAAKd,WAAL,CAAiB,KAAKY,aAAtB,CAAd;QACA;MAAA;IAAA,CAxBJ;EAwBI;;EA7WmB,eAAgC;IACrD,OAAO1B,QAAP;EAAO;;EAGc,oBAAwB;IAC7C,OAAO6B,aAAP;EAAO;;EAGK,wBAA4B;IACxC,OAAOC,YAAY,eAAZ,EAA6B,KAAK3C,KAAlC,CAAP;EAAyC;;EAUvC,cAKK;IACP,OAAO5E,mBAAKwH,gBAAL,CAAP;EAAY;;EAGV,YACFC,UADE,EAOF;IACA,MAAMC,aAAa1H,mBAAKwH,gBAAL,CAAnB;;IAEA,IAAIE,UAAJ,EAAgB;MACdD,WAAW/F,mBAAX,CAA+B,SAA/B,EAA0C1B,mBAAK2H,cAAL,CAA1C;MACAF,WAAW/F,mBAAX,CAA+B,cAA/B,EAA+C1B,mBAAK4H,mBAAL,CAA/C;IAAoD;;IAGtD,IAAIH,UAAJ,EAAgB;MACdA,WAAWnG,gBAAX,CAA4B,SAA5B,EAAuCtB,mBAAK2H,cAAL,CAAvC;MACAF,WAAWnG,gBAAX,CAA4B,cAA5B,EAA4CtB,mBAAK4H,mBAAL,CAA5C;IAAiD;;IAGnDpH,mBAAKgH,gBAAL,EAAwBC,UAAxB;EAAwB;;EAGtB,kBAAmC;IAhJzC;;IAiJI,OAAO,WAAKrB,OAAL,CAAaG,WAAb,wBAA0BA,WAAjC;EAAiC;;EAY/B,YAAiC;IACnC,OAAOvG,mBAAK6H,cAAL,CAAP;EAAY;;EAGV,UAAMC,QAAN,EAAyC;IAC3C,MAAMC,WAAW/H,mBAAK6H,cAAL,CAAjB;;IAEA,IAAIE,QAAJ,EAAc;MACZA,SAASrG,mBAAT,CAA6B,OAA7B,EAAsC1B,mBAAKgI,YAAL,CAAtC;MACAD,SAASrG,mBAAT,CAA6B,OAA7B,EAAsC1B,mBAAKiI,YAAL,CAAtC;MACAF,SAASrG,mBAAT,CAA6B,MAA7B,EAAqC1B,mBAAKkI,WAAL,CAArC;MACAH,SAASrG,mBAAT,CAA6B,SAA7B,EAAwC1B,mBAAKmI,cAAL,CAAxC;;MAEA,IAAInI,mBAAKoI,OAAL,CAAJ,EAAkB;QAChBpI,mBAAKoI,OAAL,EAAaC,OAAb;MAAa;IAAA;;IAIjB,IAAIP,QAAJ,EAAc;MACZA,SAASxG,gBAAT,CAA0B,OAA1B,EAAmCtB,mBAAKgI,YAAL,CAAnC;MACAF,SAASxG,gBAAT,CAA0B,OAA1B,EAAmCtB,mBAAKiI,YAAL,CAAnC;MACAH,SAASxG,gBAAT,CAA0B,MAA1B,EAAkCtB,mBAAKkI,WAAL,CAAlC;MACAJ,SAASxG,gBAAT,CAA0B,SAA1B,EAAqCtB,mBAAKmI,cAAL,CAArC;MAGAL,SAAS3B,YAAT,CAAsB,MAAtB,EAA8B,UAA9B;MACA2B,SAAS3B,YAAT,CAAsB,mBAAtB,EAA2C,MAA3C;MACA2B,SAAS3B,YAAT,CAAsB,eAAtB,EAAuCnG,mBAAKsI,aAAL,CAAvC;;MAEA,IAAI,KAAKC,WAAT,EAAsB;QACpB/H,mBAAK4H,OAAL,EAAeI,aAAaV,QAAb,EAAuB9H,mBAAKgG,QAAL,EAAcD,OAArC,EAA8C;UAC3D0C,WAAW;QADgD,CAA9C,CAAf;MACa;IAAA;;IAKjBjI,mBAAKqH,cAAL,EAAsBC,QAAtB;EAAsB;;EAKpB,oBAAwB;IAC1B,OAAO9H,mBAAK0I,sBAAL,CAAP;EAAY;;EAGV,kBAAcC,QAAd,EAAgC;IAClC,MAAMC,WAAW5I,mBAAK0I,sBAAL,CAAjB;;IACAlI,mBAAKkI,sBAAL,EAA8BC,QAA9B;;IAGA,MAAM;MAAEE,WAAF;MAAeC;IAAf,IAAyB9I,mBAAKgG,QAAL,CAA/B;;IAEA,MAAMzH,KAAKwK,uBAAuB/I,mBAAKsI,aAAL,CAAvB,EAA2CK,QAA3C,CAAX;IACA,KAAKnP,KAAL,CAAW2M,YAAX,CAAwB,uBAAxB,EAAiD5H,EAAjD;IACAsK,YAAY1C,YAAZ,CAAyB,uBAAzB,EAAkD5H,EAAlD;;IAGA,IAAIqK,aAAaD,QAAjB,EAA2B;MACzB,MAAMK,QAAQD,uBAAuB/I,mBAAKsI,aAAL,CAAvB,EAA2CM,QAA3C,CAAd;MACA,MAAMK,QAAQJ,YAAY9Q,aAAZ,CAA0B,IAAIiR,OAA9B,CAAd;MACAC,+BAAOC,eAAP,CAAuB,eAAvB;MAEA,MAAM7Q,KAAKwQ,YAAY9Q,aAAZ,CAA0B,IAAIwG,IAA9B,CAAX;MACAlG,yBAAI8N,YAAJ,CAAiB,eAAjB,EAAkC,MAAlC;IAAkC;;IAGpC2C,MAAM9P,WAAN,GACE,KAAKuN,WAAL,CAAiBoC,QAAjB,EAA2BQ,OAA3B,GACA,gBAAgBR,WAAW,QAAQ,KAAKpC,WAAL,CAAiB5J,QAFtD;EAEsD;;EAgCxDyM,WAAWvD,CAAX,EAAmC;IACjC,MAAMzM,UAAU,KAAK0H,eAAL,CAAqB6E,eAArB,CAAhB;IACAvM,QAAQmF,EAAR,GAAawK,uBAAuB/I,mBAAKsI,aAAL,CAAvB,EAA2CzC,CAA3C,CAAb;IAEA,OAAOzM,OAAP;EAAO;;EAGTiQ,SAAShR,EAAT,EAAsBiR,IAAtB,EAAwCzD,CAAxC,EAAyD;IACvD,MAAM,CAAC0D,MAAD,EAASC,aAAT,IAA0BvR,MAAMC,IAAN,CAC9BG,GAAG4E,gBAAH,CAAoB,qBAApB,CAD8B,CAAhC;IAIAsM,OAAOvQ,WAAP,GACE,mBAAmBsQ,IAAnB,GACIA,KAAKG,aAAL,IAAsBH,KAAKI,aAA3B,IAA4CJ,KAAKK,YADrD,GAEIL,KAAKI,aAAL,IAAsBJ,KAAKK,YAHjC;IAIAH,cAAcxQ,WAAd,GAA4BsQ,KAAKM,WAAjC;;IAEA,IAAI/D,MAAM,KAAKsB,aAAf,EAA8B;MAC5B9O,GAAG8N,YAAH,CAAgB,eAAhB,EAAiC,MAAjC;IAAiC,CADnC,MAEO;MACL9N,GAAG6Q,eAAH,CAAmB,eAAnB;IAAmB;EAAA;;EA0DnB,cAA4B;IAC9B,OAAOlJ,mBAAK6J,gBAAL,CAAP;EAAY;;EAGV,YAAQC,UAAR,EAAsC;IACxCtJ,mBAAKqJ,gBAAL,EAAwBC,UAAxB;EAAwB;;EAKtB,YAAe;IACjB,OAAO9J,mBAAK+J,cAAL,CAAP;EAAY;;EAGV,UAAMnF,KAAN,EAAoB;IACtBpE,mBAAKuJ,cAAL,EAAsBnF,KAAtB;;IAEA,IAAI,CAAC5E,mBAAKgG,QAAL,CAAD,IAAkB,CAACpB,KAAvB,EAA8B;MAC5B;IAAA;;IAGF,KAAKxD,uBAAL,CAA6BmG,YAAY,eAAZ,EAA6B3C,KAA7B,CAA7B;EAA0D;;EAyGnDlE,oBAA0B;IACjC,MAAMA,iBAAN;;IAEAF,mBAAKwF,QAAL,EAAgBgE,aAAsB,IAAtB,EAA4B;MAC1CC,cAAc,eAD4B;MAE1ClE,SAAS,UAFiC;MAG1C8C,aAAa,cAH6B;MAI1CC,OAAO;IAJmC,CAA5B,CAAhB;;IAOA,MAAM;MAAE/C,OAAF;MAAW8C,WAAX;MAAwBC;IAAxB,IAAkC9I,mBAAKgG,QAAL,CAAxC;;IAEA8C,MAAMvK,EAAN,GAAWyB,mBAAKkK,QAAL,CAAX;IACArB,YAAYtK,EAAZ,GAAiByB,mBAAKsI,aAAL,CAAjB;IACAO,YAAY1C,YAAZ,CAAyB,iBAAzB,EAA4CnG,mBAAKkK,QAAL,CAA5C;IAEAnE,QAAQzE,gBAAR,CAAyB,MAAzB,EAAiCtB,mBAAKkI,WAAL,CAAjC;;IAEA,IAAI,CAAClI,mBAAKoI,OAAL,CAAD,IAAiB,KAAK5O,KAA1B,EAAiC;MAC/BgH,mBAAK4H,OAAL,EAAeI,aAAa,KAAKhP,KAAlB,EAAyBwG,mBAAKgG,QAAL,EAAcD,OAAvC,EAAgD;QAC7D0C,WAAW;MADkD,CAAhD,CAAf;IACa;;IAKf0B,sBAAsB,MAAM;MAC1B,IAAInK,mBAAKoI,OAAL,CAAJ,EAAkB;QAChBpI,mBAAKoI,OAAL,EAAagC,MAAb;MAAa;IAAA,CAFjB;EAEiB;;EAKnBC,uBAA6B;IAE3B,KAAK7Q,KAAL,GAAa,IAAb;;IAEA,MAAM;MAAEuM;IAAF,IAAc/F,mBAAKgG,QAAL,CAApB;;IACAD,QAAQrE,mBAAR,CAA4B,MAA5B,EAAoC1B,mBAAKkI,WAAL,CAApC;EAAyC;;EAGrCb,SAASiD,UAAT,EAAgD;IAAA;MAtfxD;;MAufI,MAAM9Q,QAAQ,KAAKA,KAAnB;;MACA,IAAIA,KAAJ,EAAW;QACTA,MAAMoH,OAAN,CAAc,eAAd,IAAiC,MAAjC;MAAiC;;MAGnC,MAAM0F,SAAS,MAAM,KAAKF,OAAL,CAAaiB,QAAb,CAAsBiD,UAAtB,EAAkC,KAAK7I,OAAvC,CAArB;MACA,KAAK8I,eAAL,GAAwB,aAAoCC,QAApC,wBAA+C,CAA/C,CAAxB;;MAEAhE,sBAAKC,YAAL,EAAKC,cAAL;;MACA,KAAKpM,aAAL,CAAmB,IAAI2H,eAAJ,CAAoB,UAApB,EAAgCqE,MAAhC,CAAnB;IAAmD,CAVC;EAUD;;EAGrDmE,QAAc;IAGZ,IAAIpT,SAAS2P,aAAT,KAA2B,KAAKxN,KAApC,EAA2C;MACzCwG,mBAAKiI,YAAL;IAAA,CADF,MAEO;MACL,KAAKzO,KAAL,CAAWiR,KAAX;IAAW;EAAA;;EAIfC,gBAAsB;IACpB,IAAI1K,mBAAKoI,OAAL,CAAJ,EAAkB;MAChBpI,mBAAKoI,OAAL,EAAagC,MAAb;IAAa;EAAA;;AAnbjB,CAPK;AAoBL5C;AA2CAY;AAEApC;AAEAkE;AACA5B;AAEAT;AAyCAa;AAgCA7B;;AAAAC,iBAAY,YAAS;EACnB,IAAI,CAAC,KAAKP,WAAN,IAAqB,CAAC,KAAKA,WAAL,CAAiB5J,MAA3C,EAAmD;IACjD;EAAA;;EAGF,MAAM;IAAEoJ,OAAF;IAAWkE;EAAX,IAA4BjK,mBAAKgG,QAAL,CAAlC;;EAGA,MAAM2E,OAAO,KAAKnR,KAAL,CAAWoB,qBAAX,EAAb;EACAgQ,cAAa7R,KAAb,CAAmBiC,WAAnB,CAA+B,SAA/B,EAA0C,GAAG2P,KAAKlQ,SAAlD;EACAmQ,cAAa7R,KAAb,CAAmBiC,WAAnB,CAA+B,SAA/B,EAA0C,OAA1C;EAGA,KAAKxB,KAAL,CAAW2M,YAAX,CAAwB,eAAxB,EAAyC,MAAzC;EACAJ,QAAQmD,eAAR,CAAwB,aAAxB;EAEA,KAAK/B,aAAL,GAAqB,CAArB;AAAqB,CAhBvB;;AAmBAV;;AAAAC,iBAAY,YAAS;EACnB,MAAM;IAAEX,OAAF;IAAW8C;EAAX,IAA2B7I,mBAAKgG,QAAL,CAAjC;;EAGAD,QAAQI,YAAR,CAAqB,aAArB,EAAoC,MAApC;EACA,KAAK3M,KAAL,CAAW0P,eAAX,CAA2B,eAA3B;EACAL,YAAYK,eAAZ,CAA4B,uBAA5B;EACA,KAAK1P,KAAL,CAAW0P,eAAX,CAA2B,uBAA3B;AAA2B,CAP7B;;AAmCAvC;;AAAAC,uBAAkB,YAAS;EACzB,MAAM;IAAEiC;EAAF,IAAkB7I,mBAAKgG,QAAL,CAAxB;;EACA,MAAMO,cAAc,KAAKA,WAAzB;;EAEA,IAAI,CAACA,WAAD,IAAgB,CAACA,YAAY5J,MAAjC,EAAyC;IAEvCkM,YAAYpQ,SAAZ,GAAwB,EAAxB;;IACA+N,sBAAKC,YAAL,EAAKC,cAAL;;IACA;EAAA;;EAMF,MAAMjP,WAAWoT,iBAAiBhC,WAAjB,CAAjB;;EAEA,IAAItC,YAAY5J,MAAZ,GAAqBlF,SAASkF,MAAlC,EAA0C;IACxC,SAASkJ,IAAIpO,SAASkF,MAAtB,EAA8BkJ,IAAIU,YAAY5J,MAA9C,EAAsDkJ,GAAtD,EAA2D;MACzD,MAAMyD,OAAO,KAAKF,UAAL,CAAgBvD,CAAhB,CAAb;MACApO,SAASyF,IAAT,CAAcoM,IAAd;;MAGAA,KAAKwB,YAAL,GAAoB,MAAM;QACxB,KAAK3D,aAAL,GAAqBtB,CAArB;MAAqB,CADvB;;MAIAgD,YAAY3P,WAAZ,CAAwBoQ,IAAxB;IAAwB;EAAA;;EAK5B,IAAI/C,YAAY5J,MAAZ,GAAqBlF,SAASkF,MAAlC,EAA0C;IACxC,SAASkJ,IAAIU,YAAY5J,MAAzB,EAAiCkJ,IAAIpO,SAASkF,MAA9C,EAAsDkJ,GAAtD,EAA2D;MACzDpO,SAASoO,CAAT,EAAY3K,MAAZ;IAAY;EAAA;;EAOhB,WAAWoP,UAAX,IAAyB/D,WAAzB,EAAsC;IACpC,MAAMV,IAAIU,YAAYwE,OAAZ,CAAoBT,UAApB,CAAV;IACA,MAAMlR,UAAU3B,SAASoO,CAAT,CAAhB;IAEA,KAAKwD,QAAL,CAAcjQ,OAAd,EAAuBkR,UAAvB,EAAmCzE,CAAnC;;IAEAzM,QAAQ4R,OAAR,GAAkB,MAAM;MACtB,KAAK3D,QAAL,CAAciD,UAAd;IAAc,CADhB;EACgB;AAAA,CA/CpB;;AAoDAT;AAUAE;AAkBA/B;AAqBAL;AAsBAC;AAWAK;AAOAC;AAWAC;AAwGF9O,OAAO4R,mBAAP,GAA6BA,mBAA7B;;AAEA,IAAI,CAAC5R,OAAO6R,cAAP,CAAsBC,GAAtB,CAA0B,uBAA1B,CAAL,EAAyD;EACvDD,eAAeE,MAAf,CAAsB,uBAAtB,EAA+CH,mBAA/C;AAA+C,C;;;ASvhB1C,2BAA2BtM,CAA3B,EAAmD;EACxD,MAAMtG,KAAKsG,EAAE0M,aAAb;;EAEA,IAAI1M,EAAEhH,GAAF,KAAU,GAAV,IAAiBgH,EAAEhH,GAAF,KAAU,OAA/B,EAAwC;IACtCgH,EAAEuI,cAAF;IACAvI,EAAE2M,eAAF;IAGAjT,GAAGiC,aAAH,CACE,IAAIiR,UAAJ,CAAe,OAAf,EAAwB;MACtBnR,SAAS,IADa;MAEtB0H,UAAU;IAFY,CAAxB,CADF;EAGc;AAAA,C;;;ACjBlB;AA4BO,IAAM0J,kBAAkB,mBAAIC,GAAJ,CAAwB,CACrD,gBADqD,EAErD,eAFqD,EAGrD,eAHqD,EAIrD,eAJqD,EAKrD,gBALqD,EAMrD,gBANqD,EAOrD,gBAPqD,EAQrD,gBARqD,EASrD,SATqD,EAUrD,cAVqD,EAWrD,aAXqD,CAAxB,CAAxB;AAkBP,IAAMC,uBAAuB,mBAAID,GAAJ,CAAQ,CAAC,KAAD,EAAQ,IAAR,EAAc,MAAd,EAAsB,OAAtB,CAAR,CAA7B;;AAOO,wBAAwBpT,EAAxB,EAA6D;EAClE,IAAIL,OAAOK,GAAGsT,UAAd;;EACA,OAAO3T,IAAP,EAAa;IACX,IAAIA,gBAAgB4T,eAApB,EAAqC;MACnC,OAAO5T,IAAP;IAAO;;IAETA,OAAOA,KAAK2T,UAAZ;EAAY;;EAGd,OAAO,IAAP;AAAO;;AASF,2BAA2BE,IAA3B,EAAuE;EAC5E,MAAMC,SAASD,QAAQxU,QAAvB;EACA,OAAOY,MAAMC,IAAN,CACL4T,OAAO7O,gBAAP,CACE,6EADF,CADK,CAAP;AAEI;;AAKN,IAAM8O,UAAU,UAAhB;AAEA,IAAMC,kBAAkB,iBAAxB;AACA,IAAMC,mBAAmB,kBAAzB;AACA,IAAMC,kBAAkB,iBAAxB;;AAoBO,4BAA4BL,IAA5B,EAAkE;EACvE,MAAMM,SAASlU,MAAMC,IAAN,CACb2T,KAAK5O,gBAAL,CAAwC,gBAAxC,CADa,EAEb7E,MAFa,CAELC,EAAD,IAAQ;IACf,MAAM+T,UAAU/T,GAAG+T,OAAH,CAAWC,WAAX,EAAhB;IACA,OACED,YAAY,OAAZ,IAAuBA,YAAY,QAAnC,IAA+CA,YAAY,UAD7D;EAC6D,CALhD,CAAf;EASA,MAAME,MAAqB,EAA3B;;EAEA,WAAW9S,KAAX,IAAoB2S,MAApB,EAA4B;IAC1B,IAAI,CAACI,UAAU/S,KAAV,CAAL,EAAuB;MACrB;IAAA;;IAQF,MAAMgT,eAAehT,MAAMiT,YAAN,CAAmB,cAAnB,KAAsC,EAA3D;;IACA,IAAI,CAACD,YAAD,IAAiBd,qBAAqBgB,GAArB,CAAyBF,YAAzB,CAArB,EAA6D;MAC3D;IAAA;;IAGF,MAAMG,SAASH,aAAaH,WAAb,GAA2B5P,KAA3B,CAAiC,GAAjC,CAAf;;IAMA,IAAIkQ,OAAOhQ,MAAP,GAAgB,CAApB,EAAuB;MACrB;IAAA;;IAIF,MAAMiQ,QAAQD,OAAOA,OAAOhQ,MAAP,GAAgB,CAAvB,CAAd;;IACA,IAAI,CAAC6O,gBAAgBkB,GAAhB,CAAoBE,KAApB,CAAL,EAAiC;MAC/B;IAAA;;IAEFD,OAAOE,GAAP;IAEA,IAAIC,UAA2Bd,eAA/B;;IAGA,IAAIW,OAAOhQ,MAAX,EAAmB;MACjB,MAAMoQ,eAAeJ,OAAOA,OAAOhQ,MAAP,GAAgB,CAAvB,CAArB;;MAEA,IAAIoQ,iBAAiB,UAArB,EAAiC;QAC/BD,UAAUb,gBAAV;QACAU,OAAOE,GAAP;MAAO;;MAGT,IAAIE,iBAAiB,SAArB,EAAgC;QAC9BD,UAAUZ,eAAV;QACAS,OAAOE,GAAP;MAAO;IAAA;;IAKX,IAAIF,OAAOhQ,MAAX,EAAmB;MACjB,MAAMoQ,eAAeJ,OAAOA,OAAOhQ,MAAP,GAAgB,CAAvB,CAArB;;MACA,IAAIoQ,aAAaC,UAAb,CAAwBjB,OAAxB,CAAJ,EAAsC;QACpCe,UAAUC,YAAV;MAAU;IAAA;;IAIdT,IAAIpP,IAAJ,CAAS;MACP1D,KADO;MAEPsT,OAFO;MAGPF;IAHO,CAAT;EAGE;;EAIJ,OAAON,GAAP;AAAO;;AAgBF,mCACLT,IADK,EAELoB,GAFK,EAGa;EAGlB,MAAMC,kBAAsC,EAA5C;EACA,MAAMC,yBAA8C,EAApD;EAIA,MAAMC,gBAAgBC,mBAAmBxB,IAAnB,CAAtB;EAIA,IAAIyB,eAAiC,IAArC;;EAEA,WAAW;IAAE9T,KAAF;IAASsT,OAAT;IAAkBF;EAAlB,CAAX,IAAwCQ,aAAxC,EAAuD;IACrD,IAAIG,YAAYL,gBAAgBvQ,MAAhB,GAAyB,CAAzC;IAKA,IAAI6Q,mBAAmB,KAAvB;;IACA,IAAI,CAACN,gBAAgBvQ,MAArB,EAA6B;MAC3B6Q,mBAAmB,IAAnB;IAAmB,CADrB,MACqB,IACVL,uBAAuBI,SAAvB,MAAsCT,OAD5B,EACqC;MACxDU,mBAAmB,IAAnB;IAAmB,CAFA,MAEA,IACVN,gBAAgBK,SAAhB,EAA2BX,KAA3B,CADU,EACyB;MAC5CY,mBAAmB,IAAnB;IAAmB;;IAGrB,IAAIA,gBAAJ,EAAsB;MAGpB,IAAIF,YAAJ,EAAkB;QAChB;MAAA;;MAGFJ,gBAAgBhQ,IAAhB,CAAqB;QAAA,CAClB0P,KADkB,GACVpT;MADU,CAArB;MAIA2T,uBAAuBjQ,IAAvB,CAA4B4P,OAA5B;MAEAS;IAAA,CAbF,MAcO;MACLL,gBAAgBK,SAAhB,EAA2BX,KAA3B,IAAoCpT,KAApC;IAAoC;;IAGtC,IAAIA,UAAUyT,GAAd,EAAmB;MACjBK,eAAeJ,gBAAgBK,SAAhB,CAAf;IAA+B;EAAA;;EAInC,OAAOD,sCAAgB,EAAvB;AAAuB;;AAYlB,+BACLzB,IADK,EAELoB,GAFK,EAGL3C,UAHK,EAIC;EA3QR;;EA6QE,MAAMhN,MAAMmQ,0BAA0B5B,IAA1B,EAAgCoB,GAAhC,CAAZ;EAEA,MAAMS,gBAAgB,CACpBpD,WAAWb,aADS,EAEpBa,WAAWqD,aAFS,EAGpBrD,WAAWsD,aAHS,EAKnBxV,MALmB,CAKXyV,IAAD,IAAUrO,QAAQqO,IAAR,CALE,EAMnBnR,IANmB,CAMd,IANc,CAAtB;EAQAzC,SAASqD,IAAI,gBAAJ,CAAT,EAAgCoQ,aAAhC;EACAzT,SAASqD,IAAI,eAAJ,CAAT,EAA+BgN,WAAWb,aAAX,IAA4B,EAA3D;EAEAxP,SAASqD,IAAI,gBAAJ,CAAT,EAAgCgN,WAAWwD,cAAX,IAA6B,EAA7D;EACA7T,SAASqD,IAAI,gBAAJ,CAAT,EAAgCgN,WAAWyD,cAAX,IAA6B,EAA7D;EACA9T,SAASqD,IAAI,gBAAJ,CAAT,EAAgCgN,WAAW0D,cAAX,IAA6B,EAA7D;EAMA,MAAMC,cAAc,kBAAWC,QAAX,wBAAqBC,UAArB,KAAmC,EAAvD;;EACA,IAAI7Q,IAAI8Q,OAAJ,IAAe9Q,IAAI8Q,OAAJ,YAAuBC,iBAA1C,EAA6D;IAC3D,MAAMC,cAAchR,IAAI8Q,OAAJ,CAAYrW,aAAZ,CAA0B,QAA1B,EAAoC0B,KAAxD;IACA,MAAM8U,cAAcD,gBAAgBA,YAAYE,WAAZ,EAApC;IAEAvU,SACEqD,IAAI,SAAJ,CADF,EAEEiR,cAAcN,YAAYO,WAAZ,EAAd,GAA0CP,WAF5C;EAE4C,CAN9C,MAQO;IACLhU,SAASqD,IAAI,SAAJ,CAAT,EAAyB2Q,WAAzB;EAAyB;;EAG3BhU,SAASqD,IAAI,cAAJ,CAAT,EAA8BgN,WAAW8D,OAAX,IAAsB,EAApD;EACAnU,SAASqD,IAAI,aAAJ,CAAT,EAA6BgN,WAAWmE,QAAX,IAAuB,EAApD;AAAoD;;AAwB/C,+BACL5C,IADK,EAELoB,GAFK,EAGa;EAClB,MAAM3P,MAAMmQ,0BAA0B5B,IAA1B,EAAgCoB,GAAhC,CAAZ;EACA,MAAMyB,SAA2B,EAAjC;;EACA,WAAW,CAAC/W,GAAD,EAAM6B,KAAN,CAAX,IAA2B3B,OAAOC,OAAP,CAAewF,GAAf,CAA3B,EAAgD;IAC9C,IAAI9D,+BAAOC,KAAX,EAAkB;MAChBiV,OAAO/W,GAAP,IAAc6B,MAAMC,KAApB;IAAoB;EAAA;;EAIxB,OAAOiV,MAAP;AAAO;;AAuBF,+BAA+BC,QAA/B,EAAmE;EACxE,MAAMzI,aAAa,EAAnB;;EAEA,IAAIyI,SAAS,gBAAT,CAAJ,EAAgC;IAC9BzI,WAAWhJ,IAAX,CAAgByR,SAAS,gBAAT,CAAhB;EAAyB,CAD3B,MAEO;IACLzI,WAAWhJ,IAAX,CAAgByR,SAAS,eAAT,KAA6B,EAA7C;IACAzI,WAAWhJ,IAAX,CAAgByR,SAAS,eAAT,KAA6B,EAA7C;IACAzI,WAAWhJ,IAAX,CAAgByR,SAAS,eAAT,KAA6B,EAA7C;EAA6C;;EAG/CzI,WAAWhJ,IAAX,CAAgByR,SAAS,gBAAT,KAA8B,EAA9C;EACAzI,WAAWhJ,IAAX,CAAgByR,SAAS,gBAAT,KAA8B,EAA9C;EACAzI,WAAWhJ,IAAX,CAAgByR,SAAS,gBAAT,KAA8B,EAA9C;EACAzI,WAAWhJ,IAAX,CAAgByR,SAAS,aAAT,KAA2B,EAA3C;;EAEA,IAAIA,SAAS,cAAT,CAAJ,EAA8B;IAC5BzI,WAAWhJ,IAAX,CAAgByR,SAAS,cAAT,CAAhB;EAAyB,CAD3B,MAEO;IACLzI,WAAWhJ,IAAX,CAAgByR,SAAS,SAAT,KAAuB,EAAvC;EAAuC;;EAGzC,OAAOzI,WAAW9N,MAAX,CAAmByV,IAAD,IAAUrO,QAAQqO,IAAR,CAA5B,EAA2CnR,IAA3C,CAAgD,IAAhD,CAAP;AAAuD;;AAGlD,6BACLkS,OADK,EAELpV,KAFK,EAGC;EACN,MAAMqS,OAAOgD,eAAerV,KAAf,CAAb;;EACA,IAAI,CAACqS,IAAL,EAAW;IACT;EAAA;;EAGF,MAAMvB,aAAawE,oBAAoBF,OAApB,CAAnB;EACAG,sBAAsBlD,IAAtB,EAA4BrS,KAA5B,EAAmC8Q,UAAnC;AAAmC;;AAS9B,mCACLsE,OADK,EAEa;EAzZpB;;EA0ZE,MAAMF,SAA2B,EAAjC;EAEA,MAAMhB,gBAAgB,CACpBkB,QAAQI,UAAR,CAAmBvF,aADC,EAEpBmF,QAAQI,UAAR,CAAmBrB,aAFC,EAGpBiB,QAAQI,UAAR,CAAmBpB,aAHC,EAKnBxV,MALmB,CAKXyV,IAAD,IAAUrO,QAAQqO,IAAR,CALE,EAMnBnR,IANmB,CAMd,IANc,CAAtB;EAQAgS,OAAO,gBAAP,IAA2BhB,aAA3B;EACAgB,OAAO,eAAP,IAA0BE,QAAQI,UAAR,CAAmBvF,aAA7C;EACAiF,OAAO,eAAP,IAA0BE,QAAQI,UAAR,CAAmBrB,aAA7C;EACAe,OAAO,eAAP,IAA0BE,QAAQI,UAAR,CAAmBpB,aAA7C;EACAc,OAAO,gBAAP,IAA2BE,QAAQI,UAAR,CAAmBlB,cAA9C;EACAY,OAAO,gBAAP,IAA2BE,QAAQI,UAAR,CAAmBjB,cAA9C;EACAW,OAAO,gBAAP,IAA2BE,QAAQI,UAAR,CAAmBhB,cAA9C;EACAU,OAAO,SAAP,IAAoB,cAAQM,UAAR,CAAmBd,QAAnB,wBAA6BC,UAAjD;EACAO,OAAO,cAAP,IAAyBE,QAAQI,UAAR,CAAmBZ,OAA5C;EACAM,OAAO,aAAP,IAAwBE,QAAQI,UAAR,CAAmBP,QAA3C;EAEA,OAAOC,MAAP;AAAO;;AAaF,oCACLO,SADK,EAELC,YAFK,EAGI;EACT,WAAW,CAACvX,GAAD,EAAM8B,KAAN,CAAX,IAA2B5B,OAAOC,OAAP,CAAemX,SAAf,CAA3B,EAAsD;IACpD,IAAIC,aAAavX,GAAb,MAAsB8B,KAA1B,EAAiC,OAAO,IAAP;EAAO;;EAE1C,OAAO,KAAP;AAAO,C;;;AC/aF,8BACL0V,cADK,EAELC,WAFK,EAGQ;EACb,IAAIA,WAAJ,EAAiB;IACf,MAAMhW,UAAUsM,wBAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAzC,CAAhB;IAQA,MAAM,CAAC2J,SAAD,EAAYC,QAAZ,IAAwBrX,MAAMC,IAAN,CAC5BkB,QAAQ6D,gBAAR,CAA0C,aAA1C,CAD4B,CAA9B;IAIA,MAAMsS,QAAQH,YAAY3S,KAAZ,CAAkB,GAAlB,CAAd;IAEA4S,UAAUrW,WAAV,GAAwBuW,MAAM,CAAN,EAASvS,IAAT,EAAxB;IACAsS,SAAStW,WAAT,GAAuBuW,MAAMzT,KAAN,CAAY,CAAZ,EAAeY,IAAf,CAAoB,GAApB,EAAyBM,IAAzB,EAAvB;;IAGA,IAAImS,eAAe,eAAf,CAAJ,EAAqC;MACnC,MAAMK,OAAOnY,SAASsB,aAAT,CAAuB,MAAvB,CAAb;MACA6W,KAAKxW,WAAL,GAAmBmW,eAAe,eAAf,CAAnB;MACA/V,QAAQqW,YAAR,CAAqBD,IAArB,EAA2BF,QAA3B;MACAlW,QAAQqW,YAAR,CAAqBpY,SAASsB,aAAT,CAAuB,IAAvB,CAArB,EAAmD2W,QAAnD;IAAmD;;IAErD,IAAIH,eAAe,eAAf,CAAJ,EAAqC;MACnC,MAAMK,OAAOnY,SAASsB,aAAT,CAAuB,MAAvB,CAAb;MACA6W,KAAKxW,WAAL,GAAmBmW,eAAe,eAAf,CAAnB;MACA/V,QAAQqW,YAAR,CAAqBD,IAArB,EAA2BF,QAA3B;MACAlW,QAAQqW,YAAR,CAAqBpY,SAASsB,aAAT,CAAuB,IAAvB,CAArB,EAAmD2W,QAAnD;IAAmD;;IAGrD,OAAOlW,OAAP;EAAO,CAhCT,MAiCO;IACL,MAAMiW,YACJF,eAAe,gBAAf,KAAoCA,eAAe,eAAf,CAApC,IAAuE,EADzE;IAEA,MAAMO,QAAQP,eAAe,eAAf,CAAd;IACA,MAAMQ,QAAQR,eAAe,eAAf,CAAd;IACA,MAAMG,WAAW,CACfH,eAAe,gBAAf,KAAoC,EADrB,EAEfA,eAAe,gBAAf,KAAoC,EAFrB,EAGfA,eAAe,gBAAf,KAAoC,EAHrB,EAIf,GAAGA,eAAe,gBAAf,KAAoC,MACrCA,eAAe,aAAf,KAAiC,IALpB,EAOfA,eAAef,OAAf,IAA0Be,eAAe,cAAf,CAA1B,IAA4D,EAP7C,EASd/W,MATc,CASPoH,OATO,EAUd9C,IAVc,CAUT,IAVS,CAAjB;IAWA,MAAMkT,eAAe,CAACP,SAAD,EAAYK,KAAZ,EAAmBC,KAAnB,EAA0BL,QAA1B,EAAoClX,MAApC,CAA2CoH,OAA3C,CAArB;IACA,MAAMqQ,mBAAmBD,aACtBtS,GADsB,CACjBwS,GAAD,IAAS,SAASA,YADA,EAEtBpT,IAFsB,CAEjB,QAFiB,CAAzB;IAGA,MAAMtD,UAAUsM,wBAAyC;AAAA,gBAC7CmK;AAAA,OADI,CAAhB;IAGA,OAAOzW,OAAP;EAAO;AAAA,C;;;AChFX;AAEA,mBAAa;EAAbQ,cAFA;IAUE,uBAAkB,IAAlB;IAES,4BAAuB,IAAImW,aAAJ,EAAvB;IACT,8BAAyB,KAAzB;EAAyB;;AAXd,CAAb;AA4BA,IAAMC,SAAS,IAAIC,MAAJ,EAAf;AAGApY,OAAOqK,cAAP,CAAsB8N,MAAtB,EAA8B,sBAA9B,EAAsD;EACpDE,cAAc,KADsC;EAEpDC,UAAU;AAF0C,CAAtD,E;;AC5BA,IAAMC,0BAA0B,sCAAhC;AACA,IAAMC,kCACJ,kDADF;AAEA,IAAMC,2BAA2B,iBAAjC;;AA2BO,sBACLC,WADK,EAELC,YAFK,EAGC;EAEN,IAAI,CAACR,OAAOS,eAAZ,EAA6B;EAG7B,MAAMlR,WAAWlG,OAAOqX,QAAP,CAAgBnR,QAAjC;EACA,MAAMoR,WACJC,cAAcrR,QAAd,KAA2BsR,eAAetR,QAAf,CAA3B,GACI8Q,+BADJ,GAEID,uBAHN;EAIA,MAAMU,MAAM,GAAGH,YAAYL,iDAAiDC,aAA5E;EAEA,MAAM;IAAEQ,kBAAF;IAAsBC,eAAtB;IAAuCC;EAAvC,IAAmDT,YAAzD;EAEA,MAAMU,UAAU;IACdC,QAAQ,QADM;IAEdC,QAAQ,mBAFM;IAGdV,UAAU;MAERW,WAAWN,mBAAmB,CAAnB,CAFH;MAGRO,UAAUP,mBAAmB,CAAnB;IAHF,CAHI;IAQdQ,WAAW,8BARG;IASdN,OATc;IAUdO,WAAWR;EAVG,CAAhB;EAaAS,MAAMX,GAAN,EAAW;IACTY,QAAQ,MADC;IAETC,SAAS,IAAIC,OAAJ,CAAY;MACnB,cAAc,oBAAoBxP,WAAWyP,UAAUC,WADpC;MAEnB,gBAAgB;IAFG,CAAZ,CAFA;IAMTC,MAAMtT,KAAKwG,SAAL,CAAeiM,OAAf;EANG,CAAX;AAMuB,C;;;AC/CzB,IAAMc,YAAWtM,wBAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7C,CAAjB;;AAxBA;;AAiGO,qDAA+CI,iBAA/C,CAAgG;EAAhGlM,cAjGP;IAiGO;;IACLkG;;IAcAA,oCAAwB,EAAxB;;IAuBA,eAAgD,KAAhD;;IAGAA;;IACAA;;IAOA,cAAS,CACP8O,OADO,EAEPO,cAFO,KAGE;MACT3O,mBAAKyR,QAAL,EAAgBrD,OAAhB;;MACApO,mBAAK0R,WAAL,EAAmB/C,cAAnB;;MACA,MAAM;QAAEgD,QAAF;QAAYC,OAAZ;QAAqBC;MAArB,IAA6CrS,mBAAKsS,SAAL,CAAnD;;MAEA,IAAI,KAAKC,OAAT,EAAkB;QAChBJ,SAASjJ,eAAT,CAAyB,aAAzB;QACAkJ,QAAQ7B,WAAR,GAAsB,KAAKA,WAA3B;;QACA,IAAI,OAAO,KAAKgC,OAAZ,KAAwB,QAA5B,EAAsC;UACpC,MAAM;YAAEC,eAAF;YAAmB5N,KAAnB;YAA0B6N,YAA1B;YAAwCC;UAAxC,IACJ,KAAKH,OADP;UAEAC,oBACGJ,QAAQI,eAAR,GAA0B,KAAKD,OAAL,CAAaC,eAD1C;UAEA5N,UAAUwN,QAAQxN,KAAR,GAAgB,KAAK2N,OAAL,CAAa3N,KAAvC;UACA6N,iBAAiBL,QAAQK,YAAR,GAAuBA,YAAxC;UACAC,oBAAoB,MAApB,KACGN,QAAQM,eAAR,GAA0BA,eAD7B;QAC6B;;QAE/BN,QAAQxD,OAAR,GAAkBA,OAAlB;MAAkB,CAbpB,MAcO;QACLuD,SAAShM,YAAT,CAAsB,aAAtB,EAAqC,MAArC;MAAqC;;MAGvC,MAAMwM,iBACJ/D,QAAQI,UAAR,CAAmB4D,UAAnB,IACAhE,QAAQI,UAAR,CAAmB6D,YADnB,IAEAjE,QAAQI,UAAR,CAAmB7F,OAHrB;MAMAkJ,oBAAoB5Z,SAApB,GAAgC,EAAhC;MACA4Z,oBAAoBnZ,WAApB,CACE4Z,qBAAqB3D,cAArB,EAAqCwD,cAArC,CADF;IACuC,CAlCzC;;IAsCA7S,iCAAe,MAAY;MACzB,KAAKxF,aAAL,CACE,IAAI2H,eAAJ,CAAsD,QAAtD,EAAgE,QAAhE,CADF;IACkE,CAFpE;;IAMA,eAAU,MAAY;MACpB,KAAK3H,aAAL,CACE,IAAI2H,eAAJ,CAAsD,QAAtD,EAAgE,QAAhE,CADF;IACkE,CAFpE;;IAMA,cAAS,MAAY;MACnB,KAAK3H,aAAL,CACE,IAAI2H,eAAJ,CACE,QADF,EAEE,UAFF,CADF;MAOA8Q,aAAa,KAAKxC,WAAlB,EAA+B;QAC7BQ,oBAAoB/Q,mBAAKiS,QAAL,EAAce,QAAd,CAAuBC,WADd;QAK7BjC,iBAAiBhR,mBAAKiS,QAAL,EAAcjD,UAAd,CAAyB6D,YALb;QAM7B5B,SAAS;UACP9H,SAAS+J,sBAAsBlT,mBAAKkS,WAAL,CAAtB;QADF;MANoB,CAA/B;IAOwC,CAf1C;;IAqBApS,6BAAWC,eAAX;;IACAD,wCAAsBC,eAAtB;;IACAD,2CAAyBC,eAAzB;EAAyB;;EAvHrB,eAAgC;IAClC,OAAOiS,SAAP;EAAO;;EAGL,oBAAwB;IAC1B,OAAO1K,aAAP;EAAO;;EAGL,wBAA4B;IAC9B,OAAOC,YAAY,mCAAZ,EAAiD,KAAK3C,KAAtD,CAAP;EAA6D;;EAK3D,YAAe;IACjB,OAAO5E,mBAAKmT,eAAL,CAAP;EAAY;;EAGV,UAAMvO,KAAN,EAAoB;IACtBpE,mBAAK2S,eAAL,EAAsBvO,KAAtB;;IAEA,IAAI,CAAC5E,mBAAKsS,SAAL,CAAD,IAAkB,CAAC1N,KAAvB,EAA8B;MAC5B;IAAA;;IAGF,KAAKxD,uBAAL,CACEmG,YAAY,mCAAZ,EAAiD3C,KAAjD,CADF;;IAIA,MAAM;MAAEwO,YAAF;MAAgBC;IAAhB,IAA8BrT,mBAAKsS,SAAL,CAApC;;IAEAc,aAAa3a,SAAb,GAAyB6a,QAAQ,UAAR,EAAoB1O,KAApB,CAAzB;IACAyO,UAAU5a,SAAV,GAAsB6a,QAAQ,OAAR,EAAiB1O,KAAjB,CAAtB;EAAuC;;EAyFzClE,oBAA0B;IACxB,MAAMA,iBAAN;;IAEAF,mBAAK8R,SAAL,EAAgBtI,aAAsB,IAAtB,EAA4B;MAC1CuJ,kCAAkC,mCADQ;MAE1CC,OAAO,QAFmC;MAG1CC,kBAAkB,mBAHwB;MAI1CtB,UAAU,WAJgC;MAK1CC,SAAS,UALiC;MAO1CgB,cAAc,eAP4B;MAQ1CC,WAAW,YAR+B;MAU1CK,eAAe,gBAV2B;MAW1CC,cAAc,eAX4B;MAa1CtB,qBAAqB;IAbqB,CAA5B,CAAhB;;IAgBA,MAAM;MACJmB,KADI;MAEJC,gBAFI;MAGJJ,SAHI;MAIJK,aAJI;MAKJC,YALI;MAMJtB;IANI,IAOFrS,mBAAKsS,SAAL,CAPJ;;IAUAkB,MAAMrN,YAAN,CAAmB,iBAAnB,EAAsCnG,mBAAK4T,mBAAL,CAAtC;IACAJ,MAAMrN,YAAN,CAAmB,kBAAnB,EAAuCnG,mBAAK6T,sBAAL,CAAvC;IACAR,UAAUlN,YAAV,CAAuB,eAAvB,EAAwCnG,mBAAK8T,QAAL,CAAxC;IAEAN,MAAMjV,EAAN,GAAWyB,mBAAK8T,QAAL,CAAX;IACAL,iBAAiBlV,EAAjB,GAAsByB,mBAAK4T,mBAAL,CAAtB;IACAvB,oBAAoB9T,EAApB,GAAyByB,mBAAK6T,sBAAL,CAAzB;IAGA,MAAME,UAAU9b,MAAMC,IAAN,CAAW,KAAK+E,gBAAL,CAAsB,iBAAtB,CAAX,CAAhB;;IACA,WAAW+W,MAAX,IAAqBD,OAArB,EAA8B;MAC5BC,OAAO1S,gBAAP,CAAwB,SAAxB,EAAmC2S,iBAAnC;IAAmC;;IAIrCZ,UAAU/R,gBAAV,CAA2B,OAA3B,EAAoCtB,mBAAKkU,YAAL,CAApC;IACAR,cAAcpS,gBAAd,CAA+B,OAA/B,EAAwC,KAAK6S,OAA7C;IACAR,aAAarS,gBAAb,CAA8B,OAA9B,EAAuC,KAAK8S,MAA5C;IAEA,MAAMxP,QAAQ,KAAKA,KAAnB;;IACA,IAAIA,KAAJ,EAAW;MACT,MAAM;QAAEwO,YAAF;QAAgBC;MAAhB,IAA8BrT,mBAAKsS,SAAL,CAApC;;MAEAc,aAAa3a,SAAb,GAAyB6a,QAAQ,UAAR,EAAoB1O,KAApB,CAAzB;MACAyP,WAAU5b,SAAV,GAAsB6a,QAAQ,OAAR,EAAiB1O,KAAjB,CAAtB;IAAuC;EAAA;;EAI3CyF,uBAA6B;IAC3B,MAAM;MAAEgJ,SAAF;MAAaK;IAAb,IAA+B1T,mBAAKsS,SAAL,CAArC;;IAGAe,UAAU3R,mBAAV,CAA8B,OAA9B,EAAuC1B,mBAAKkU,YAAL,CAAvC;IACAR,cAAchS,mBAAd,CAAkC,OAAlC,EAA2C,KAAKyS,OAAhD;EAAgD;;AA1LmD,CAAhG;AACL7B;AAcAa;AA0BAlB;AACAC;AA6CAgC;AAiCAJ;AACAF;AACAC;AA0EFxa,OAAOka,gCAAP,GAA0CA,gCAA1C;;AAEA,IAAI,CAACla,OAAO6R,cAAP,CAAsBC,GAAtB,CAA0B,qCAA1B,CAAL,EAAuE;EACrED,eAAeE,MAAf,CACE,qCADF,EAEEmI,gCAFF;AAEE,C;;;ACzRJ,IAAMe,YAAW5O,wBAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7C,CAAjB;;AAjBA;;AA0EO,uDAAiDI,iBAAjD,CAAkG;EAAlGlM,cA1EP;IA0EO;;IACLkG;;IAcAA,oCAAwB,EAAxB;;IA2BA,cAAUqP,cAAD,IAA4C;MAEnD,MAAM;QAAEoF;MAAF,IAAmBvU,mBAAKwU,SAAL,CAAzB;;MACAD,aAAa9b,SAAb,GAAyB,EAAzB;MACA8b,aAAarb,WAAb,CAAyB4Z,qBAAqB3D,cAArB,CAAzB;IAA8C,CAJhD;;IAOArP,kCAAe,MAAY;MACzB,KAAKxF,aAAL,CACE,IAAI2H,eAAJ,CAAsD,QAAtD,EAAgE,QAAhE,CADF;IACkE,CAFpE;;IAMA,cAAS,MAAY;MACnB,KAAK3H,aAAL,CACE,IAAI2H,eAAJ,CACE,QADF,EAEE,UAFF,CADF;IAGI,CAJN;;IAUAnC,8BAAWC,eAAX;;IACAD,yCAAsBC,eAAtB;;IACAD,oCAAkBC,eAAlB;EAAkB;;EAhEd,eAAgC;IAClC,OAAOuU,SAAP;EAAO;;EAGL,oBAAwB;IAC1B,OAAOhN,aAAP;EAAO;;EAGL,wBAA4B;IAC9B,OAAOC,YAAY,qCAAZ,EAAmD,KAAK3C,KAAxD,CAAP;EAA+D;;EAK7D,YAAe;IACjB,OAAO5E,mBAAKyU,eAAL,CAAP;EAAY;;EAGV,UAAM7P,KAAN,EAAoB;IACtBpE,mBAAKiU,eAAL,EAAsB7P,KAAtB;;IAEA,IAAI,CAAC5E,mBAAKwU,SAAL,CAAD,IAAkB,CAAC5P,KAAvB,EAA8B;MAC5B;IAAA;;IAGF,KAAKxD,uBAAL,CACEmG,YAAY,qCAAZ,EAAmD3C,KAAnD,CADF;;IAIA,MAAM;MAAEwO,YAAF;MAAgBC;IAAhB,IAA8BrT,mBAAKwU,SAAL,CAApC;;IAEApB,aAAa3a,SAAb,GAAyB6a,QAAQ,UAAR,EAAoB1O,KAApB,CAAzB;IACAyO,UAAU5a,SAAV,GAAsB6a,QAAQ,OAAR,EAAiB1O,KAAjB,CAAtB;EAAuC;;EAkCzClE,oBAA0B;IACxB,MAAMA,iBAAN;;IAEAF,mBAAKgU,SAAL,EAAgBxK,aAAsB,IAAtB,EAA4B;MAC1CwJ,OAAO,QADmC;MAE1CC,kBAAkB,mBAFwB;MAI1CL,cAAc,eAJ4B;MAK1CC,WAAW,YAL+B;MAO1CkB,cAAc,eAP4B;MAS1CZ,cAAc;IAT4B,CAA5B,CAAhB;;IAYA,MAAM;MAAEH,KAAF;MAASC,gBAAT;MAA2BJ,SAA3B;MAAsCkB,YAAtC;MAAoDZ;IAApD,IACJ3T,mBAAKwU,SAAL,CADF;;IAIAhB,MAAMrN,YAAN,CAAmB,iBAAnB,EAAsCnG,mBAAK0U,oBAAL,CAAtC;IACAlB,MAAMrN,YAAN,CAAmB,kBAAnB,EAAuCnG,mBAAK2U,eAAL,CAAvC;IACAtB,UAAUlN,YAAV,CAAuB,eAAvB,EAAwCnG,mBAAK4U,SAAL,CAAxC;IAEApB,MAAMjV,EAAN,GAAWyB,mBAAK4U,SAAL,CAAX;IACAnB,iBAAiBlV,EAAjB,GAAsByB,mBAAK0U,oBAAL,CAAtB;IACAH,aAAahW,EAAb,GAAkByB,mBAAK2U,eAAL,CAAlB;IAGA,MAAMZ,UAAU9b,MAAMC,IAAN,CAAW,KAAK+E,gBAAL,CAAsB,iBAAtB,CAAX,CAAhB;;IACA,WAAW+W,MAAX,IAAqBD,OAArB,EAA8B;MAC5BC,OAAO1S,gBAAP,CAAwB,SAAxB,EAAmC2S,iBAAnC;IAAmC;;IAIrCZ,UAAU/R,gBAAV,CAA2B,OAA3B,EAAoCtB,mBAAK6U,aAAL,CAApC;IACAlB,aAAarS,gBAAb,CAA8B,OAA9B,EAAuC,KAAK8S,MAA5C;IAEA,MAAMxP,QAAQ,KAAKA,KAAnB;;IACA,IAAIA,KAAJ,EAAW;MACT,MAAM;QAAEwO,YAAF;QAAgBC;MAAhB,IAA8BrT,mBAAKwU,SAAL,CAApC;;MAEApB,aAAa3a,SAAb,GAAyB6a,QAAQ,UAAR,EAAoB1O,KAApB,CAAzB;MACAyP,WAAU5b,SAAV,GAAsB6a,QAAQ,OAAR,EAAiB1O,KAAjB,CAAtB;IAAuC;EAAA;;EAI3CyF,uBAA6B;IAC3B,MAAM;MAAEgJ,SAAF;MAAaM;IAAb,IAA8B3T,mBAAKwU,SAAL,CAApC;;IAGAnB,UAAU3R,mBAAV,CAA8B,OAA9B,EAAuC1B,mBAAK6U,aAAL,CAAvC;IACAlB,aAAajS,mBAAb,CAAiC,OAAjC,EAA0C,KAAK0S,MAA/C;EAA+C;;AAxHsD,CAAlG;AACLI;AAcAC;AAkCAI;AAgBAD;AACAF;AACAC;AA+DFtb,OAAOyb,kCAAP,GAA4CA,kCAA5C;;AAEA,IAAI,CAACzb,OAAO6R,cAAP,CAAsBC,GAAtB,CAA0B,wCAA1B,CAAL,EAA0E;EACxED,eAAeE,MAAf,CACE,wCADF,EAEE0J,kCAFF;AAEE,C;;;ACjNJ;AAMA;AACA;AAgFA,IAAMC,YAAWrP,wBAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7C,CAAjB;;AAvFA;;AAmHO,8CAAwCI,iBAAxC,CAAyF;EAAzFlM,cAnHP;IAmHO;;IACLkG,0BAAQ,KAAR;;IAEAA;;IACAA;;IAcAA,oCAAwB,EAAxB;EAAwB;;EAZpB,eAAgC;IAClC,OAAOiV,SAAP;EAAO;;EAGL,oBAAwB;IAC1B,OAAOzN,aAAP;EAAO;;EAGL,wBAA4B;IAC9B,OAAOC,YAAY,4BAAZ,EAA0C,KAAK3C,KAA/C,CAAP;EAAsD;;EAKpD,YAAe;IACjB,OAAO5E,mBAAKgV,eAAL,CAAP;EAAY;;EAGV,UAAMpQ,KAAN,EAAoB;IACtBpE,mBAAKwU,eAAL,EAAsBpQ,KAAtB;;IAEA,IAAI,CAAC5E,mBAAKiV,SAAL,CAAD,IAAkB,CAACrQ,KAAvB,EAA8B;MAC5B;IAAA;;IAGF,KAAKxD,uBAAL,CACEmG,YAAY,4BAAZ,EAA0C3C,KAA1C,CADF;;IAKA,MAAM;MAAEsQ,cAAF;MAAkBC;IAAlB,IAAuCnV,mBAAKiV,SAAL,CAA7C;;IACAC,eAAetQ,KAAf,GAAuBA,KAAvB;IACAuQ,iBAAiBvQ,KAAjB,GAAyBA,KAAzB;EAAyB;;EAG3BlE,oBAA0B;IACxB,MAAMA,iBAAN;;IAEAF,mBAAKyU,SAAL,EAAgBjL,aAAsB,IAAtB,EAA4B;MAC1CoL,2BAA2B,4BADe;MAE1CF,gBAAgB,iBAF0B;MAG1CC,kBAAkB;IAHwB,CAA5B,CAAhB;;IAMA,MAAM;MAAEC;IAAF,IAAgCpV,mBAAKiV,SAAL,CAAtC;;IACAI,2BAA0BlP,YAA1B,CAAuC,aAAvC,EAAsD,MAAtD;IAEA,MAAMvB,QAAQ,KAAKA,KAAnB;;IACA,IAAIA,KAAJ,EAAW;MACT,MAAM;QAAEsQ,cAAF;QAAkBC;MAAlB,IAAuCnV,mBAAKiV,SAAL,CAA7C;;MACAC,eAAetQ,KAAf,GAAuBA,KAAvB;MACAuQ,iBAAiBvQ,KAAjB,GAAyBA,KAAzB;IAAyB;EAAA;;EAI7ByF,uBAA6B;IAC3B7J,mBAAK8U,UAAL,EAAkB,IAAlB;EAAkB;;EAGpBC,OAAa;IApLf;;IAqLI/U,mBAAKgV,KAAL,EAAa,KAAb;;IAEA,IAAI,CAACxV,mBAAKiV,SAAL,CAAL,EAAoB;MAClB;IAAA;;IAGF,MAAM;MAAEG;IAAF,IAAgCpV,mBAAKiV,SAAL,CAAtC;;IAEAI,2BAA0BlP,YAA1B,CAAuC,aAAvC,EAAsD,MAAtD;IAEA,yBAAKmP,UAAL,yBAAiBG,UAAjB;IACAC,SAASC,GAAT;EAAS;;EAGLC,KACJzG,cADI,EAEJ0G,UAFI,EAGJjH,OAHI,EAI+B;IAAA;MAvMvC;;MAwMI,IAAI,CAAC5O,mBAAKiV,SAAL,CAAL,EAAoB;QAClB,OAAO;UAAE1T,MAAM;QAAR,CAAP;MAAe;;MAGjB,MAAM;QAAE6T,qDAAF;QAA6BF,cAA7B;QAA6CC;MAA7C,IACJnV,mBAAKiV,SAAL,CADF;;MAGA,MAAM;QAAE1E,WAAF;QAAegC,UAAU,KAAzB;QAAgC3N;MAAhC,IAA0CiR,UAAhD;MAGA,KAAKjR,KAAL,GAAaA,KAAb;;MAGA,IAAIgK,OAAJ,EAAa;QACXsG,eAAehM,eAAf,CAA+B,aAA/B;QACAiM,iBAAiBhP,YAAjB,CAA8B,aAA9B,EAA6C,MAA7C;QAEA+O,eAAe3C,OAAf,GAAyBA,OAAzB;QACA2C,eAAe3E,WAAf,GAA6BA,WAA7B;QAEA2E,eAAe9K,MAAf,CAAsBwE,OAAtB,EAA+BO,cAA/B;MAA+B,CAPjC,MAQO;QACL+F,eAAe/O,YAAf,CAA4B,aAA5B,EAA2C,MAA3C;QACAgP,iBAAiBjM,eAAjB,CAAiC,aAAjC;QAEAiM,iBAAiB/K,MAAjB,CAAwB+E,cAAxB;MAAwB;;MAG1B3O,mBAAKgV,KAAL,EAAa,IAAb;;MAGAH,2BAA0BnM,eAA1B,CAA0C,aAA1C;MAEAwM,SAASI,EAAT;MAEA,MAAMC,uBAAuBnH,UAAUsG,cAAV,GAA2BC,gBAAxD;;MAEA3U,mBAAK8U,UAAL,EAAkBU,gBAAgBX,0BAAhB,EAA2C;QAC3DY,eAAeF,oBAD4C;QAE3DG,mBAAmB,MAAe;UAChC,KAAKX,IAAL;UACA,OAAO,IAAP;QAAO;MAJkD,CAA3C,CAAlB;;MAQA,yBAAKD,UAAL,yBAAiBa,QAAjB;MAGA,OAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;QAC9B,MAAMC,YAAYP,oBAAlB;;QACA,MAAMQ,KACJ5X,CADS,IAEA;UACT2X,UAAU5U,mBAAV,CAA8B,QAA9B,EAAwC6U,EAAxC;UAEA,MAAMjQ,SAAS3H,EAAEkD,MAAjB;UACA,KAAK0T,IAAL;;UAEA,IAAIjP,WAAW,QAAf,EAAyB;YACvB+P,QAAQ;cACN9U,MAAM,QADA;cAENqN;YAFM,CAAR;UAEE,CAHJ,MAKO;YACLyH,QAAQ;cACN9U,MAAM+E;YADA,CAAR;UACQ;QAAA,CAfZ;;QAoBAgQ,UAAUhV,gBAAV,CAA2B,QAA3B,EAAqCiV,EAArC;MAAqC,CAtBhC,CAAP;IAsBuC,CAvEJ;EAuEI;;EAUnCC,QACJrH,cADI,EAEJ0G,UAFI,EAG+B;IAAA;MACnC,IAAI,CAAC7V,mBAAKiV,SAAL,CAAL,EAAoB;QAClB,OAAO;UAAE1T,MAAM;QAAR,CAAP;MAAe;;MAGjB,MAAM;QAAEgP,WAAF;QAAe9O,UAAU;MAAzB,IAAgCoU,UAAtC;MAEA,MAAMY,YAAW,IAAIC,cAAJ,CAAmB7R;QAClC0L;MADkC,GAE/B9O,OAF+B,CAAnB,CAAjB;MAMA,MAAMyE,aAAagN,sBAAsB/D,cAAtB,CAAnB;MACA,MAAMwH,oBAAoB,MAAMF,UAASpP,QAAT,CAAkBnB,UAAlB,EAA8B;QAC5D0Q,cAAc5G,OAAO6G;MADuC,CAA9B,CAAhC;MAIA,MAAMjI,UAAU+H,kBAAkBnM,QAAlB,CAA2B,CAA3B,CAAhB;;MAIA,IAAIoE,OAAJ,EAAa;QACX,MAAMkI,oBAAqBC,QAAD,IACxBA,SAAQ/H,UAAR,CAAmBgI,UAAnB,CAA8BC,UAA9B,KACAC,4BAA4BC,KAF9B;;QAGA,MAAM;UAAEC,mBAAmBN;QAArB,IAA2CjB,UAAjD;;QACA,IAAIuB,iBAAiBxI,OAAjB,CAAJ,EAA+B;UAC7B,OAAO;YAAErN,MAAM;UAAR,CAAP;QAAe;MAAA;;MAInB,OAAO,MAAM,KAAKqU,IAAL,CAAUzG,cAAV,EAA0B0G,UAA1B,EAAsCjH,OAAtC,CAAb;IAAmD,CAhChB;EAgCgB;;AAxMyC,CAAzF;AACL4G;AAEAP;AACAK;AAcAN;AAgMF3b,OAAO+b,yBAAP,GAAmCA,yBAAnC;;AAEA,IAAI,CAAC/b,OAAO6R,cAAP,CAAsBC,GAAtB,CAA0B,6BAA1B,CAAL,EAA+D;EAC7DD,eAAeE,MAAf,CACE,6BADF,EAEEgK,yBAFF;AAEE,C;;;AC1UJ;;AAAA;;AAwGO,0CAAoCtP,iBAApC,CAA0E;EAA1ElM,cAxGP;IAwGO;;IAuBLkG,8BAAY,IAAIuX,eAAJ,EAAZ;;IACAvX,6BAAW,IAAIwX,aAAJ,CAAkBtX,mBAAKuX,SAAL,CAAlB,CAAX;;IAoBAzX;;IACAA,6BAA4C,IAAImL,mBAAJ,EAA5C;;IA+CAnL,oCAAkBnB,CAAD,IAA0D;MAEzE,KAAKrE,aAAL,CAAmBqE,EAAE9D,KAAF,EAAnB;IAAqB,CAFvB;;IAKAiF,yCAAuBnB,CAAD,IAAqC;MAEzD,KAAKrE,aAAL,CAAmBqE,EAAE9D,KAAF,EAAnB;IAAqB,CAFvB;;IAKAiF,oCAAmBnB,CAAD,IAAwD;MAExE,KAAKrE,aAAL,CAAmBqE,EAAE9D,KAAF,EAAnB;;MAEA,IAAI,CAACmF,mBAAKwX,MAAL,CAAL,EAAkB;QAChB;MAAA;;MAGF,MAAMb,oBAAoBhY,EAAEkD,MAA5B;;MACA,IACE,CAAC8U,iBAAD,IACA,CAACA,kBAAkBnM,QADnB,IAEA,CAACmM,kBAAkBnM,QAAlB,CAA2B7N,MAH9B,EAIE;QACA;MAAA;;MAGF8a,oBAAoBd,kBAAkBnM,QAAlB,CAA2B,CAA3B,CAApB,EAAmDxK,mBAAKwX,MAAL,CAAnD;IAAwD,CAjB1D;;IAqBA1X,mCAAiB,MAAY;MAnO/B;;MAoOI,IAAI;QACF,MAAMtG,QAA0B,WAAKzB,aAAL,CAAmB,OAAnB,kBAA+B,IAA/D;;QAEAyI,mBAAKgX,MAAL,EAAche,KAAd;;QACAwG,mBAAK0X,QAAL,EAAcle,KAAd,GAAsBA,KAAtB;MAAsB,CAJxB,CAIwB,OACfmF,CADe,EACtB;QACA6B,mBAAKgX,MAAL,EAAc,IAAd;;QACAxX,mBAAK0X,QAAL,EAAcle,KAAd,GAAsB,IAAtB;QAEAme,QAAQ5Q,KAAR,CAAcpI,EAAEiZ,OAAF,IAAajZ,CAA3B;MAA2B;IAAA,CAV/B;;IAcAmB,8BAAY,IAAI+X,gBAAJ,CAAqB7X,mBAAK8X,cAAL,CAArB,CAAZ;EAAsC;;EApGlC,kBAAsB;IACxB,OAAO9X,mBAAKuX,SAAL,EAAehH,WAAtB;EAAsB;;EAEpB,gBAAYwH,QAAZ,EAA8B;IAChC/X,mBAAKuX,SAAL,EAAehH,WAAf,GAA6BwH,QAA7B;EAA6B;;EAqB3B,cAAoC;IACtC,OAAO/X,mBAAK0X,QAAL,EAAcjW,OAArB;EAAqB;;EAEnB,YAAQqI,UAAR,EAA8C;IAChD9J,mBAAK0X,QAAL,EAAcjW,OAAd,GAAwBqI,UAAxB;EAAwB;;EAmBtB,YAAe;IACjB,OAAO9J,mBAAK0X,QAAL,EAAc9S,KAArB;EAAqB;;EAEnB,UAAMA,KAAN,EAAoB;IACtB5E,mBAAK0X,QAAL,EAAc9S,KAAd,GAAsBA,KAAtB;EAAsB;;EAkDxBlE,oBAA0B;IACxB,MAAMA,iBAAN;IAEAsP,OAAOgI,sBAAP,GAAgC,IAAhC;IAGAhY,mBAAK0X,QAAL,EAActR,OAAd,GAAwBpG,mBAAKiY,QAAL,CAAxB;IACAjY,mBAAK0X,QAAL,EAActR,OAAd,CAAsBwQ,YAAtB,GAAqC5G,OAAO6G,oBAA5C;;IAEA7W,mBAAK0X,QAAL,EAAcpW,gBAAd,CAA+B,SAA/B,EAA0CtB,mBAAKkY,eAAL,CAA1C;;IACAlY,mBAAK0X,QAAL,EAAcpW,gBAAd,CAA+B,cAA/B,EAA+CtB,mBAAKmY,oBAAL,CAA/C;;IACAnY,mBAAK0X,QAAL,EAAcpW,gBAAd,CAA+B,UAA/B,EAA2CtB,mBAAKoY,eAAL,CAA3C;;IAEA/gB,SAAS0a,IAAT,CAAc7Y,WAAd,CAA0B8G,mBAAK0X,QAAL,CAA1B;;IAGA1X,mBAAKqY,SAAL,EAAeC,OAAf,CAAuB,IAAvB,EAA6B;MAC3BC,SAAS,IADkB;MAE3BC,WAAW;IAFgB,CAA7B;;IAKAxY,mBAAK8X,cAAL;EAAA;;EAGFzN,uBAA6B;IAC3BrK,mBAAK0X,QAAL,EAAcxc,MAAd;;IAEA8E,mBAAK0X,QAAL,EAAchW,mBAAd,CAAkC,SAAlC,EAA6C1B,mBAAKkY,eAAL,CAA7C;;IACAlY,mBAAK0X,QAAL,EAAchW,mBAAd,CAAkC,cAAlC,EAAkD1B,mBAAKmY,oBAAL,CAAlD;;IACAnY,mBAAK0X,QAAL,EAAchW,mBAAd,CAAkC,UAAlC,EAA8C1B,mBAAKoY,eAAL,CAA9C;;IAEApY,mBAAKqY,SAAL,EAAeI,UAAf;EAAe;;EAGjBC,yBACEC,IADF,EAEEC,QAFF,EAGEC,QAHF,EAIQ;IACN,IAAIF,SAAS,cAAb,EAA6B;MAC3B3Y,mBAAKuX,SAAL,EAAehH,WAAf,GAA6BsI,QAA7B;MACA;IAAA;;IAGF,IAAIF,SAAS,OAAb,EAAsB;MACpB,KAAK/T,KAAL,GAAakU,aAAaD,QAAb,CAAb;MACA;IAAA;;IAKF,MAAME,aAAaJ,KAAKlc,KAAL,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,GAArB,CAAnB;;IAEA,IAAI,CAACmc,QAAL,EAAe;MACb,OAAO7Y,mBAAK0X,QAAL,EAAcjW,OAAd,CAAsBsX,UAAtB,CAAP;IAA6B;;IAI/B/Y,mBAAK0X,QAAL,EAAcjW,OAAd,CAAsBsX,UAAtB,IAAoCF,QAApC;EAAoC;;EAQtCpO,QAAc;IACZzK,mBAAK0X,QAAL,EAAcjN,KAAd;EAAc;;AA9M+D,CAA1E;AAuBL8M;AACAU;AAoBAT;AACAE;AA+CAQ;AAKAC;AAKAC;AAqBAN;AAcAO;AAhIOW,qBATF,CASEC,qBAA+B,CAEpC,cAFoC,EAIpC,OAJoC,EAKpC,UALoC,EAOpC,UAPoC,EAQpC,SARoC,EASpC,MAToC,EAUpC,OAVoC,EAWpC,WAXoC,CAA/B;AA+MT5f,OAAO2f,qBAAP,GAA+BA,qBAA/B;;AAEA,IAAI,CAAC3f,OAAO6R,cAAP,CAAsBC,GAAtB,CAA0B,yBAA1B,CAAL,EAA2D;EACzDD,eAAeE,MAAf,CAAsB,yBAAtB,EAAiD4N,qBAAjD;AAAiD,C;;;ACnUnD;AAYA;AACA;AAkBA,IAAME,WAAW,CAAjB;AAEA,IAAMC,YAAWzT,wBAA6C;AAAA;AAAA;AAAA;AAAA,CAA7C,CAAjB;;AAjCA;;AAmIO,oCACGI,iBADH,CAGP;EAHOlM,cAnIP;IAmIO;;IA6BLkG,4BAAU,IAAImK,YAAJ,CAAiB,EAAjB,CAAV;;IACAnK,8BAAW,IAAIsZ,cAAJ,CAAkBpZ,mBAAKqZ,OAAL,CAAlB,CAAX;;IAsCAvZ,yBAA4B,IAA5B;;IAEAA;;IACAA,8BAA0C,IAAImL,mBAAJ,EAA1C;;IAoEAnL,oCAAkBnB,CAAD,IAAkD;MAEjE,KAAKrE,aAAL,CAAmBqE,EAAE9D,KAAF,EAAnB;IAAqB,CAFvB;;IAKAiF,yCAAuBnB,CAAD,IAAqC;MAEzD,KAAKrE,aAAL,CAAmBqE,EAAE9D,KAAF,EAAnB;IAAqB,CAFvB;;IAKAiF,qCACEnB,CADgB,IAEE2a;MA1RtB;;MA4RI,KAAKhf,aAAL,CAAmBqE,EAAE9D,KAAF,EAAnB;MAEA,MAAM8b,oBAAoBhY,EAAEkD,MAA5B;;MACA,IAAI,CAAC8U,iBAAD,IAAsB,CAACA,kBAAkBnM,QAAlB,CAA2B7N,MAAtD,EAA8D;QAC5D;MAAA;;MAIF,MAAM2N,aAAaiP,qBAAoB5C,kBAAkBnM,QAAlB,CAA2B,CAA3B,CAApB,CAAnB;MACAxK,mBAAKwZ,OAAL,EAAY/f,KAAZ,GAAoB6Q,WAAWX,YAA/B;;MAEA,MAAMrM,MAAM0C,mBAAKyZ,IAAL,CAAZ;;MACA,IAAI,CAACnc,GAAL,EAAU;QACR;MAAA;;MAGF,MAAMkN,WAAWmM,kBAAkBnM,QAAnC;;MAEA,IAAIA,SAAS7N,MAAT,KAAoB,CAAxB,EAA2B;QACzB,MAAMiS,UAAUpE,SAAS,CAAT,CAAhB;QACA,MAAMzM,YAAY,cAAQiR,UAAR,CAAmB0K,UAAnB,wBAAgC,CAAhC,CAAlB;QAEA,MAAMC,UAAS/K,QAAQgL,IAAvB;;QACA,IAAID,OAAJ,EAAY;UACVrc,IAAIuc,KAAJ,CACEC,aAAaxc,GAAb,EAAkByc,aAAaC,OAAb,CAAqBL,OAArB,EAA6BM,WAA7B,EAAlB,CADF;QACiD,CAFnD,MAIO;UACL,MAAMxc,SAASmR,QAAQoE,QAAR,CAAiBC,WAAhC;UACA,MAAMvV,OAAOwc,WAAWnc,SAAX,CAAb;UAEAT,IAAIuc,KAAJ,CAAU;YACRpc,MADQ;YAERC,IAFQ;YAGRI,OAAOT;UAHC,CAAV;QAGS;;QAIX;MAAA;;MAIF,MAAM8c,sBAAsBxD,kBAAkBnM,QAAlB,CAA2BlN,GAA3B,CAAgCsR,OAAD,IAAa;QACtE,IAAIA,QAAQgL,IAAZ,EAAkB;UAChB,OAAOQ,YAAYL,aAAaC,OAAb,CAAqBpL,QAAQgL,IAA7B,EAAmCK,WAAnC,EAAZ,CAAP;QAAsD;;QAGxD,OAAOrL,OAAP;MAAO,CALmB,CAA5B;MAQA,MAAMrR,SAASqc,KAAK;QAClBrY,MAAM,mBADY;QAElBiJ,UAAU2P;MAFQ,CAAL,CAAf;MAIA7c,IAAIuc,KAAJ,CAAUC,aAAaxc,GAAb,EAAkBC,MAAlB,CAAV;IAA4B,CAxDV,CAFpB;;IA6DAuC,kCAAgBnB,CAAD,IAAyB;MACtC,MAAMgD,QAAQ,IAAIM,eAAJ,CAAoB,OAApB,CAAd;MACApK,OAAOwiB,MAAP,CAAc1Y,KAAd,EAAqBkD,mBAChBlG,CADgB,CAArB;MAIA,KAAKrE,aAAL,CAA4BqH,KAA5B;IAA4B,CAN9B;;IA6EA7B,mCAAiB,MAAY;MAC3B,MAAMxC,MAAM0C,mBAAKyZ,IAAL,CAAZ;;MACA,MAAMhY,UAAUoD,mBAAK7E,mBAAKsa,SAAL,EAAc7Y,OAAnB,CAAhB;;MAEA,IAAInE,IAAIid,OAAJ,MAAiBrB,QAArB,EAA+B;QAC7B,OAAOzX,QAAQ+Y,SAAf;QACAxa,mBAAKsa,SAAL,EAAc7Y,OAAd,GAAwBA,OAAxB;QAEA;MAAA;;MAGF,MAAMhE,SAASH,IAAImd,SAAJ,EAAf;MACAza,mBAAKsa,SAAL,EAAc7Y,OAAd,GAAwBiZ,iCACnBjZ,OADmB;QAEtB+Y,WAAW/c;MAFW,EAAxB;IAEa,CAdf;EAce;;EAlQX,kBAAsB;IACxB,OAAOuC,mBAAKqZ,OAAL,EAAa9I,WAApB;EAAoB;;EAElB,gBAAYwH,QAAZ,EAA8B;IAChC/X,mBAAKqZ,OAAL,EAAa9I,WAAb,GAA2BwH,QAA3B;EAA2B;;EAczB,YAAgB;IAClB,OAAO/X,mBAAKwZ,OAAL,EAAY/f,KAAnB;EAAmB;;EAEjB,UAAMof,QAAN,EAAwB;IAC1B7Y,mBAAKwZ,OAAL,EAAY/f,KAAZ,GAAoBof,QAApB;EAAoB;;EAQC,eAAgC;IACrD,OAAOM,SAAP;EAAO;;EAGc,oBAAwB;IAC7C,OAAO7R,aAAP;EAAO;;EAGc,wBAA4B;IACjD,OAAOC,YAAY,QAAZ,EAAsBvH,mBAAKsa,SAAL,EAAc1V,KAApC,CAAP;EAA2C;;EAkBzC,cAA4B;IAC9B,OAAO5E,mBAAKsa,SAAL,EAAc7Y,OAArB;EAAqB;;EAEnB,YAAQqI,UAAR,EAAsC;IACxC9J,mBAAKsa,SAAL,EAAc7Y,OAAd,GAAwBqI,UAAxB;EAAwB;;EAoBtB,YAAe;IACjB,OAAO9J,mBAAKsa,SAAL,EAAc1V,KAArB;EAAqB;;EAEnB,UAAMA,KAAN,EAAoB;IACtB5E,mBAAKsa,SAAL,EAAc1V,KAAd,GAAsBA,KAAtB;;IAEA,MAAMpL,QAAQwG,mBAAKwZ,OAAL,CAAd;;IACA,IAAI,CAAChgB,KAAL,EAAY;MACV;IAAA;;IAGF,KAAK4H,uBAAL,CAA6BmG,YAAY,QAAZ,EAAsB3C,KAAtB,CAA7B;;IACA5E,mBAAKsa,SAAL,EAAc5P,aAAd;EAAc;;EAmFPhK,oBAA0B;IACjC,MAAMA,iBAAN;IAEA,MAAMlH,QAAQ,KAAKzB,aAAL,CAAqC,QAArC,CAAd;IACAyB,MAAM8H,gBAAN,CAAuB,OAAvB,EAAgCtB,mBAAK2a,aAAL,CAAhC;;IAEAna,mBAAKgZ,OAAL,EAAchgB,KAAd;;IAGAwG,mBAAKsa,SAAL,EAAclU,OAAd,GAAwBpG,mBAAK4a,SAAL,CAAxB;IAMA5a,mBAAKsa,SAAL,EAAc9gB,KAAd,GAAsBA,KAAtB;;IACAwG,mBAAKsa,SAAL,EAAchZ,gBAAd,CAA+B,SAA/B,EAA0CtB,mBAAK6a,eAAL,CAA1C;;IACA7a,mBAAKsa,SAAL,EAAchZ,gBAAd,CAA+B,cAA/B,EAA+CtB,mBAAK8a,oBAAL,CAA/C;;IACA9a,mBAAKsa,SAAL,EAAchZ,gBAAd,CAA+B,UAA/B,EAA2CtB,mBAAK+a,gBAAL,CAA3C;;IAEA1jB,SAAS0a,IAAT,CAAc7Y,WAAd,CAA0B8G,mBAAKsa,SAAL,CAA1B;EAA+B;;EAGjCjQ,uBAA6B;IAC3BrK,mBAAKsa,SAAL,EAAcpf,MAAd;;IACA8E,mBAAKsa,SAAL,EAAc9gB,KAAd,GAAsB,IAAtB;;IAEAwG,mBAAKsa,SAAL,EAAc5Y,mBAAd,CAAkC,SAAlC,EAA6C1B,mBAAK6a,eAAL,CAA7C;;IACA7a,mBAAKsa,SAAL,EAAc5Y,mBAAd,CAAkC,cAAlC,EAAkD1B,mBAAK8a,oBAAL,CAAlD;;IACA9a,mBAAKsa,SAAL,EAAc5Y,mBAAd,CAAkC,UAAlC,EAA8C1B,mBAAK+a,gBAAL,CAA9C;EAAmD;;EAGrDrC,yBACEC,IADF,EAEEC,QAFF,EAGEC,QAHF,EAIQ;IACN,IAAIF,SAAS,cAAb,EAA6B;MAC3B3Y,mBAAKqZ,OAAL,EAAa9I,WAAb,GAA2BsI,QAA3B;MACA;IAAA;;IAGF,IAAIF,SAAS,OAAb,EAAsB;MACpB,KAAK/T,KAAL,GAAakU,aAAaD,QAAb,CAAb;MACA;IAAA;;IAKF,MAAME,aAAaJ,KAAKlc,KAAL,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,GAArB,CAAnB;;IAEA,IAAI,CAACmc,QAAL,EAAe;MACb,OAAO7Y,mBAAKsa,SAAL,EAAc7Y,OAAd,CAAsBsX,UAAtB,CAAP;IAA6B;;IAI/B/Y,mBAAKsa,SAAL,EAAc7Y,OAAd,CAAsBsX,UAAtB,IAAoCF,QAApC;EAAoC;;EAQtCpO,QAAc;IACZzK,mBAAKsa,SAAL,EAAc7P,KAAd;EAAc;;EAiChBuQ,QAAQ1d,GAAR,EAAiC;IAC/B,IAAI0C,mBAAKyZ,IAAL,CAAJ,EAAe;MACbzZ,mBAAKyZ,IAAL,EAAU9D,GAAV,CAAc,SAAd,EAAyB3V,mBAAKib,cAAL,CAAzB;IAA8B;;IAGhC,IAAI3d,GAAJ,EAAS;MACPA,IAAIwY,EAAJ,CAAO,SAAP,EAAkB9V,mBAAKib,cAAL,CAAlB;IAAuB;;IAGzBza,mBAAKiZ,IAAL,EAAYnc,GAAZ;EAAY;;EAMd4d,YAAkB;IAChB,KAAKF,OAAL,CAAa,IAAb;EAAa;;EAMfG,MAAM7d,GAAN,EAAsC;IACpC,KAAK0d,OAAL,CAAa1d,GAAb;IACA,KAAKpC,MAAL;IAEA,MAAMkgB,YAAY/jB,SAASsB,aAAT,CAAuB,KAAvB,CAAlB;IACAyiB,UAAUvf,SAAV,GAAsB,eAAtB;IACAuf,UAAUriB,KAAV,CAAgB0B,KAAhB,GAAwB,OAAxB;IACA2gB,UAAUliB,WAAV,CAAsB,IAAtB;IAEA,OAAOkiB,SAAP;EAAO;;EAITC,WAAiB;IACf,KAAKngB,MAAL;IACA,KAAKggB,SAAL;EAAK;;EAGPI,qBAA6B;IAC3B,OAAO,WAAP;EAAO;;AAnWX,CAHO;AA6BLjC;AACAuB;AAsCAnB;AAEAD;AACAc;AAoEAO;AAKAC;AAKAC;AA6DAJ;AA6EAM;AAnROM,eAZF,CAYEtC,qBAA+B,CAEpC,cAFoC,EAIpC,OAJoC,EAMpC,UANoC,EAOpC,SAPoC,EAQpC,MARoC,EASpC,OAToC,EAUpC,oBAVoC,EAWpC,QAXoC,EAYpC,WAZoC,EAapC,UAboC,EAcpC,OAdoC,CAA/B;AAoWT5f,OAAOkiB,eAAP,GAAyBA,eAAzB;;AAEA,IAAI,CAACliB,OAAO6R,cAAP,CAAsBC,GAAtB,CAA0B,mBAA1B,CAAL,EAAqD;EACnDD,eAAeE,MAAf,CAAsB,mBAAtB,EAA2CmQ,eAA3C;AAA2C,C;;;ACtf7C,gD;;ACAA;AAsBA,IAAMC,OAAO,IAAIC,iBAAJ,CAAsB;EAAEC,MAAM,GAAR;EAAaC,cAAc;AAA3B,CAAtB,CAAb;AAEO,IAAMC,gBAAgB,IAAtB;;AAeA,yBACLtX,MADK,EAELuX,MAFK,EAGa;EAClB,MAAM;IAAEphB,KAAF;IAASC;EAAT,IAAoBohB,eAAexX,MAAf,EAAuB,IAAvB,CAA1B;;EACA,QAAQuX,MAAR;IAAQ,KACD,QADC;MAEJ,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;;IAAW,KACR,KADQ;MAEX,OAAO,CAAC,CAAD,EAAInhB,SAAS,CAAb,CAAP;;IAAoB,KACjB,QADiB;MAEpB,OAAO,CAAC,CAAD,EAAK,KAAKA,MAAL,GAAe,CAApB,CAAP;;IAA2B,KACxB,MADwB;MAE3B,OAAO,CAACD,QAAQ,CAAT,EAAY,CAAZ,CAAP;;IAAmB,KAChB,OADgB;MAEnB,OAAO,CAAE,KAAKA,KAAL,GAAc,CAAhB,EAAmB,CAAnB,CAAP;;IAA0B,KACvB,UADuB;MAE1B,OAAO,CAACA,QAAQ,CAAT,EAAYC,SAAS,CAArB,CAAP;;IAA4B,KACzB,WADyB;MAE5B,OAAO,CAAE,KAAKD,KAAL,GAAc,CAAhB,EAAmBC,SAAS,CAA5B,CAAP;;IAAmC,KAChC,aADgC;MAEnC,OAAO,CAACD,QAAQ,CAAT,EAAa,KAAKC,MAAL,GAAe,CAA5B,CAAP;;IAAmC,KAChC,cADgC;MAEnC,OAAO,CAAE,KAAKD,KAAL,GAAc,CAAhB,EAAoB,KAAKC,MAAL,GAAe,CAAnC,CAAP;EAlBJ;AAkB8C;;AA9DhD;;AAuEO,6BAAuB;EAiC5Bd,YACEmiB,cADF,EAEEzX,MAFF,EAGE0X,kBAHF,EAIEte,IAJF,EAKEme,MALF,EAME;IA6BF/b;;IAkBAA,wCAAsB,MAAY;MAChC,CAAC,KAAKmc,aAAN,EAAqB,KAAKC,aAA1B,IAA2CC,gBACzC,KAAKC,aADoC,EAEzC,KAAKP,MAFoC,CAA3C;MAIA,KAAKQ,eAAL,GAAuB;QACrBC,SAAS,KAAKL,aADO;QAErBM,SAAS,KAAKL;MAFO,CAAvB;IAEgB,CAPlB;;IAWApc,qCAAoC;MAClCwc,SAAS,CADyB;MAElCC,SAAS,CAFyB;MAGlCC,SAAS,CAHyB;MAIlCC,SAAS;IAJyB,CAApC;;IAmBA3c,8BAAY,KAAZ;;IAuBAA;;IA2BAA,yCAAwB4c,CAAD,IAA2B;MAChD,IAAI,CAAC,KAAKC,QAAV,EAAoB;MAEpBD,EAAExV,cAAF;MACAwV,EAAEpR,eAAF;;MAEAtL,mBAAK4c,sBAAL,aAA4BF,CAA5B;;MAEArjB,OAAOiI,gBAAP,CAAwB,aAAxB,EAAuCtB,mBAAK6c,oBAAL,CAAvC;MACAxjB,OAAOiI,gBAAP,CAAwB,WAAxB,EAAqCtB,mBAAK8c,kBAAL,CAArC;IAA0C,CAT5C;;IAYAhd,uCAAqB,MAAY;MAC/BzG,OAAOqI,mBAAP,CAA2B,aAA3B,EAA0C1B,mBAAK6c,oBAAL,CAA1C;MACAxjB,OAAOqI,mBAAP,CAA2B,WAA3B,EAAwC1B,mBAAK8c,kBAAL,CAAxC;IAA6C,CAF/C;;IAKAhd,yCAAwB4c,CAAD,IAA2B;MAChDA,EAAExV,cAAF;MACAwV,EAAEpR,eAAF;MAGA,MAAMyR,QAAQ,KAAKC,cAAL,GAAsBN,EAAEO,KAAtC;MACA,MAAMC,QAAQ,KAAKC,cAAL,GAAsBT,EAAEU,KAAtC;MAGA,KAAKC,YAAL,IAAqBN,KAArB;MACA,KAAKO,YAAL,IAAqBJ,KAArB;MAEA,KAAKG,YAAL,GAAoBliB,KAAK0C,GAAL,CAClB1C,KAAKiM,GAAL,CAAS,KAAKmW,QAAL,GAAgB,CAAzB,EAA4B,KAAKF,YAAjC,CADkB,EAEjB,KAAKE,QAAL,GAAgB,CAAhB,GAAqB,EAFJ,CAApB;MAIA,KAAKD,YAAL,GAAoBniB,KAAK0C,GAAL,CAClB1C,KAAKiM,GAAL,CAAS,KAAKoW,SAAL,GAAiB,CAA1B,EAA6B,KAAKF,YAAlC,CADkB,EAEjB,KAAKE,SAAL,GAAiB,CAAjB,GAAsB,EAFL,CAApB;MAMA,MAAMC,eAAe,KAAKC,WAAL,CAAiB,CAAjB,IAAsB,KAAKC,mBAAL,CAAyB,CAAzB,CAA3C;MACA,MAAMC,eAAe,KAAKF,WAAL,CAAiB,CAAjB,IAAsB,KAAKC,mBAAL,CAAyB,CAAzB,CAA3C;MACA,MAAME,SAAS,KAAKR,YAAL,GAAoBI,YAAnC;MACA,MAAMK,SAAS,KAAKR,YAAL,GAAoBM,YAAnC;MAEA,KAAKvB,eAAL,GAAuB;QAAEG,SAASqB,MAAX;QAAmBpB,SAASqB;MAA5B,CAAvB;;MAGA9d,mBAAK4c,sBAAL,aAA4BF,CAA5B;IAA4B,CA9B9B;;IAkCA5c,wCAAuB4c,CAAD,IAA2B;MAC/C,IAAI,CAAC,KAAKC,QAAV,EAAoB;MAEpBD,EAAExV,cAAF;MACAwV,EAAEpR,eAAF;;MAEAtL,mBAAK4c,sBAAL,aAA4BF,CAA5B;;MAEArjB,OAAOiI,gBAAP,CAAwB,aAAxB,EAAuCtB,mBAAK+d,mBAAL,CAAvC;MACA1kB,OAAOiI,gBAAP,CAAwB,WAAxB,EAAqCtB,mBAAKge,iBAAL,CAArC;IAA0C,CAT5C;;IAYAle,sCAAoB,MAAY;MAC9BzG,OAAOqI,mBAAP,CAA2B,aAA3B,EAA0C1B,mBAAK+d,mBAAL,CAA1C;MACA1kB,OAAOqI,mBAAP,CAA2B,WAA3B,EAAwC1B,mBAAKge,iBAAL,CAAxC;IAA6C,CAF/C;;IAKAle,wCAAuB4c,CAAD,IAA2B;MAC/CA,EAAExV,cAAF;MAGA,IAAI+W,MAAM9iB,KAAKmE,KAAL,CACR,KAAK4e,mBAAL,CAAyBC,SAAzB,IAAsC,KAAKhB,cAAL,GAAsBT,EAAEU,KAA9D,CADQ,CAAV;MAIAa,MAAM9iB,KAAK0C,GAAL,CACJ1C,KAAKiM,GAAL,CAAS,KAAKoW,SAAL,GAAiB,KAAKU,mBAAL,CAAyBE,YAAnD,EAAiEH,GAAjE,CADI,EAEJ,CAFI,CAAN;MAIA,IAAII,OAAOljB,KAAKmE,KAAL,CACT,KAAK4e,mBAAL,CAAyBI,UAAzB,IAAuC,KAAKtB,cAAL,GAAsBN,EAAEO,KAA/D,CADS,CAAX;MAIAoB,OAAOljB,KAAK0C,GAAL,CACL1C,KAAKiM,GAAL,CAAS,KAAKmW,QAAL,GAAgB,KAAKW,mBAAL,CAAyBK,WAAlD,EAA+DF,IAA/D,CADK,EAEL,CAFK,CAAP;MAIA,KAAKH,mBAAL,CAAyBC,SAAzB,GAAqCF,GAArC;MACA,KAAKC,mBAAL,CAAyBI,UAAzB,GAAsCD,IAAtC;MAGA,MAAMtB,QAAQ5hB,KAAKmE,KAAL,CACZ+e,OAAQ,MAAKd,QAAL,GAAgB,KAAKW,mBAAL,CAAyBK,WAAzC,IAAwD,CADpD,CAAd;MAGA,MAAMrB,QAAQ/hB,KAAKmE,KAAL,CACX,MAAKke,SAAL,GAAiB,KAAKU,mBAAL,CAAyBE,YAA1C,IAA0D,CAA1D,GAA8DH,GADnD,CAAd;MAGA,KAAKN,mBAAL,GAA2B,CACzB,KAAKD,WAAL,CAAiB,CAAjB,IAAsBX,KADG,EAEzB,KAAKW,WAAL,CAAiB,CAAjB,IAAsBR,KAFG,CAA3B;;MAKA,IAAI,CAAC,KAAKlB,kBAAV,EAA8B;QAE5B,MAAM6B,SAAS,KAAKR,YAAL,GAAoBN,KAAnC;QACA,MAAMe,SAAS,KAAKR,YAAL,GAAoBJ,KAAnC;QACA,KAAKb,eAAL,GAAuB;UAAEG,SAASqB,MAAX;UAAmBpB,SAASqB;QAA5B,CAAvB;MAAmD;;MAIrD9d,mBAAK4c,sBAAL,aAA4BF,CAA5B;IAA4B,CA3C9B;;IA8CA5c,2CAA0B4c,CAAD,IAA2B;MAClD,KAAKM,cAAL,GAAsBN,EAAEO,KAAxB;MACA,KAAKE,cAAL,GAAsBT,EAAEU,KAAxB;IAAwB,CAF1B;;IAKAtd,2CAAyB,MAAY;MACnC,MAAM;QAAEwc,OAAF;QAAWC,OAAX;QAAoBC,OAApB;QAA6BC;MAA7B,IAAyCzc,mBAAKwe,gBAAL,CAA/C;;MACA,MAAMC,aAAanC,UAAUE,OAA7B;MACA,MAAMkC,aAAanC,UAAUE,OAA7B;MACA,KAAKL,aAAL,CAAmBrjB,KAAnB,CAAyB4C,SAAzB,GAAqC,yBAAyB8iB,8BAA8BC,gBAA5F;IAA4F,CAJ9F;;IAQA,gBAAW,MAAY;MAErB,MAAMT,MAAO,MAAKT,SAAL,GAAiB,KAAKU,mBAAL,CAAyBE,YAA1C,IAA0D,CAAvE;MACA,MAAMC,OAAQ,MAAKd,QAAL,GAAgB,KAAKW,mBAAL,CAAyBK,WAAzC,IAAwD,CAAtE;MACA,KAAKL,mBAAL,CAAyBC,SAAzB,GAAqCF,GAArC;MACA,KAAKC,mBAAL,CAAyBI,UAAzB,GAAsCD,IAAtC;MAGA,KAAKV,mBAAL,GAA2B,KAAKD,WAAhC;MAGA,KAAKL,YAAL,GAAoB,KAAKC,YAAL,GAAoB,CAAxC;MACA,KAAKjB,eAAL,GAAuB;QAAEG,SAAS,CAAX;QAAcC,SAAS;MAAvB,CAAvB;IAA8C,CAZhD;;IA7PE,KAAKL,aAAL,GAAqB9X,MAArB;IACA,KAAK4Z,mBAAL,GAA2BnC,cAA3B;IACA,KAAKC,kBAAL,GAA0BA,kBAA1B;IACA,KAAKte,IAAL,GAAYA,IAAZ;IACA,KAAKme,MAAL,GAAcA,MAAd;IAEA,KAAKmB,cAAL,GAAsB,CAAtB;IACA,KAAKG,cAAL,GAAsB,CAAtB;IACA,KAAKE,YAAL,GAAoB,CAApB;IACA,KAAKC,YAAL,GAAoB,CAApB;IAEA,KAAKY,mBAAL,CAAyB5c,gBAAzB,CACE,aADF,EAEEtB,mBAAK2e,mBAAL,CAFF;;IAKA,IAAI,CAAC,KAAK3C,kBAAV,EAA8B;MAC5B,KAAKI,aAAL,CAAmB9a,gBAAnB,CACE,aADF,EAEEtB,mBAAK4e,oBAAL,CAFF;IAEO;;IAKT,MAAMC,iBAAiB,IAAIC,cAAJ,CAAmB9e,mBAAK+e,mBAAL,CAAnB,CAAvB;IACAF,eAAevG,OAAf,CAAuB,KAAK8D,aAA5B;EAA4B;;EAK1B,aAAiB;IACnB,OAAOpc,mBAAKgf,OAAL,CAAP;EAAY;;EAGV,WAAOC,SAAP,EAA0B;IAC5Bze,mBAAKwe,OAAL,EAAeC,SAAf;;IACA,CAAC,KAAKhD,aAAN,EAAqB,KAAKC,aAA1B,IAA2CC,gBACzC,KAAKC,aADoC,EAEzC6C,SAFyC,CAA3C;IAIA,KAAK5C,eAAL,GAAuB;MACrBC,SAAS,KAAKL,aADO;MAErBM,SAAS,KAAKL;IAFO,CAAvB;EAEgB;;EAsBd,sBAAmC;IACrC,OAAOlc,mBAAKwe,gBAAL,CAAP;EAAY;;EAGV,oBAAgB1O,GAAhB,EAA+C;IACjDtP,mBAAKge,gBAAL,EAAwB3Z,kCACnB7E,mBAAKwe,gBAAL,CADmB,GAEnB1O,GAFmB,CAAxB;;IAIA9P,mBAAKkf,sBAAL;EAAA;;EAME,eAAoB;IACtB,OAAOlf,mBAAKmf,SAAL,CAAP;EAAY;;EAIV,aAASrP,GAAT,EAAuB;IACzB,KAAKoO,mBAAL,CAAyBnlB,KAAzB,CAA+BqmB,WAA/B,GAA6CtP,MAAM,MAAN,GAAe,EAA5D;;IACAtP,mBAAK2e,SAAL,EAAiBrP,GAAjB;EAAiB;;EAIf,gBAAoB;IACtB,OAAO3U,KAAKiM,GAAL,CAAS,KAAK8W,mBAAL,CAAyBE,YAAzB,GAAwC,CAAjD,EAAoDxC,aAApD,CAAP;EAA2D;;EAIzD,eAAmB;IACrB,OAAOzgB,KAAKiM,GAAL,CAAS,KAAK8W,mBAAL,CAAyBK,WAAzB,GAAuC,CAAhD,EAAmD3C,aAAnD,CAAP;EAA0D;;EAMxD,iBAA+B;IACjC,MAAMyD,aAA+B,KAAKrD,kBAAL,GACjC,KAAK2B,mBAD4B,GAEjC,CACE,KAAKD,WAAL,CAAiB,CAAjB,IAAsB,KAAKL,YAD7B,EAEE,KAAKK,WAAL,CAAiB,CAAjB,IAAsB,KAAKJ,YAF7B,CAFJ;;IAQA,IAAIre,WAAWogB,UAAX,EAAuB,KAAK3B,WAA5B,CAAJ,EAA8C;MAC5C,OAAO1d,mBAAKsf,mBAAL,CAAP;IAAY,CADd,MAEO;MACL,MAAMC,SAAS/D,KAAKgE,EAAL,CAAQH,UAAR,EAAoB,KAAK3hB,IAAzB,CAAf;MACA,OAAO,CAAC4B,MAAMigB,OAAO,CAAP,CAAN,EAAiB,CAAjB,CAAD,EAAsBjgB,MAAMigB,OAAO,CAAP,CAAN,EAAiB,CAAjB,CAAtB,CAAP;IAA8C;EAAA;;EAK9C,eAAWA,MAAX,EAAqC;IACvC/e,mBAAK8e,mBAAL,EAA2BC,MAA3B;;IACA,KAAK7B,WAAL,GAAmB,KAAKC,mBAAL,GAA2BnC,KAAKiE,EAAL,CAAQF,MAAR,EAAgB,KAAK7hB,IAArB,CAA9C;EAAmE;;AAlKzC,CAAvB;AAoELshB;AAkBAD;AAWAP;AAmBAW;AAuBAG;AA2BAV;AAYA9B;AAKAD;AAkCA8B;AAYAX;AAKAD;AA8CAnB;AAKAsC,uC;;;;ADrUF,IAAMQ,OAAO,EAAb;AAEA,IAAMC,YAAWja,wBAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAU9Cka;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAVC,CAAjB;AAuBA,IAAMC,wBAAwBna,wBAA6C;AAAA;AAAA;AAAA;AAAA,CAA7C,CAA9B;AAMA,IAAMoa,kBAAkBpa,wBAA6C;AAAA;AAAA;AAAA;AAAA,CAA7C,CAAxB;AAMA,IAAMqa,wBAAwBra,wBAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7C,CAA9B;;AApEA;;AAwHO,yCAAmCI,iBAAnC,CAAqD;EAArDlM,cAxHP;IAwHO;;IASLkG,6CAA2B,KAA3B;;IA+BA,0BAAqB,KAArB;IASA,oBAAuB,QAAvB;;IAYAA,2CAAyB,KAAzB;;IAEAA,iCAAe,KAAf;;IAEAA;;IACAA,yBAAO,EAAP;;IAEAA;;IACAA;;IAEAA;;IAEAA;;IAEAA;;IA8DAA,oCAAwB,EAAxB;;IACAA,6CAA2B,KAA3B;;IAyDAA,kCAA8B,SAA9B;;IAqCAA,qCAAqC,CAAC,QAAD,EAAW,aAAX,CAArC;;IAqBAA;;IA2CAA,yCAAuB,MAAY;MACjC,MAAM;QAAEkgB,cAAF;QAAkBC,YAAlB;QAAgCC,UAAhC;QAA4CC;MAA5C,IACJngB,mBAAKogB,SAAL,CADF;;MAEA,IAAIpgB,mBAAKqgB,sBAAL,CAAJ,EAAiC;QAC/BL,eAAe7iB,SAAf,CAAyBC,GAAzB,CAA6B,GAAG,KAAKwD,OAAL,CAAaC,iBAA7C;QACAb,mBAAKsgB,iBAAL,EAAuB3D,QAAvB,GAAkC,IAAlC;QACAsD,aAAa9Z,YAAb,CAA0B,aAA1B,EAAyC,MAAzC;QACA+Z,WAAWhX,eAAX,CAA2B,aAA3B;QACAiX,aAAajX,eAAb,CAA6B,aAA7B;MAA6B,CAL/B,MAMO;QACL8W,eAAe7iB,SAAf,CAAyBjC,MAAzB,CAAgC,GAAG,KAAK0F,OAAL,CAAaC,iBAAhD;QACAb,mBAAKsgB,iBAAL,EAAuB3D,QAAvB,GAAkC,KAAlC;QACAsD,aAAa/W,eAAb,CAA6B,aAA7B;QACAgX,WAAW/Z,YAAX,CAAwB,aAAxB,EAAuC,MAAvC;QACAga,aAAaha,YAAb,CAA0B,aAA1B,EAAyC,MAAzC;MAAyC;IAAA,CAd7C;;IAkBArG,8CAA4B,MAAY;MACtCU,mBAAK6f,sBAAL,EAA8B,IAA9B;;MACArgB,mBAAKugB,oBAAL;IAAA,CAFF;;IAKAzgB,6CAA2B,MAAY;MAErC,IACE,KAAK8O,OAAL,CAAaI,UAAb,CAAwB6D,YAAxB,IACA,CAAC5T,WACC,KAAK2P,OAAL,CAAaoE,QAAb,CAAsBC,WADvB,EAECjT,mBAAKsgB,iBAAL,EAAuBE,UAFxB,CAFH,EAME;QACA,MAAM,CAACC,GAAD,EAAMC,GAAN,IAAa1gB,mBAAKsgB,iBAAL,EAAuBE,UAA1C;;QACAzN,aAAa,KAAKxC,WAAlB,EAA+B;UAC7BQ,oBAAoB,KAAKnC,OAAL,CAAaoE,QAAb,CAAsBC,WADb;UAK7BjC,iBAAiB,KAAKpC,OAAL,CAAaI,UAAb,CAAwB6D,YALZ;UAM7B5B,SAAS;YACPP,UAAU;cAAEW,WAAWoP,GAAb;cAAkBnP,UAAUoP;YAA5B;UADH;QANoB,CAA/B;MAO0C;;MAK5C,IAAI,KAAKC,oBAAT,EAA+B;QAC7B,KAAKA,oBAAL,CAA0B3gB,mBAAKsgB,iBAAL,EAAuBE,UAAjD;MAAiD;;MAGnDhgB,mBAAK6f,sBAAL,EAA8B,KAA9B;;MACArgB,mBAAKugB,oBAAL;IAAA,CA3BF;;IA8BAzgB,+CAA6B,MAAY;MACvCE,mBAAKsgB,iBAAL,EAAuBM,QAAvB;;MACApgB,mBAAK6f,sBAAL,EAA8B,KAA9B;;MACArgB,mBAAKugB,oBAAL;IAAA,CAHF;;IAMAzgB,0CAAwB,MAAY;MAClC,KAAK2S,YAAL,GACE,KAAKA,YAAL,KAAsB,SAAtB,GAAkC,WAAlC,GAAgD,SADlD;IACkD,CAFpD;;IAKA3S,qCAAmB,MAAY;MAC7B,IAAI,CAACE,mBAAK6gB,YAAL,CAAL,EAAwB;QACtB7gB,mBAAKsgB,iBAAL,EAAuBM,QAAvB;MAAuB;;MAEzBpgB,mBAAKqgB,YAAL,EAAoB,IAApB;IAAoB,CAJtB;;IAOA/gB,sCAAoB,MAAY;MAC9BU,mBAAKqgB,YAAL,EAAoB,KAApB;IAAoB,CADtB;;IAWA/gB,iCAAgBghB,UAAD,IAAoC;MAEjD,IAAI9gB,mBAAK+gB,MAAL,MAAgB,CAAhB,IAAqB/gB,mBAAKghB,OAAL,MAAiB,CAA1C,EAA6C,OAAO,EAAP;MAE7C,MAAM,CAAChjB,QAAD,EAAWC,OAAX,IAAsB,KAAKuU,eAAjC;MACA,MAAMyO,iBAAiB9iB,iBAAiBH,QAAjB,EAA2BC,OAA3B,CAAvB;MACA,MAAMijB,UACJ,KAAKzO,YAAL,KAAsB,SAAtB,GACIwO,cADJ,GAEI/iB,yBAHN;MAIA,MAAMijB,WACJ/iB,4BAA4B4R,OAAO6G,oBAAP,CAA4BuK,QAA5B,EAD9B;MAEA,IAAIC,SACFH,UACAI,OAAOtH,OAAP,CAAe8G,UAAf,EAA2BS,OAA3B,GAAqC7kB,IAArC,CAA0C,GAA1C,CADA,GAEA,GAFA,GAGAgjB,IAHA,GAIA,KAJA,GAKAvkB,KAAKiM,GAAL,CAASpH,mBAAK+gB,MAAL,IAAc,CAAvB,EAA0BnF,aAA1B,CALA,GAMA,GANA,GAOAzgB,KAAKiM,GAAL,CAASpH,mBAAKghB,OAAL,IAAe,CAAxB,EAA2BpF,aAA3B,CAPA,GAQA,gBARA,GASA,KAAKrL,WATL,GAUA,+BAXF;;MAaA,IAAIP,OAAOgI,sBAAX,EAAmC;QACjCqJ,UAAU,QAAQF,UAAlB;MAAkB;;MAEpB,OAAOE,MAAP;IAAO,CA5BT;;IA+BAvhB,oCAAkB,MAAY;MAC5B,IAAIE,mBAAKwhB,SAAL,CAAJ,EAAmB;QACjB,MAAMjC,SAASvf,mBAAKwhB,SAAL,EAAcxO,QAAd,CAAuBC,WAAtC;;QACAzS,mBAAKihB,IAAL,EAAYzhB,mBAAK0hB,YAAL,aAAkBnC,MAAlB,CAAZ;;QACA,MAAM;UAAEoC;QAAF,IAAY3hB,mBAAKogB,SAAL,CAAlB;;QACAuB,MAAMC,GAAN,GAAY5hB,mBAAKyhB,IAAL,CAAZ;MAAiB;IAAA,CALrB;;IASA3hB,iDAAgC+hB,SAAD,IAAqC;MAClE,OAAO,QAAQC,SACbD,cAAc,SAAd,GAA0B,oBAA1B,GAAiD,sBADpC,EAEb,KAAKjd,KAFQ,CAER,IAFP;IAEO,CAHT;;IAOA9E,6BAAW,MAAY;MACrB,MAAM;QAAEiiB,2CAAF;QAAwB/B;MAAxB,IAA2ChgB,mBAAKogB,SAAL,CAAjD;;MACA,MAAM;QAAE3lB,KAAF;QAASC;MAAT,IAAoBohB,eAAe,KAAKV,SAApB,CAA1B;;MACA5a,mBAAKugB,MAAL,EAAc5lB,KAAKiM,GAAL,CAAS3M,KAAT,EAAgBmhB,aAAhB,CAAd;;MACApb,mBAAKwgB,OAAL,EAAe7lB,KAAKiM,GAAL,CAAS1M,MAAT,EAAiBkhB,aAAjB,CAAf;;MACAoG,sBAAqBjpB,KAArB,CAA2BiC,WAA3B,CAAuC,OAAvC,EAAgD,GAAGgF,mBAAK+gB,MAAL,CAAK,IAAxD;MACAf,eAAejnB,KAAf,CAAqBiC,WAArB,CAAiC,QAAjC,EAA2C,GAAGgF,mBAAKghB,OAAL,CAAK,IAAnD;MACAhB,eAAejnB,KAAf,CAAqBiC,WAArB,CAAiC,OAAjC,EAA0C,GAAGgF,mBAAK+gB,MAAL,CAAK,IAAlD;;MAEA/gB,mBAAKiiB,eAAL;IAAA,CATF;;IAYAniB,2CAAyB,MAAY;MAEnC,MAAMoiB,iBAAiB,KAAKnqB,aAAL,CAAmB,gBAAnB,CAAvB;MACA,IAAImqB,cAAJ,EAAoB;MACpB,MAAMC,gBAAgB,KAAKrhB,eAAL,CAAqBgf,eAArB,CAAtB;MACA,MAAMsC,iBAAiB,KAAKrqB,aAAL,CAAmB,uBAAnB,CAAvB;MACA,IAAI,CAACqqB,cAAL,EAAqB;MACrBA,eAAelpB,WAAf,CAA2BipB,aAA3B;MAGA,MAAME,mBAAmB,KAAKtqB,aAAL,CAAmB,qBAAnB,CAAzB;MACA,IAAIsqB,gBAAJ,EAAsB;MACtB,MAAMC,qBAAqB,KAAKxhB,eAAL,CAAqBif,qBAArB,CAA3B;MACA,MAAMwC,aAAa,KAAKxqB,aAAL,CAAmB,oBAAnB,CAAnB;MACAwqB,WAAWrpB,WAAX,CAAuBopB,kBAAvB;;MAGA9hB,mBAAK4f,SAAL,EAAgB1F,iCACX1a,mBAAKogB,SAAL,CADW;QAEdoC,aAAa,KAAKzqB,aAAL,CAAmB,qBAAnB,CAFC;QAGdkoB,cAAc,KAAKloB,aAAL,CAAmB,sBAAnB,CAHA;QAIdmoB,YAAY,KAAKnoB,aAAL,CAAmB,oBAAnB,CAJE;QAKdooB,cAAc,KAAKpoB,aAAL,CAAmB,sBAAnB;MALA,EAAhB;;MASA,MAAM;QAAEkoB,YAAF;QAAgBC,UAAhB;QAA4BC;MAA5B,IAA6CngB,mBAAKogB,SAAL,CAAnD;;MACAH,aAAa3e,gBAAb,CAA8B,OAA9B,EAAuCtB,mBAAKyiB,yBAAL,CAAvC;MACAvC,WAAW5e,gBAAX,CAA4B,OAA5B,EAAqCtB,mBAAK0iB,wBAAL,CAArC;MACAvC,aAAa7e,gBAAb,CAA8B,OAA9B,EAAuCtB,mBAAK2iB,0BAAL,CAAvC;IAA4C,CA7B9C;;IAgCA7iB,8CAA4B,MAAY;MACtC,IAAI,CAACE,mBAAKogB,SAAL,CAAL,EAAoB;;MACpB,MAAM;QAAEoC,WAAF;QAAevC,YAAf;QAA6BC,UAA7B;QAAyCC;MAAzC,IACJngB,mBAAKogB,SAAL,CADF;;MAGA,MAAM8B,iBAAiB,KAAKnqB,aAAL,CAAmB,gBAAnB,CAAvB;MACAmqB,iDAAgBhnB,MAAhB;MACAsnB,2CAAatnB,MAAb;;MACA,IAAI+kB,YAAJ,EAAkB;QAChBA,aAAa/kB,MAAb;QACA+kB,aAAave,mBAAb,CAAiC,OAAjC,EAA0C1B,mBAAKyiB,yBAAL,CAA1C;MAA+C;;MAEjD,IAAIvC,UAAJ,EAAgB;QACdA,WAAWhlB,MAAX;QACAglB,WAAWxe,mBAAX,CAA+B,OAA/B,EAAwC1B,mBAAK0iB,wBAAL,CAAxC;MAA6C;;MAE/C,IAAIvC,YAAJ,EAAkB;QAChBA,aAAajlB,MAAb;QACAilB,aAAaze,mBAAb,CACE,OADF,EAEE1B,mBAAK2iB,0BAAL,CAFF;MAEO;;MAIT,OAAO3iB,mBAAKogB,SAAL,EAAcoC,WAArB;MACA,OAAOxiB,mBAAKogB,SAAL,EAAcH,YAArB;MACA,OAAOjgB,mBAAKogB,SAAL,EAAcF,UAArB;MACA,OAAOlgB,mBAAKogB,SAAL,EAAcD,YAArB;IAAqB,CA3BvB;;IA8BArgB,wCAAsB,MAAY;MAChC,MAAM8iB,iBAAiB,KAAK7qB,aAAL,CAAmB,qBAAnB,CAAvB;MACA,IAAI6qB,cAAJ,EAAoB;MAGpB,MAAMC,gBAAgB,KAAK/hB,eAAL,CAAqB+e,qBAArB,CAAtB;MACA,MAAM0C,aAAa,KAAKxqB,aAAL,CAAmB,oBAAnB,CAAnB;MACA,IAAI,CAACwqB,UAAL,EAAiB;MACjBA,WAAWrpB,WAAX,CAAuB2pB,aAAvB;MAGA7iB,mBAAKogB,SAAL,EAAc0C,cAAd,GAA+BD,aAA/B;MAGAA,cAAcvhB,gBAAd,CAA+B,OAA/B,EAAwCtB,mBAAK+iB,qBAAL,CAAxC;MAEAF,cAAc9pB,KAAd,CAAoBiqB,eAApB,GAAsChjB,mBAAKijB,4BAAL,aACpC,KAAKxQ,YAAL,KAAsB,SAAtB,GAAkC,WAAlC,GAAgD,SADZ,CAAtC;MAGAoQ,cAAc1c,YAAd,CACE,OADF,EAEE,aAAa,KAAKsM,YAAL,KAAsB,SAAtB,GAAkC,WAAlC,GAAgD,WAF/D;IAE+D,CArBjE;;IAyBA3S,2CAAyB,MAAY;MACnC,IAAI,CAACE,mBAAKogB,SAAL,CAAL,EAAoB;;MACpB,MAAM;QAAE0C;MAAF,IAAqB9iB,mBAAKogB,SAAL,CAA3B;;MACA,IAAI,CAAC0C,cAAL,EAAqB;MAErBA,eAAe5nB,MAAf;MACA4nB,eAAephB,mBAAf,CAAmC,OAAnC,EAA4C1B,mBAAK+iB,qBAAL,CAA5C;MAEA,OAAO/iB,mBAAKogB,SAAL,EAAc0C,cAArB;IAAqB,CARvB;EAQuB;;EA5fnB,sBAA2B;IAC7B,OAAO9iB,mBAAKkjB,wBAAL,CAAP;EAAY;;EAEV,oBAAgBpT,GAAhB,EAA8B;IAChCtP,mBAAK0iB,wBAAL,EAAgCpT,GAAhC;;IACAA,MAAM9P,mBAAKmjB,sBAAL,YAAN,GAAsCnjB,mBAAKojB,yBAAL,YAAtC;EAAsC;;EA+DpC,kBAAsB;IACxB,OAAOpjB,mBAAKqjB,YAAL,KAAqBrT,OAAOO,WAAnC;EAAmC;;EAEjC,gBAAYwH,QAAZ,EAA8B;IAChCvX,mBAAK6iB,YAAL,EAAoBtL,QAApB;EAAoB;;EAgBlB,cAA0C;IAC5C,OAAO/X,mBAAKwhB,SAAL,CAAP;EAAY;;EAEV,YAAQ5S,OAAR,EAAiD;IACnDpO,mBAAKghB,SAAL,EAAgB5S,OAAhB;;IAEA,IAAI,CAACA,OAAL,EAAc;MACZ,KAAK2G,IAAL;IAAK,CADP,MAEO;MACL,KAAKK,IAAL;IAAK;EAAA;;EAIL,eAAgC;IAClC,OAAO+J,SAAP;EAAO;;EAGL,oBAAwB;IAC1B,OAAOrY,aAAP;EAAO;;EAGL,wBAA4B;IAC9B,OAAOC,YAAY,uBAAZ,EAAqC,KAAK3C,KAA1C,CAAP;EAAiD;;EAgB/C,sBAA2B;IAC7B,OAAO5E,mBAAKsjB,wBAAL,CAAP;EAAY;;EAEV,oBAAgBxT,GAAhB,EAA8B;IAChCtP,mBAAK8iB,wBAAL,EAAgCxT,GAAhC;;IACAA,MAAM9P,mBAAKujB,mBAAL,YAAN,GAAmCvjB,mBAAKwjB,sBAAL,YAAnC;EAAmC;;EAmBjC,YAAe;IACjB,OAAOxjB,mBAAKyjB,eAAL,CAAP;EAAY;;EAEV,UAAM7e,KAAN,EAAoB;IACtBpE,mBAAKijB,eAAL,EAAsB7e,KAAtB;;IAEA,IAAI,CAAC5E,mBAAKogB,SAAL,CAAD,IAAkB,CAACxb,KAAvB,EAA8B;MAC5B;IAAA;;IAGF,KAAKxD,uBAAL,CAA6BmG,YAAY,uBAAZ,EAAqC3C,KAArC,CAA7B;;IAEA,MAAM;MAAE8e,MAAF;MAAUZ;IAAV,IAA6B9iB,mBAAKogB,SAAL,CAAnC;;IACAsD,OAAOjrB,SAAP,GAAmB6a,QAAQ,QAAR,EAAkB1O,KAAlB,CAAnB;;IACA,IAAIke,cAAJ,EAAoB;MAClBA,eAAe/pB,KAAf,CAAqBiqB,eAArB,GAAuChjB,mBAAKijB,4BAAL,aACrC,KAAKxQ,YAAL,KAAsB,SAAtB,GAAkC,WAAlC,GAAgD,SADX,CAAvC;IACkD;EAAA;;EAgBlD,mBAA6B;IAC/B,OAAOzS,mBAAK2jB,aAAL,CAAP;EAAY;;EAEV,iBAAa9B,SAAb,EAAsC;IACxC,MAAM+B,gBAAgB5jB,mBAAK2jB,aAAL,CAAtB;;IACAnjB,mBAAKmjB,aAAL,EAAqB9B,SAArB;;IACA,IAAI,CAAC7hB,mBAAKogB,SAAL,CAAL,EAAoB;MAClB;IAAA;;IAIF,MAAM;MAAE0C;IAAF,IAAqB9iB,mBAAKogB,SAAL,CAA3B;;IACA,IAAI,CAAC0C,cAAL,EAAqB;MACnB;IAAA;;IAGFA,eAAe/pB,KAAf,CAAqBiqB,eAArB,GACEhjB,mBAAKijB,4BAAL,aAAkCW,aAAlC,CADF;IAGAd,eAAe3c,YAAf,CACE,OADF,EAEE,aAAayd,kBAAkB,WAAlB,GAAgC,WAAhC,GAA8C,WAF7D;;IAIA5jB,mBAAKiiB,eAAL;EAAA;;EAaE,sBAAoC;IACtC,OAAOjiB,mBAAK6jB,gBAAL,CAAP;EAAY;;EAEV,oBAAgB9qB,KAAhB,EAAyC;IAC3CyH,mBAAKqjB,gBAAL,EAAwB9qB,KAAxB;;IACAiH,mBAAKiiB,eAAL;EAAA;;EAQE,gBAAgC;IAClC,OAAOjiB,mBAAK8jB,UAAL,CAAP;EAAY;;EAGV,cAAUC,YAAV,EAA4C;IAC9C,IAAIA,YAAJ,EAAkB;MAChBA,aAAahrB,KAAb,CAAmBirB,QAAnB,GAA8B,UAA9B;;MACAxjB,mBAAKsjB,UAAL,EAAkBC,YAAlB;IAAkB;EAAA;;EAStBnO,OAAa;IACX,IAAI,CAAC5V,mBAAKwhB,SAAL,CAAL,EAAoB;MAClB;IAAA;;IAGF,MAAMjC,SAASvf,mBAAKwhB,SAAL,EAAcxO,QAAd,CAAuBC,WAAtC;;IACAjT,mBAAKsgB,iBAAL,EAAuBE,UAAvB,GAAoCjB,MAApC;;IAEA/e,mBAAKihB,IAAL,EAAYzhB,mBAAK0hB,YAAL,aAAkBnC,MAAlB,CAAZ;;IAGA,MAAM;MAAEwC,2CAAF;MAAwBJ;IAAxB,IAAkC3hB,mBAAKogB,SAAL,CAAxC;;IACAuB,MAAMC,GAAN,GAAY5hB,mBAAKyhB,IAAL,CAAZ;IAEAO,sBAAqB9Y,eAArB,CAAqC,aAArC;EAAqC;;EAMvCqM,OAAa;IACX,MAAM;MAAEwM;IAAF,IAA2B/hB,mBAAKogB,SAAL,CAAjC;;IACA4B,sBAAqB7b,YAArB,CAAkC,aAAlC,EAAiD,MAAjD;EAAiD;;EAkPnDzF,oBAA0B;IACxB,MAAMA,iBAAN;;IAEAF,mBAAK4f,SAAL,EAAgBpW,aAAsB,IAAtB,EAA4B;MAC1C+X,sBAAsB,uBADoB;MAE1C/B,gBAAgB,wBAF0B;MAG1C2B,OAAO,eAHmC;MAI1C+B,QAAQ,gBAJkC;MAK1CZ,gBAAgB,qBAL0B;MAM1CN,aAAa,qBAN6B;MAO1CvC,cAAc,sBAP4B;MAQ1CC,YAAY,oBAR8B;MAS1CC,cAAc;IAT4B,CAA5B,CAAhB;;IAaA,KAAK1N,YAAL,GAAoBzS,mBAAK2jB,aAAL,CAApB;IAGA,KAAK/e,KAAL,GAAaC,mBAAK,KAAKD,KAAV,CAAb;;IAGA,IAAI,KAAKqf,eAAT,EAA0B;MACxBjkB,mBAAKmjB,sBAAL;IAAA;;IAIF,IAAI,KAAKzQ,eAAT,EAA0B;MACxB1S,mBAAKujB,mBAAL;IAAA;;IAIF,KAAKnI,SAAL,GAAiB,KAAKrgB,aAAtB;IACA,MAAM8jB,iBAAiB,IAAIC,cAAJ,CAAmB9e,mBAAKkkB,QAAL,CAAnB,CAAvB;IACArF,eAAevG,OAAf,CAAuB,KAAK8C,SAA5B;;IACApb,mBAAKkkB,QAAL;;IAEA,MAAM;MAAEnC,2CAAF;MAAwB/B,cAAxB;MAAwC2B,KAAxC;MAA+C+B;IAA/C,IACJ1jB,mBAAKogB,SAAL,CADF;;IAIA5f,mBAAK8f,iBAAL,EAAyB,IAAI6D,gBAAJ,CACvBnE,cADuB,EAEvB0D,MAFuB,EAGvB,KAAK1H,kBAHkB,EAIvB0D,IAJuB,EAKvB,KAAK0E,YALkB,CAAzB;;IAOApkB,mBAAKsgB,iBAAL,EAAuBM,QAAvB;;IACAe,MAAM0C,MAAN,GAAerkB,mBAAKskB,gBAAL,CAAf;IACA3C,MAAM4C,OAAN,GAAgBvkB,mBAAKwkB,iBAAL,CAAhB;IAEA7C,MAAMC,GAAN,GAAY5hB,mBAAKyhB,IAAL,CAAZ;IAEA,IAAIzhB,mBAAKwhB,SAAL,CAAJ,EAAmBQ,sBAAqB9Y,eAArB,CAAqC,aAArC,EAAnB,KACK8Y,sBAAqB7b,YAArB,CAAkC,aAAlC,EAAiD,MAAjD;EAAiD;;EAGxDuS,yBACEC,IADF,EAEEC,QAFF,EAGEC,QAHF,EAIQ;IACN,IAAIF,SAAS,cAAb,EAA6B;MAC3B,KAAKpI,WAAL,GAAmBsI,QAAnB;IAAmB,CADrB,MACqB,IACVF,SAAS,mBADC,EACoB;MACvC,KAAKsL,eAAL,GAAuBpL,aAAa,MAApC;IAAoC,CAFjB,MAEiB,IAC3BF,SAAS,sBADkB,EACM;MAC1C,KAAKqD,kBAAL,GAA0BnD,aAAa,MAAvC;IAAuC,CAFH,MAEG,IAC9BF,SAAS,eADqB,EACJ;MACnC,MAAMsG,YAAYpG,QAAlB;MACA,KAAKuL,YAAL,GAAoBnF,SAApB;MACAjf,mBAAKsgB,iBAAL,MAA2BtgB,mBAAKsgB,iBAAL,EAAuBzE,MAAvB,GAAgCoD,SAA3D;IAA2D,CAJpB,MAIoB,IAClDtG,SAAS,kBADyC,EACrB;MACtC,KAAKjG,eAAL,GAAuBmG,aAAa,MAApC;IAAoC;EAAA;;AAjmBkB,CAArD;AASLqK;AAoDA7C;AAEAQ;AAEAW;AACAC;AAEAV;AACAC;AAEAZ;AAEAE;AAEA+C;AA8DAI;AACAH;AAyDAK;AAqCAE;AAqBAC;AA2CAvD;AAkBAkC;AAKAC;AA8BAC;AAMAI;AAKAuB;AAOAE;AAWA9C;AA+BAO;AASAgB;AAOAiB;AAYAf;AAgCAC;AA8BAG;AAyBAC;AA3gBOzB,oBADF,CACE9I,qBAA+B,CACpC,cADoC,EAEpC,mBAFoC,EAGpC,sBAHoC,EAIpC,eAJoC,EAKpC,kBALoC,CAA/B;AA2mBT5f,OAAO0oB,oBAAP,GAA8BA,oBAA9B;;AAEA,IAAI,CAAC1oB,OAAO6R,cAAP,CAAsBC,GAAtB,CAA0B,wBAA1B,CAAL,EAA0D;EACxDD,eAAeE,MAAf,CAAsB,wBAAtB,EAAgD2W,oBAAhD;AAAgD,C;;;AEvuBlD;;AAAA;;AAqBO,6BAAuB;EAM5BnoB,YACE6qB,UADF,EAEEjrB,KAFF,EAGEkrB,WAHF,EAIE;IATF5kB;;IACAA;;IAEA,eAA2C,IAAImL,mBAAJ,EAA3C;;IA6BAnL,oCAAkBnB,CAAD,IAA0D;MAEzEqB,mBAAK2kB,WAAL,EAAiBC,IAAjB,CAAsB,SAAtB,EAAiCjmB,EAAE9D,KAAF,CAAQmF,mBAAK6kB,OAAL,CAAR,CAAjC;IAA8C,CAFhD;;IAKA/kB,yCAAuBnB,CAAD,IAAqC;MAEzDqB,mBAAK2kB,WAAL,EAAiBC,IAAjB,CAAsB,cAAtB,EAAsCjmB,EAAE9D,KAAF,CAAQmF,mBAAK6kB,OAAL,CAAR,CAAtC;IAAmD,CAFrD;;IAKA/kB,qCAAmBnB,CAAD,IAAwD;MAExEqB,mBAAK2kB,WAAL,EAAiBC,IAAjB,CAAsB,UAAtB,EAAkCjmB,EAAE9D,KAAF,CAAQmF,mBAAK6kB,OAAL,CAAR,CAAlC;;MAEA,IAAI,CAAC7kB,mBAAK6kB,OAAL,CAAL,EAAkB;QAChB;MAAA;;MAGF,MAAMlO,oBAAoBhY,EAAEkD,MAA5B;;MACA,IACE,CAAC8U,iBAAD,IACA,CAACA,kBAAkBnM,QADnB,IAEA,CAACmM,kBAAkBnM,QAAlB,CAA2B7N,MAH9B,EAIE;QACA;MAAA;;MAGF8a,oBAAoBd,kBAAkBnM,QAAlB,CAA2B,CAA3B,CAApB,EAAmDxK,mBAAK6kB,OAAL,CAAnD;IAAwD,CAjB1D;;IAhCErkB,mBAAKqkB,OAAL,EAAcrrB,KAAd;;IACAgH,mBAAKmkB,WAAL,EAAmBF,UAAnB;;IACA,KAAKK,OAAL,CAAatrB,KAAb,GAAqBwG,mBAAK6kB,OAAL,CAArB;IAGA,KAAKC,OAAL,CAAa1e,OAAb,GAAuB,IAAI2e,cAAJ,CAAkBL,WAAlB,CAAvB;IACA,KAAKI,OAAL,CAAa1e,OAAb,CAAqBwQ,YAArB,GAAoC5G,OAAO6G,oBAA3C;IAEA,KAAKiO,OAAL,CAAaxjB,gBAAb,CAA8B,SAA9B,EAAyCtB,mBAAKglB,eAAL,CAAzC;IACA,KAAKF,OAAL,CAAaxjB,gBAAb,CAA8B,cAA9B,EAA8CtB,mBAAKilB,oBAAL,CAA9C;IACA,KAAKH,OAAL,CAAaxjB,gBAAb,CAA8B,UAA9B,EAA0CtB,mBAAKklB,gBAAL,CAA1C;IAEA7tB,SAAS0a,IAAT,CAAc7Y,WAAd,CAA0B,KAAK4rB,OAA/B;EAA+B;;EAGjC5pB,SAAe;IACb,KAAK4pB,OAAL,CAAa5pB,MAAb;IACA,KAAK4pB,OAAL,CAAapjB,mBAAb,CAAiC,SAAjC,EAA4C1B,mBAAKglB,eAAL,CAA5C;IACA,KAAKF,OAAL,CAAapjB,mBAAb,CAAiC,cAAjC,EAAiD1B,mBAAKilB,oBAAL,CAAjD;IACA,KAAKH,OAAL,CAAapjB,mBAAb,CAAiC,UAAjC,EAA6C1B,mBAAKklB,gBAAL,CAA7C;EAAkD;;AA9BxB,CAAvB;AACLL;AACAF;AA+BAK;AAKAC;AAKAC;;AAhEF;;AAoKO,uCAGGC,OAHH,CAKL;EAMAvrB,kBAAwE;IAAA,IAA5D;MAAE2W,WAAF;MAAe9O,OAAf;MAAwBmD;IAAxB,CAA4D;IACtE;IANF,iBAAgC,EAAhC;;IACA9E;;IAEAA,+BAAY,IAAIslB,eAAJ,EAAZ;;IA4BAtlB;;IAuBAA;;IAwDAA,oCAAiB,MAAY;MAE3B,IAAI,CAACb,WAAWomB,mBAAX,EAAgCrlB,mBAAKslB,cAAL,CAAhC,CAAL,EAA2D;QACzD,KAAKlb,MAAL;MAAK;IAAA,CAHT;;IAOAtK,+BAAY,IAAI+X,gBAAJ,CAAqB7X,mBAAKulB,eAAL,CAArB,CAAZ;;IA7GEvV,OAAOgI,sBAAP,GAAgC,IAAhC;IAEA,KAAKzH,WAAL,GAAmBA,eAAeP,OAAOO,WAAzC;IACA9O,YAAY,KAAKA,OAAL,GAAeA,OAA3B;IACAmD,UAAU,KAAKA,KAAL,GAAaA,KAAvB;IACA,KAAKwF,MAAL;EAAK;;EAWH,kBAAsB;IACxB,OAAOpK,mBAAKwlB,UAAL,EAAejV,WAAtB;EAAsB;;EAEpB,gBAAYwH,QAAZ,EAA8B;IAChC/X,mBAAKwlB,UAAL,EAAejV,WAAf,GAA6BwH,QAA7B;EAA6B;;EAgB3B,cAAoC;IACtC,OAAO/X,mBAAKylB,QAAL,CAAP;EAAY;;EAEV,YAAQ3b,UAAR,EAA8C;IAChDtJ,mBAAKilB,QAAL,EAAgB5gB,kCAAK7E,mBAAKylB,QAAL,CAAL,GAAuB3b,UAAvB,CAAhB;;IACA,KAAK4b,SAAL,CAAeC,OAAf,CAAwBC,QAAD,IAAc;MACnCA,SAASd,OAAT,CAAiBrjB,OAAjB,GAA2BoD,kCAAK+gB,SAASd,OAAT,CAAiBrjB,OAAtB,GAAkCqI,UAAlC,CAA3B;IAA6D,CAD/D;EAC+D;;EAkB7D,YAAe;IACjB,OAAO9J,mBAAK6lB,MAAL,CAAP;EAAY;;EAEV,UAAMC,QAAN,EAAuB;IACzBtlB,mBAAKqlB,MAAL,EAAcC,QAAd;;IACA,KAAKJ,SAAL,CAAeC,OAAf,CAAwBC,QAAD,IAAc;MACnCA,SAASd,OAAT,CAAiBlgB,KAAjB,GAAyBkhB,QAAzB;IAAyB,CAD3B;EAC2B;;EAa7B1b,SAAe;IAEb,KAAKsb,SAAL,CAAeC,OAAf,CAAwBC,QAAD,IAAc;MACnCA,SAAS1qB,MAAT;IAAS,CADX;;IAIAsF,mBAAK8kB,cAAL,EAAsBD,mBAAtB;;IAEA,KAAKK,SAAL,GAAiB,EAAjB;;IACA1lB,mBAAKslB,cAAL,EAAoBK,OAApB,CAA6BnsB,KAAD,IAAW;MACrC,MAAMusB,mBAAmB,IAAIC,gBAAJ,CACvB,IADuB,EAEvBxsB,KAFuB,EAGvBwG,mBAAKwlB,UAAL,CAHuB,CAAzB;MAKAO,iBAAiBjB,OAAjB,CAAyBrjB,OAAzB,GAAmC,KAAKA,OAAxC;MACAskB,iBAAiBjB,OAAjB,CAAyBlgB,KAAzB,GAAiC,KAAKA,KAAtC;MACA,KAAK8gB,SAAL,CAAexoB,IAAf,CAAoB6oB,gBAApB;IAAoB,CARtB;EAQsB;;EA0BxBzN,UAAgB;IAEdtY,mBAAKimB,UAAL,EAAe3N,OAAf,CAAuBjhB,QAAvB,EAAiC;MAC/BkhB,SAAS,IADsB;MAE/BC,WAAW;IAFoB,CAAjC;;IAKAxY,mBAAKulB,eAAL;EAAA;;EAYFW,YAAkB;IAChBlmB,mBAAKimB,UAAL,EAAexN,UAAf;EAAe;;AAvJjB,CALK;AAOL6M;AAEAE;AA4BAC;AAuBAI;AAwDAN;AAOAU;;AAyEK,kBACLpQ,UADK,EAEmB;EACxB,MAAM;IAAEtF,WAAF;IAAe9O;EAAf,IAA2BoU,UAAjC;EACA,OAAO,IAAIsQ,kBAAJ,CAAuB;IAC5B5V,WAD4B;IAE5B9O;EAF4B,CAAvB,CAAP;AAEE,C;;;AC9WJ;AAqBA,IAAM2kB,eAAe,IAAIhR,yBAAJ,EAArB;;AA4BA,wBACEiR,EADF,EAGqC;EAAA,2CAFnCxa,IAEmC;IAAA,IADnCgK,UACmC,uEADC,EACD;IACnC,MAAM;MAAEyQ,WAAW;IAAb,IAAoBzQ,UAA1B;;IAEA,IAAI,CAACuQ,aAAaza,UAAlB,EAA8B;MAC5BtU,SAAS0a,IAAT,CAAc7Y,WAAd,CAA0BktB,YAA1B;IAA0B;;IAG5B,IAAIG,kBAA4C;MAAEhlB,MAAM;IAAR,CAAhD;IAEA,MAAM4K,SAASkZ,kBAAkBxZ,IAAlB,CAAf;IACA,MAAM2a,YAAYnZ,mBAAmBxB,IAAnB,CAAlB;IAEA,MAAM4a,oBAAoBxuB,MAAMC,IAAN,CACxBb,SAAS4F,gBAAT,CACE,uBADF,CADwB,CAA1B;;IAMA,WAAWzD,KAAX,IAAoB2S,MAApB,EAA4B;MAE1B,IAAIma,SAAS3pB,MAAb,EAAqB;QACnB,MAAM+pB,eAAeF,UAAUG,IAAV,CAAgBC,CAAD,IAAOA,EAAEptB,KAAF,KAAYA,KAAlC,CAArB;;QACA,IAAI,CAACktB,YAAL,EAAmB;UACjB;QAAA;;QAGF,IAAI,CAACJ,SAAS1mB,QAAT,CAAkB8mB,aAAa5Z,OAA/B,CAAL,EAA8C;UAC5C;QAAA;MAAA;;MAKJ,MAAMqC,iBAAiB0X,sBAAsBhb,IAAtB,EAA4BrS,KAA5B,CAAvB;MAIA,MAAMsrB,UAAU2B,kBAAkBE,IAAlB,CAAwBG,EAAD,IAAQA,GAAGttB,KAAH,KAAaA,KAA5C,CAAhB;;MACA,IAAIsrB,OAAJ,EAAa;QACX,MAAMiC,uBACJjC,QAAQva,eADV;;QAEA,IAAIwc,oBAAJ,EAA0B;UACxB,MAAMpY,WAAWqY,0BAA0BD,oBAA1B,CAAjB;;UACA,IAAI,CAACE,2BAA2B9X,cAA3B,EAA2CR,QAA3C,CAAL,EAA2D;YACzD;UAAA;QAAA;MAAA;;MAMN,MAAM4B,cAAcsF,WAAWtF,WAAX,IAA0BP,OAAOO,WAArD;MACA,MAAMjK,SAAS,MAAM8f,aAAa5P,OAAb,CAAqBrH,cAArB,EAAqCuL,iCACrD7E,UADqD;QAExDtF;MAFwD,EAArC,CAArB;;MAMA,IAAIjK,OAAO/E,IAAP,KAAgB,QAApB,EAA8B;QAC5B/H,MAAMoH,OAAN,CAAc,eAAd,IAAiC,MAAjC;QACA,MAAM0J,aAAa4c,qBAAoB5gB,OAAOsI,OAA3B,CAAnB;QACAG,sBAAsBlD,IAAtB,EAA4BrS,KAA5B,EAAmC8Q,UAAnC;;QACA,IAAIwa,OAAJ,EAAa;UAKXA,QAAQva,eAAR,GAA0BjE,OAAOsI,OAAjC;QAAiC;MAAA;;MAKrC,IAAItI,OAAO/E,IAAP,KAAgB,QAAhB,IAA4BglB,gBAAgBhlB,IAAhB,KAAyB,QAAzD,EAAmE;QACjEglB,kBAAkBjgB,MAAlB;MAAkB;;MAIpB,IAAIA,OAAO/E,IAAP,KAAgB,QAApB,EAA8B;QAC5BglB,kBAAkBjgB,MAAlB;MAAkB;IAAA;;IAItB,OAAOigB,eAAP;EAAO,CAhF4B;AAgF5B","names":["subdoc","document","implementation","createHTMLDocument","root","elements","binding","key","selector","Object","entries","querySelector","node","Array","from","childNodes","filter","el","nodeType","Node","ELEMENT_NODE","innerHTML","template","createElement","content","firstElementChild","text","style","textContent","head","appendChild","sheet","element","window","getComputedStyle","display","input","value","set","getOwnPropertyDescriptor","constructor","prototype","call","wrapperState","_valueTracker","setValue","onInputEvent","Event","bubbles","simulated","dispatchEvent","onChangeEvent","deep","width","height","elementRect","getBoundingClientRect","clone","cloneNode","parentElement","setProperty","cloneRect","remove","Math","floor","IDENTIFIER_REGEX","RegExp","CLASS_NAME_REGEX","source","CONDITION_RULE_REGEX","css","transform","replace","className","slice","createCSSStyleSheet","rules","cssRules","rule","CSSStyleRule","transformClassSelectors","selectorText","cssText","atRule","exec","split","join","length","rule2","contents","transformCSSClassRules","transformCSSRule","trim","querySelectorAll","push","classList","add","FLY_TO_SPEED","map","bounds","delta","center","zoom","cameraForBounds","transformedZoom","max","speed","placeType","username","styleId","STATIC_BASE_URL_SATELLITE","getStaticBaseUrl","AUTOFILL_SKU_TOKEN_PREFIX","MAPBOX_DOMAINS","SessionToken","id","json","JSON","parse","e","a","b","aKeys","keys","bKeys","deepEquals","num","decimalPlaces","factorOfTen","pow","round","hostname","Boolean","match","some","domain","includes","HTMLElement","__privateAdd","randomValidID","__privateGet","_seed","clonedCallback","oldSeed","newSeed","seedTransform","transformDOMClassAttributes","styles","__privateSet","_templateUserStyleElement","connectedCallback","childElementCount","dataset","seed","prepareTemplate","templateStyle","prepareCSS","userStyle","templateUserStyle","_transform","updateTemplateUserStyle","selectors","addEventListener","type","listener","options","removeEventListener","event","CustomEvent","detail","composed","newTarget","eventClone","MapboxHTMLEvent","defineProperty","styleToggleSatelliteImg","version","styleToggleDefaultImg","MOBILE_BREAKPOINT","MOBILE_MEDIA_QUERY","DEFAULT_THEME","variables","unit","unitHeader","minWidth","spacing","padding","paddingModal","colorText","colorPrimary","colorSecondary","colorBackground","colorBackgroundHover","colorBackgroundActive","colorBackdrop","border","borderRadius","boxShadow","lineHeight","fontFamily","fontWeight","fontWeightSemibold","fontWeightBold","duration","curve","icons","close","close_default","question","question_default","marker","marker_default","images","styleToggleDefault","styleToggleSatellite","rootSelector","theme","__spreadValues","rootVariables","isArray","valueStr","stringify","Error","mobileValue","desktopValue","iconName","svgString","imageName","imgString","TEMPLATE","createElementFromString","RENDER_TEMPLATE","resultListId","i","HTMLScopedElement","Results","_binding","target","searchText","setAttribute","session","suggest","result","suggestions","__privateMethod","_hideResults","hideResults_fn","_renderResultsList","renderResultsList_fn","_showResults","showResults_fn","error","activeElement","abort","preventDefault","selectedIndex","min","retrieve","style_default","getThemeCSS","_sessionInternal","newSession","oldSession","_handleSuggest","_handleSuggestError","_inputInternal","newInput","oldInput","_handleInput","_handleFocus","_handleBlur","_handleKeyDown","_popper","destroy","_resultListID","isConnected","createPopper","placement","_selectedIndexInternal","newIndex","oldIndex","ResultsList","Label","getAriaIdForSuggestion","oldId","oldEl","removeAttribute","address","renderItem","fillItem","item","nameEl","descriptionEl","address_line1","matching_name","feature_name","description","_optionsInternal","newOptions","_themeInternal","bindElements","MapboxSearch","_labelID","requestAnimationFrame","update","disconnectedCallback","suggestion","retrieveFeature","features","focus","updatePopover","rect","MapboxSearch2","getChildElements","onmouseenter","indexOf","onclick","MapboxSearchListbox","customElements","get","define","currentTarget","stopPropagation","MouseEvent","AUTOFILL_TOKENS","Set","AUTOFILL_SKIP_TOKENS","parentNode","HTMLFormElement","form","parent","SECTION","SECTION_DEFAULT","SECTION_SHIPPING","SECTION_BILLING","inputs","tagName","toLowerCase","res","isVisible","autocomplete","getAttribute","has","tokens","field","pop","section","sectionToken","startsWith","ref","logicalSections","logicalSectionSections","formStructure","parseFormStructure","foundSection","lastIndex","createNewSection","findAddressAutofillInputs","streetAddress","address_line2","address_line3","part","address_level1","address_level2","address_level3","countryCode","metadata","iso_3166_1","country","HTMLSelectElement","firstOption","isUpperCase","toUpperCase","postcode","values","snapshot","feature","findParentForm","featureToSuggestion","setFormAutofillValues","properties","targetMap","referenceMap","autofillValues","baseAddress","firstLine","lastLine","parts","span","insertBefore","line2","line3","addressLines","addressLinesHtml","val","SessionToken2","config","Config","configurable","writable","CONTRIBUTE_API_BASE_URL","CONTRIBUTE_API_STAGING_BASE_URL","EDIT_SUGGESTION_ENDPOINT","accessToken","feedbackArgs","feedbackEnabled","location","BASE_URL","isLocalServer","isMapboxDomain","url","originalCoordinate","originalAddress","changes","payload","action","reason","longitude","latitude","userEmail","placeName","fetch","method","headers","Headers","navigator","userAgent","body","TEMPLATE2","_feature","_formValues","ModalMap","Minimap","ModalAddressApprove","_binding2","minimap","defaultMapStyle","mapStyleMode","satelliteToggle","approveAddress","place_name","full_address","createAddressElement","sendFeedback","geometry","coordinates","getAutofillSearchText","_themeInternal2","IconQuestion","IconClose","getIcon","MapboxAddressConfirmationFeature","Modal","ModalHeaderTitle","ButtonApprove","ButtonReject","_modalHeaderTitleID","_modalAddressApproveID","_modalID","buttons","button","ariaButtonKeyDown","_handleClose","approve","reject","IconClose2","TEMPLATE3","ModalAddress","_binding3","_themeInternal3","_modalHeaderTitleID2","_modalAddressID","_modalID2","_handleClose2","MapboxAddressConfirmationNoFeature","TEMPLATE4","_themeInternal4","_binding4","ContentFeature","ContentNoFeature","MapboxAddressConfirmation","MapboxAddressConfirmation2","_focusTrap","hide","_show","deactivate","noScroll","off","show","optionsArg","on","activeContentElement","createFocusTrap","fallbackFocus","escapeDeactivates","activate","Promise","resolve","eventHost","fn","tryShow","autofill2","MapboxAutofill","featureCollection","sessionToken","autofillSessionToken","defaultValidation","feature2","match_code","confidence","AutofillMatchCodeConfidence","exact","skipConfirmModal","MapboxAutofill2","SearchSession","_autofill","_input","fillFormWithFeature","_listbox","console","message","MutationObserver","_handleObserve","newToken","autofillSessionEnabled","_session","_handleSuggest2","_handleSuggestError2","_handleRetrieve","_observer","observe","subtree","childList","disconnect","attributeChangedCallback","name","oldValue","newValue","tryParseJSON","optionName","MapboxAddressAutofill","observedAttributes","MAX_ZOOM","TEMPLATE5","SearchSession2","_search","__async","featureToSuggestion2","_input2","_map","place_type","bounds2","bbox","flyTo","bboxViewport","LngLatBounds","convert","toFlatArray","getMaxZoom","geoAccurateFeatures","bboxPolygon","assign","_listbox2","getZoom","proximity","getCenter","__spreadProps","_handleInput2","_session2","_handleSuggest3","_handleSuggestError3","_handleRetrieve2","bindMap","_handleMoveEnd","unbindMap","onAdd","container","onRemove","getDefaultPosition","MapboxSearchBox","merc","SphericalMercator","size","antimeridian","MAX_IMAGE_DIM","anchor","getElementSize","imageContainer","keepMarkerCentered","anchorOffsetX","anchorOffsetY","getAnchorOffset","markerElement","markerTransform","anchorX","anchorY","globalX","globalY","m","isActive","_updatePointerPosition","_onPointerMoveMarker","_onPointerUpMarker","diffX","curPointerXPos","pageX","diffY","curPointerYPos","pageY","markerDeltaX","markerDeltaY","imgWidth","imgHeight","imageOffsetX","imgCenterPx","imgCenterAdjustedPx","imageOffsetY","deltaX","deltaY","_onPointerMoveImage","_onPointerUpImage","top","imgContainerElement","scrollTop","clientHeight","left","scrollLeft","clientWidth","_markerTransform","transformX","transformY","_onPointerDownImage","_onPointerDownMarker","resizeObserver","ResizeObserver","_handleAnchorResize","_anchor","newAnchor","_updateMarkerTransform","_isActive","touchAction","adjustedPx","_originalCoordinate","lngLat","ll","px","ZOOM","TEMPLATE6","mapboxgl_ctrl_logo_default","STYLE_TOGGLE_TEMPLATE","FOOTER_TEMPLATE","EDIT_BUTTONS_TEMPLATE","ImageContainer","ButtonAdjust","ButtonSave","ButtonCancel","_binding5","_isAdjustMarkerEditing","_markerController","_toggleMarkerEditing","coordinate","lng","lat","onSaveMarkerLocation","reCenter","_imageLoaded","lngLatLike","_width","_height","defaultBaseUrl","baseUrl","skuToken","toString","imgUrl","LngLat","toArray","_feature2","_url","_getImageUrl","Image","src","styleMode","getImage","MapboxAddressMinimap","MapboxAddressMinimap2","_updateImageSrc","existingFooter","footerElement","minimapElement","existingEditBtns","editButtonsElement","innerFrame","EditButtons","_handleStartMarkerEditing","_handleSaveMarkerEditing","_handleCancelMarkerEditing","existingToggle","toggleElement","MapStyleToggle","_handleToggleMapStyle","backgroundImage","_getToggleBackgroundImageUrl","_canAdjustMarkerInternal","_addMarkerEditControls","_removeMarkerEditControls","_accessToken","_satelliteToggleInternal","_addSatelliteToggle","_removeSatelliteToggle","_themeInternal5","Marker","_mapStyleMode","prevStyleMode","_defaultMapStyle","_container","newContainer","position","canAdjustMarker","_setSize","MarkerController","markerAnchor","onload","_handleImageLoad","onerror","_handleImageError","collection","autofillRef","_collection","fire","_input3","listbox","SearchSession3","_handleSuggest4","_handleSuggestError4","_handleRetrieve3","Evented","MapboxAutofill3","findAddressInputs","_currentInputs","_handleObserve2","_autofill2","_options","instances","forEach","instance","_theme","newTheme","autofillInstance","AutofillInstance","_observer2","unobserve","AutofillCollection","confirmation","_0","sections","collectedResult","structure","listboxComponents","structureRef","find","s","getFormAutofillValues","lb","lastRetrievedFeature","featureToAutofillValueMap","checkAutofillValuesChanged","featureToSuggestion3"],"sources":["../src/components/MapboxSearchListbox.ts","../src/utils/dom.ts","../src/utils/class_name_transformers.ts","../src/utils/index.ts","../src/utils/map.ts","../src/constants.ts","../src/components/HTMLScopedElement.ts","../src/MapboxHTMLEvent.ts","../src/theme.ts","../src/utils/aria.ts","../src/utils/autofill.ts","../src/utils/confirmation.ts","../src/config.ts","../src/utils/contribute.ts","../src/components/MapboxAddressConfirmationFeature.ts","../src/components/MapboxAddressConfirmationNoFeature.ts","../src/components/MapboxAddressConfirmation.ts","../src/components/MapboxAddressAutofill.ts","../src/components/MapboxSearchBox.ts","../src/components/MapboxAddressMinimap.ts","../src/utils/minimap.ts","../src/autofill.ts","../src/confirmAddress.ts"],"sourcesContent":["import { createPopper } from '@popperjs/core/lib/popper-lite';\nimport {\n  SearchSession,\n  Suggestion as SearchSuggestion,\n  AutofillSuggestion,\n  AutofillRetrieveResponse,\n  FeatureSuggestion,\n  AutofillFeatureSuggestion\n} from '@mapbox/search-js-core';\n\nimport { HTMLScopedElement } from './HTMLScopedElement';\n\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\nimport { Theme, getThemeCSS } from '../theme';\nimport { randomValidID } from '../utils';\nimport {\n  bindElements,\n  createElementFromString,\n  getChildElements\n} from '../utils/dom';\n\nimport style from '../style.css';\n\nconst TEMPLATE = createElementFromString<HTMLTemplateElement>(`\n<template>\n  <div class=\"MapboxSearch\">\n      <div class=\"Label\" role=\"label\" aria-live=\"polite\" aria-atomic=\"true\">\n      </div>\n      <div class=\"Results\" aria-hidden=\"true\">\n        <div class=\"ResultsList\" role=\"listbox\">\n        </div>\n        <div class=\"ResultsAttribution\" aria-hidden=\"true\">\n          <a href=\"https://www.mapbox.com/search-service\" target=\"_blank\" tabindex=\"-1\">\n            Powered by Mapbox\n          </a>\n        </div>\n      </div>\n  </div>\n</template>\n`);\n\nconst RENDER_TEMPLATE = createElementFromString<HTMLTemplateElement>(`\n<template>\n  <div class=\"Suggestion\" role=\"option\">\n    <div class=\"SuggestionName\"></div>\n    <div class=\"SuggestionDesc\"></div>\n  </div>\n</template>\n`);\n\nfunction getAriaIdForSuggestion(resultListId: string, i: number): string {\n  return `${resultListId}-${i}`;\n}\n\ntype Binding = {\n  /**\n   * Wrapper around the entire component.\n   */\n  MapboxSearch: HTMLElement;\n  /**\n   * Results container, which contains:\n   * - {@link ResultsList}\n   * - {@link Label}\n   * - Attribution.\n   */\n  Results: HTMLDivElement;\n  /**\n   * Exposed as a listbox to assistive technologies.\n   */\n  ResultsList: HTMLUListElement;\n  /**\n   * Exposed as a label.\n   *\n   * Visually hidden but can \"announce\" the current selection to\n   * assistive technologies.\n   */\n  Label: HTMLDivElement;\n};\n\ntype ListboxEventTypes<SuggestionResponse, RetrieveResponse> = {\n  suggest: MapboxHTMLEvent<SuggestionResponse>;\n  suggesterror: MapboxHTMLEvent<Error>;\n  retrieve: MapboxHTMLEvent<RetrieveResponse>;\n};\n\nexport class MapboxSearchListbox<\n  Options,\n  Suggestion extends SearchSuggestion | AutofillSuggestion,\n  SuggestionResponse extends { suggestions: Suggestion[] },\n  RetrieveResponse\n> extends HTMLScopedElement<\n  ListboxEventTypes<SuggestionResponse, RetrieveResponse>\n> {\n  protected override get template(): HTMLTemplateElement {\n    return TEMPLATE;\n  }\n\n  protected override get templateStyle(): string {\n    return style;\n  }\n\n  protected get templateUserStyle(): string {\n    return getThemeCSS('.MapboxSearch', this.theme);\n  }\n\n  #sessionInternal: SearchSession<\n    Options,\n    Suggestion,\n    SuggestionResponse,\n    RetrieveResponse\n  > | null;\n\n  get session(): SearchSession<\n    Options,\n    Suggestion,\n    SuggestionResponse,\n    RetrieveResponse\n  > | null {\n    return this.#sessionInternal;\n  }\n\n  set session(\n    newSession: SearchSession<\n      Options,\n      Suggestion,\n      SuggestionResponse,\n      RetrieveResponse\n    > | null\n  ) {\n    const oldSession = this.#sessionInternal;\n\n    if (oldSession) {\n      newSession.removeEventListener('suggest', this.#handleSuggest);\n      newSession.removeEventListener('suggesterror', this.#handleSuggestError);\n    }\n\n    if (newSession) {\n      newSession.addEventListener('suggest', this.#handleSuggest);\n      newSession.addEventListener('suggesterror', this.#handleSuggestError);\n    }\n\n    this.#sessionInternal = newSession;\n  }\n\n  get suggestions(): Suggestion[] | null {\n    return this.session.suggestions?.suggestions;\n  }\n\n  #popper: ReturnType<typeof createPopper> | null = null;\n\n  #binding: Binding;\n\n  #labelID = randomValidID();\n  #resultListID = randomValidID();\n\n  #inputInternal: HTMLInputElement | null;\n\n  get input(): HTMLInputElement | null {\n    return this.#inputInternal;\n  }\n\n  set input(newInput: HTMLInputElement | null) {\n    const oldInput = this.#inputInternal;\n\n    if (oldInput) {\n      oldInput.removeEventListener('input', this.#handleInput);\n      oldInput.removeEventListener('focus', this.#handleFocus);\n      oldInput.removeEventListener('blur', this.#handleBlur);\n      oldInput.removeEventListener('keydown', this.#handleKeyDown);\n\n      if (this.#popper) {\n        this.#popper.destroy();\n      }\n    }\n\n    if (newInput) {\n      newInput.addEventListener('input', this.#handleInput);\n      newInput.addEventListener('focus', this.#handleFocus);\n      newInput.addEventListener('blur', this.#handleBlur);\n      newInput.addEventListener('keydown', this.#handleKeyDown);\n\n      // Set ARIA role and attributes.\n      newInput.setAttribute('role', 'combobox');\n      newInput.setAttribute('aria-autocomplete', 'list');\n      newInput.setAttribute('aria-controls', this.#resultListID);\n\n      if (this.isConnected) {\n        this.#popper = createPopper(newInput, this.#binding.Results, {\n          placement: 'bottom-start'\n        });\n      }\n    }\n\n    this.#inputInternal = newInput;\n  }\n\n  #selectedIndexInternal = 0;\n\n  get selectedIndex(): number {\n    return this.#selectedIndexInternal;\n  }\n\n  set selectedIndex(newIndex: number) {\n    const oldIndex = this.#selectedIndexInternal;\n    this.#selectedIndexInternal = newIndex;\n\n    // Update accessibility flags.\n    const { ResultsList, Label } = this.#binding;\n\n    const id = getAriaIdForSuggestion(this.#resultListID, newIndex);\n    this.input.setAttribute('aria-activedescendant', id);\n    ResultsList.setAttribute('aria-activedescendant', id);\n\n    // Update the selected suggestion.\n    if (oldIndex !== newIndex) {\n      const oldId = getAriaIdForSuggestion(this.#resultListID, oldIndex);\n      const oldEl = ResultsList.querySelector(`#${oldId}`);\n      oldEl?.removeAttribute('aria-selected');\n\n      const el = ResultsList.querySelector(`#${id}`);\n      el?.setAttribute('aria-selected', 'true');\n    }\n\n    Label.textContent =\n      this.suggestions[newIndex].address +\n      `: Suggestion ${newIndex + 1} of ${this.suggestions.length}`;\n  }\n\n  #showResults(): void {\n    if (!this.suggestions || !this.suggestions.length) {\n      return;\n    }\n\n    const { Results, MapboxSearch } = this.#binding;\n\n    // Calculate width, enable display\n    const rect = this.input.getBoundingClientRect();\n    MapboxSearch.style.setProperty('--width', `${rect.width}px`);\n    MapboxSearch.style.setProperty('display', 'block');\n\n    // Update accessibility flags.\n    this.input.setAttribute('aria-expanded', 'true');\n    Results.removeAttribute('aria-hidden');\n    // Reset selected index.\n    this.selectedIndex = 0;\n  }\n\n  #hideResults(): void {\n    const { Results, ResultsList } = this.#binding;\n\n    // Update accessibility flags.\n    Results.setAttribute('aria-hidden', 'true');\n    this.input.removeAttribute('aria-expanded');\n    ResultsList.removeAttribute('aria-activedescendant');\n    this.input.removeAttribute('aria-activedescendant');\n  }\n\n  renderItem(i: number): HTMLElement {\n    const element = this.prepareTemplate(RENDER_TEMPLATE);\n    element.id = getAriaIdForSuggestion(this.#resultListID, i);\n\n    return element;\n  }\n\n  fillItem(el: Element, item: Suggestion, i: number): void {\n    const [nameEl, descriptionEl] = Array.from(\n      el.querySelectorAll('[role=\"option\"] > *')\n    );\n\n    nameEl.textContent =\n      'address_line1' in item\n        ? item.address_line1 || item.matching_name || item.feature_name\n        : item.matching_name || item.feature_name;\n    descriptionEl.textContent = item.description;\n\n    if (i === this.selectedIndex) {\n      el.setAttribute('aria-selected', 'true');\n    } else {\n      el.removeAttribute('aria-selected');\n    }\n  }\n\n  #renderResultsList(): void {\n    const { ResultsList } = this.#binding;\n    const suggestions = this.suggestions;\n\n    if (!suggestions || !suggestions.length) {\n      // Speed optimization?\n      ResultsList.innerHTML = '';\n      this.#hideResults();\n      return;\n    }\n\n    /**\n     * Make sure we have the correct number of nodes.\n     */\n    const elements = getChildElements(ResultsList);\n    // Too few, add any we're missing.\n    if (suggestions.length > elements.length) {\n      for (let i = elements.length; i < suggestions.length; i++) {\n        const item = this.renderItem(i);\n        elements.push(item);\n\n        // Setup selected index listener.\n        item.onmouseenter = () => {\n          this.selectedIndex = i;\n        };\n\n        ResultsList.appendChild(item);\n      }\n    }\n\n    // Too many, remove any we're not using anymore.\n    if (suggestions.length < elements.length) {\n      for (let i = suggestions.length; i < elements.length; i++) {\n        elements[i].remove();\n      }\n    }\n\n    /**\n     * Fill out DOM nodes with our data.\n     */\n    for (const suggestion of suggestions) {\n      const i = suggestions.indexOf(suggestion);\n      const element = elements[i];\n\n      this.fillItem(element, suggestion, i);\n      // Override 'onclick' for autofill.\n      element.onclick = () => {\n        this.retrieve(suggestion);\n      };\n    }\n  }\n\n  #optionsInternal: Partial<Options> = {};\n\n  get options(): Partial<Options> {\n    return this.#optionsInternal;\n  }\n\n  set options(newOptions: Partial<Options>) {\n    this.#optionsInternal = newOptions;\n  }\n\n  #themeInternal: Theme = {};\n\n  get theme(): Theme {\n    return this.#themeInternal;\n  }\n\n  set theme(theme: Theme) {\n    this.#themeInternal = theme;\n\n    if (!this.#binding || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(getThemeCSS('.MapboxSearch', theme));\n  }\n\n  retrieveFeature: FeatureSuggestion | AutofillFeatureSuggestion = null;\n\n  #handleInput = (e: InputEvent): void => {\n    // Prevent duping requests.\n    const { Results } = this.#binding;\n    const input = e.target as HTMLInputElement;\n\n    if (input.dataset['mapboxSuccess']) {\n      delete input.dataset['mapboxSuccess'];\n      return;\n    }\n\n    const searchText = input.value;\n\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-busy\n    Results.setAttribute('aria-busy', 'true');\n\n    this.session.suggest(searchText, this.options);\n  };\n\n  /**\n   * Connected to {@link SearchSession}.\n   */\n  #handleSuggest = (result: SuggestionResponse): void => {\n    if (!result || !result.suggestions) {\n      this.#hideResults();\n      return;\n    }\n\n    this.#renderResultsList();\n    if (result.suggestions.length) {\n      this.#showResults();\n    }\n\n    // Make sure to fire events after our side-effects are done.\n    this.dispatchEvent(new MapboxHTMLEvent('suggest', result));\n\n    const { Results } = this.#binding;\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-busy\n    Results.setAttribute('aria-busy', 'false');\n  };\n\n  /**\n   * Connected to {@link SearchSession}.\n   */\n  #handleSuggestError = (error: Error): void => {\n    // TODO: Add a user facing event view.\n    this.dispatchEvent(new MapboxHTMLEvent('suggesterror', error));\n\n    const { Results } = this.#binding;\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-busy\n    Results.setAttribute('aria-busy', 'false');\n\n    this.#hideResults();\n  };\n\n  #handleFocus = (): void => {\n    const input = this.input;\n    delete input.dataset['mapboxSuccess'];\n\n    this.#showResults();\n  };\n\n  #handleBlur = (): void => {\n    // See if we're the target.\n    if (document.activeElement === this.input) {\n      return;\n    }\n\n    // Abort any in-progress operations.\n    this.session.abort();\n    this.#hideResults();\n  };\n\n  #handleKeyDown = (e: KeyboardEvent): void => {\n    if (e.key === 'Escape') {\n      this.#hideResults();\n      return;\n    }\n\n    if (e.key === 'ArrowUp') {\n      e.preventDefault();\n      this.selectedIndex = Math.max(0, this.selectedIndex - 1);\n      return;\n    }\n\n    if (e.key === 'ArrowDown') {\n      e.preventDefault();\n      this.selectedIndex = Math.min(\n        this.selectedIndex + 1,\n        this.suggestions.length - 1\n      );\n      return;\n    }\n\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      this.retrieve(this.suggestions[this.selectedIndex]);\n      return;\n    }\n  };\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n\n    this.#binding = bindElements<Binding>(this, {\n      MapboxSearch: '.MapboxSearch',\n      Results: '.Results',\n      ResultsList: '.ResultsList',\n      Label: '.Label'\n    });\n\n    const { Results, ResultsList, Label } = this.#binding;\n\n    Label.id = this.#labelID;\n    ResultsList.id = this.#resultListID;\n    ResultsList.setAttribute('aria-labelledby', this.#labelID);\n\n    Results.addEventListener('blur', this.#handleBlur);\n\n    if (!this.#popper && this.input) {\n      this.#popper = createPopper(this.input, this.#binding.Results, {\n        placement: 'bottom-start'\n      });\n    }\n\n    // Update popper on next frame.\n    requestAnimationFrame(() => {\n      if (this.#popper) {\n        this.#popper.update();\n      }\n    });\n  }\n\n  disconnectedCallback(): void {\n    // Make sure to unbind input listeners.\n    this.input = null;\n\n    const { Results } = this.#binding;\n    Results.removeEventListener('blur', this.#handleBlur);\n  }\n\n  async retrieve(suggestion: Suggestion): Promise<void> {\n    const input = this.input;\n    if (input) {\n      input.dataset['mapboxSuccess'] = 'true';\n    }\n\n    const result = await this.session.retrieve(suggestion, this.options);\n    this.retrieveFeature = (result as AutofillRetrieveResponse).features?.[0];\n\n    this.#hideResults();\n    this.dispatchEvent(new MapboxHTMLEvent('retrieve', result));\n  }\n\n  focus(): void {\n    // Refire the event internally, in case we missed it\n    // and the end user is trying to replay it.\n    if (document.activeElement === this.input) {\n      this.#handleFocus();\n    } else {\n      this.input.focus();\n    }\n  }\n\n  updatePopover(): void {\n    if (this.#popper) {\n      this.#popper.update();\n    }\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxSearchListbox: typeof MapboxSearchListbox;\n  }\n}\n\nwindow.MapboxSearchListbox = MapboxSearchListbox;\n\nif (!window.customElements.get('mapbox-search-listbox')) {\n  customElements.define('mapbox-search-listbox', MapboxSearchListbox);\n}\n","/**\n * Used below in {@link createCSSStyleSheet}.\n */\nconst subdoc = document.implementation.createHTMLDocument();\n\nexport function bindElements<\n  Binding extends { [key: string | symbol | number]: Element }\n>(root: Element, elements: { [key in keyof Binding]: string }): Binding {\n  const binding: Binding = {} as Binding;\n  for (const [key, selector] of Object.entries(elements)) {\n    binding[key as keyof Binding] = root.querySelector(selector);\n  }\n\n  return binding;\n}\n\n/**\n * Gets all child elements for a given node.\n */\nexport function getChildElements(node: Node): HTMLElement[] {\n  return Array.from(node.childNodes || []).filter(\n    (el) => el.nodeType === Node.ELEMENT_NODE\n  ) as HTMLElement[];\n}\n\n/**\n * Creates an HTML element from a string and returns it.\n */\nexport function createElementFromString<T extends Element>(\n  innerHTML: string\n): T {\n  const template = document.createElement('template');\n  template.innerHTML = innerHTML;\n  return template.content.firstElementChild as T;\n}\n\n/**\n * Returns a {@link CSSStyleSheet} that can be used to traverse a\n * CSS file.\n *\n * NOTE: We need to use a sub-document to avoid the styles being\n * applied to the current page.\n */\nexport function createCSSStyleSheet(text: string): CSSStyleSheet {\n  const style = subdoc.createElement('style');\n  style.textContent = text;\n  subdoc.head.appendChild(style);\n  return style.sheet;\n}\n\n/**\n * Returns if the property has \"display: none\" set on itself.\n *\n * Reference: https://stackoverflow.com/questions/19669786/check-if-element-is-visible-in-dom\n */\nexport function isVisible(element: HTMLElement): boolean {\n  const style = window.getComputedStyle(element);\n  return style.display !== 'none';\n}\n\nexport type InputFormElement =\n  | HTMLInputElement\n  | HTMLSelectElement\n  | HTMLTextAreaElement;\n\ntype ReactInputEvent = Event & {\n  simulated: boolean;\n};\n\ntype ReactInputWrapperState = InputFormElement & {\n  _valueTracker?: {\n    getValue: () => string;\n    setValue: (value: string) => void;\n    stopTracking: () => void;\n  };\n};\n\n/**\n * Sets the value of the given input element and triggers an `input` event.\n *\n * This should also work for React, which overrides the `value` setter with\n * a custom tracker. Due to this, a naive `input.value = value` will not\n * work correctly in React.\n *\n * Reference: https://github.com/facebook/react/blob/c88fb49d37fd01024e0a254a37b7810d107bdd1d/packages/react-dom/src/client/inputValueTracking.js#L53\n * Reference: https://github.com/facebook/react/issues/11488\n */\nexport function setValue(\n  input: InputFormElement | undefined,\n  value: string\n): void {\n  if (!input) {\n    return;\n  }\n\n  const set = Object.getOwnPropertyDescriptor(\n    input.constructor.prototype,\n    'value'\n  ).set;\n  set.call(input, value);\n\n  // Make this work in React 16+.\n  const wrapperState = input as ReactInputWrapperState;\n  if (wrapperState._valueTracker) {\n    wrapperState._valueTracker.setValue('');\n  }\n\n  const onInputEvent = new Event('input', {\n    bubbles: true\n  }) as ReactInputEvent;\n  onInputEvent.simulated = true;\n\n  input.dispatchEvent(onInputEvent);\n\n  const onChangeEvent = new Event('change', {\n    bubbles: true\n  }) as ReactInputEvent;\n  onChangeEvent.simulated = true;\n\n  input.dispatchEvent(onChangeEvent);\n}\n\n/**\n * Pre-calculate the size of an element, handling cases where the element is not yet rendered\n * @param element - The element to measure\n * @param deep - If true, include node's descendents in calculation. Defaults to false.\n * @returns Object with height and width properties as numbers\n */\nexport function getElementSize(\n  element: HTMLElement,\n  deep = false\n): {\n  height: number;\n  width: number;\n} {\n  let width: number;\n  let height: number;\n  const elementRect = element.getBoundingClientRect();\n  if (\n    element.style.display === 'none' ||\n    (elementRect.height === 0 && elementRect.width === 0)\n  ) {\n    const clone = element.cloneNode(deep) as HTMLElement;\n    element.parentElement.appendChild(clone);\n    clone.style.setProperty('display', 'block', 'important');\n    const cloneRect = clone.getBoundingClientRect();\n    width = cloneRect.width;\n    height = cloneRect.height;\n    clone.style.setProperty('display', 'none');\n    clone.remove();\n  } else {\n    width = elementRect.width;\n    height = elementRect.height;\n  }\n  return {\n    height: Math.floor(height),\n    width: Math.floor(width)\n  };\n}\n","import { createCSSStyleSheet } from './dom';\n\n/**\n * W3C spec:\n *\n * In CSS, identifiers (including element names, classes, and IDs in selectors)\n * can contain only the characters [a-z0-9] and ISO 10646 characters U+00A0 and\n * higher, plus the hyphen (-) and the underscore (_); they cannot start with a\n * digit, or a hyphen followed by a digit. Identifiers can also contain escaped\n * characters and any ISO 10646 character as a numeric code (see next item).\n *\n * For instance, the identifier \"B&W?\" may be written as \"B&W?\" or \"B\\26 W\\3F\".\n *\n * Reference: https://stackoverflow.com/questions/448981/which-characters-are-valid-in-css-class-names-selectors\n */\nconst IDENTIFIER_REGEX = new RegExp('[_a-zA-Z]+[_a-zA-Z0-9-]*', 'g');\nconst CLASS_NAME_REGEX = new RegExp(`\\\\.${IDENTIFIER_REGEX.source}`, 'g');\n\n/**\n * Of the format @IDENFIFIER (RULE) { }\n *\n * Only catches the media and supports identifiers.\n *\n * Reference: https://developer.mozilla.org/en-US/docs/Web/CSS/At-rule\n */\nconst CONDITION_RULE_REGEX = new RegExp(\n  `^\\\\s*(@(?:media|supports)[^{]*){(.*)}\\\\s*$`\n);\n\nexport function transformClassSelectors(\n  css: string,\n  transform: (className: string) => string\n): string {\n  return css.replace(CLASS_NAME_REGEX, (className: string) => {\n    return '.' + transform(className.slice(1));\n  });\n}\n\n/**\n * Returns a version of the CSS string with each class name transformed\n * by {@link transform}.\n *\n * The main reason why this function exists is to allow for CSS class\n * encapsulation without Shadow DOM.\n */\nexport function transformCSSClassRules(\n  text: string,\n  transform: (className: string) => string\n): string {\n  // Create a CSSStyleSheet so we can traverse the CSS rules,\n  // without having to parse ourselves.\n  const sheet = createCSSStyleSheet(text);\n  const rules = sheet.cssRules;\n\n  /**\n   * No guarantees of in-place mutation.\n   */\n  function transformCSSRule(rule: CSSRule): string {\n    /**\n     * [CSSStyleRule](https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleRule)\n     * represents a single CSS declaration block, like `h1 { color: red; }`.\n     *\n     * Make sure to transform the \"selector\", which in the example above is \"h1\".\n     */\n    if (rule instanceof CSSStyleRule) {\n      const selector = transformClassSelectors(rule.selectorText, transform);\n      return `${selector} { ${rule.style.cssText} }`;\n    }\n\n    /**\n     * Condition-rules are like `@media print { ... }`, or `@supports (display: grid) { ... }`.\n     *\n     * This should be covered by [CSSConditionRule](https://developer.mozilla.org/en-US/docs/Web/API/CSSConditionRule)\n     * however browser support for CSSConditionRule is not great: namely, Safari\n     * versions earlier than 14.1 (early 2021) do not support it.\n     *\n     * Because of this, we need to traverse the text of the at-rule with\n     * a regular expression.\n     *\n     * Useful helper: https://regexr.com/\n     */\n    const atRule = CONDITION_RULE_REGEX.exec(rule.cssText.split('\\n').join(''));\n    if (atRule && atRule.length > 2) {\n      const rule = atRule[1];\n      const contents = atRule[2];\n\n      // Recursively transform the contents of the at-rule.\n      return `${rule} { ${transformCSSClassRules(contents, transform)} }`;\n    }\n\n    /**\n     * Otherwise, just pass through fonts, animations, etc...\n     */\n    return rule.cssText;\n  }\n\n  // Construct a new CSS string by traversing the rules and serializing\n  // them to a string.\n  let style = '';\n  for (const rule of Array.from(rules)) {\n    style += transformCSSRule(rule) + '\\n\\n';\n  }\n\n  return style.trim();\n}\n\n/**\n * Manipulates {@param content} in place, with each class attribute transformed\n * by {@link transform}.\n *\n * The main reason why this function exists is to allow for CSS class\n * encapsulation without Shadow DOM.\n */\nexport function transformDOMClassAttributes(\n  content: HTMLElement,\n  transform: (className: string) => string\n): HTMLElement {\n  // Perform the transformation on each class attribute in-place,\n  // on the clone.\n  const elements = Array.from(content.querySelectorAll('[class]'));\n  // Add the current node!\n  elements.push(content);\n\n  for (const element of elements) {\n    const { classList } = element;\n    for (const className of Array.from(classList)) {\n      classList.remove(className);\n      classList.add(transform(className));\n    }\n  }\n\n  // Return the element.\n  return content;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { SessionToken } from '@mapbox/search-js-core';\nimport { MAPBOX_DOMAINS } from '../constants';\n\n/**\n * LngLatBounds in [minX, minY, maxX, maxY] order.\n */\nexport type FlatLngLatBounds = [number, number, number, number];\n\n/**\n * Returns a random ID that is valid as a CSS identifier.\n *\n * CSS identifiers cannot start with a number, so we prefix the ID with `mbx`.\n */\nexport function randomValidID(): string {\n  return `mbx` + new SessionToken().id.slice(0, 8);\n}\n\n/**\n * Try to parse as a JSON object, returning `null` if it fails.\n */\nexport function tryParseJSON<T>(json: string): T | null {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport function deepEquals<T>(a: T, b: T): boolean {\n  if (a == null || b == null) {\n    return a === b;\n  }\n\n  if (typeof a !== 'object' || typeof b !== 'object') {\n    return a === b;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n\n  for (const key of aKeys) {\n    if (!deepEquals(a[key], b[key])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Round a number to a given number of digits after the decimal\n * @param num - Number to round\n * @param decimalPlaces - Number of places after the decimal to round to\n * @returns Rounded decimal number\n */\nexport function round(num: number, decimalPlaces: number): number {\n  const factorOfTen = Math.pow(10, decimalPlaces);\n  return Math.round(num * factorOfTen) / factorOfTen;\n}\n\n/**\n * Returns true if a hostname matches a local server protocol\n * @param hostname - A string representing window.location.hostname\n * @returns A boolean value\n */\nexport function isLocalServer(hostname: string): boolean {\n  return Boolean(\n    hostname.match(\n      /localhost|[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}|::1|\\.local|^$/gi\n    )\n  );\n}\n\n/**\n * Returns true if a hostname matches a Mapbox domain\n * @param hostname - A string representing window.location.hostname\n * @returns A boolean value\n */\nexport function isMapboxDomain(hostname: string): boolean {\n  return Boolean(MAPBOX_DOMAINS.some((domain) => hostname.includes(domain)));\n}\n","import { AdministrativeUnitTypes } from '@mapbox/search-js-core';\nimport mapboxgl from 'mapbox-gl';\n\n/**\n * This is slightly higher than the default value of 1.2.\n * https://docs.mapbox.com/mapbox-gl-js/api/map/#map#flyto\n * We use a high speed value for cypress tests to increase test speed and improve test stability.\n */\nexport const FLY_TO_SPEED = 1.4;\n\n/**\n * Gets the center/zoom for a given bounding box.\n *\n * @param delta - Subtracted from the zoom level so users can fully see\n * the bounding box. This is a hack to add padding.\n */\nexport function bboxViewport(\n  map: mapboxgl.Map,\n  bounds: mapboxgl.LngLatBoundsLike,\n  delta = 0.5\n): mapboxgl.FlyToOptions {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const { center, zoom } = map.cameraForBounds(bounds)!;\n  const transformedZoom = Math.max(zoom - delta, 0);\n\n  return {\n    center,\n    zoom: transformedZoom,\n    speed: FLY_TO_SPEED\n  };\n}\n\n/**\n * Gets the maximum zoom level for a [Mapbox Search API](https://docs.mapbox.com/api/search/search/)\n * place type.\n *\n * @returns The maximum zoom level for the given place type, `16` if the type is not supported.\n */\nexport function getMaxZoom(placeType: AdministrativeUnitTypes): number {\n  switch (placeType) {\n    case 'street':\n      return 15;\n    case 'locality':\n    case 'oaza':\n      return 14;\n    case 'place':\n    case 'city':\n      return 13;\n    case 'district':\n      return 9;\n    case 'region':\n    case 'prefecture':\n      return 6;\n    case 'country':\n      return 4;\n    default:\n      return 16;\n  }\n}\n\n/**\n * Gets the base URL for the Static Images API for a given user style\n * {@link https://docs.mapbox.com/api/maps/static-images/}\n * @param username The username of the account to which the style belongs\n * @param styleId The ID of the style from which to create a static map\n * @returns\n */\nexport function getStaticBaseUrl(username: string, styleId: string): string {\n  return `https://api.mapbox.com/styles/v1/${username}/${styleId}/static/`;\n}\n","import { getStaticBaseUrl } from './utils/map';\n\nexport const STATIC_BASE_URL_SATELLITE = getStaticBaseUrl(\n  'mapbox',\n  'satellite-streets-v11'\n);\n\nexport const AUTOFILL_SKU_TOKEN_PREFIX = '20d01';\n\nexport const MAPBOX_DOMAINS = ['mapbox.com', 'mapbox.cn', 'tilestream.net'];\n","/* eslint-disable custom-elements/expose-class-on-global */\n/* eslint-disable custom-elements/define-tag-after-class-definition */\nimport {\n  transformClassSelectors,\n  transformCSSClassRules,\n  transformDOMClassAttributes\n} from '../utils/class_name_transformers';\n\nimport { randomValidID } from '../utils';\n\n/**\n * Custom HTML element that uses the \"Scoped DOM\" approach,\n * which is not really Shadow DOM, but a way to encapsulate CSS classes\n * without Shadow DOM.\n *\n * This is a workaround for the fact that ARIA attributes are identified by\n * IDs, and cannot be shared between Shadow DOM and non-Shadow DOM (Light DOM)\n * elements due to encapsulation.\n *\n * Examples are an <input> element and its corresponding popover.\n *\n * The \"Scoped DOM\" approach is to encapsulate CSS classes by transforming\n * the class attribute of each element, prefixing each class with a\n * random UUID.\n *\n * Goals of the \"Scoped DOM\":\n *\n * - Once the [Accessibility Object Model (AOM)](https://wicg.github.io/aom/explainer.html) is finalized,\n *   replace all uses of {@link MapboxHTMLScopedElement} with {@link MapboxHTMLShadowElement}, and use\n *   AOM instead of IDREFs for ARIA attributes.\n *\n * - The Scoped DOM should be self-contained and work well enough that we don't\n *   need to constantly work around it.\n *\n * - The Scoped DOM should have extensive testing.\n */\nexport class HTMLScopedElement<\n  Events extends { [key: number | string | symbol]: Event } = Record<\n    string,\n    Event\n  >\n> extends HTMLElement {\n  // Seed to use for class name prefixing.\n  #seed = randomValidID();\n\n  protected get template(): HTMLTemplateElement {\n    return null;\n  }\n\n  protected get templateStyle(): string {\n    return null;\n  }\n\n  protected get templateUserStyle(): string {\n    return null;\n  }\n\n  #templateUserStyleElement: HTMLStyleElement;\n\n  /**\n   * `clonedCallback` should be a part of the Web Components spec, but sadly\n   * it is not.\n   *\n   * This is detected in {@link connectedCallback} below if the seed has changed.\n   */\n  clonedCallback(oldSeed: string, newSeed: string): void {\n    // New transform function that replaces any instances of the old\n    // seed with the new one.\n    const seedTransform = (className: string) =>\n      className.replace(oldSeed, newSeed);\n\n    transformDOMClassAttributes(this, seedTransform);\n\n    const styles = Array.from(this.querySelectorAll<HTMLStyleElement>('style'));\n    for (const style of styles) {\n      style.textContent = transformClassSelectors(\n        style.textContent,\n        seedTransform\n      );\n    }\n\n    // Find and repopulate #templateUserStyleElement.\n    if (styles.length) {\n      this.#templateUserStyleElement = styles[styles.length - 1];\n    }\n  }\n\n  connectedCallback(): void {\n    // Return if we already have children.\n    if (this.childElementCount > 0) {\n      const oldSeed = this.dataset.seed;\n      const newSeed = this.#seed;\n\n      // If we have a different seed than before, say from a clone,\n      // then we need to update any templates and styles.\n      if (oldSeed && oldSeed !== newSeed) {\n        this.clonedCallback(oldSeed, newSeed);\n\n        // Finally, make sure the dataset has the new seed.\n        this.dataset.seed = newSeed;\n      }\n\n      return;\n    }\n\n    this.dataset.seed = this.#seed;\n\n    // Use the Light DOM to contain our inner elements,\n    // and do CSS class obfuscation in the \"Scoped DOM.\"\n    const template = this.template;\n    if (template) {\n      const element = this.prepareTemplate(template);\n      this.appendChild(element);\n    }\n\n    const templateStyle = this.templateStyle;\n    if (templateStyle) {\n      const style = document.createElement('style');\n      style.textContent = this.prepareCSS(templateStyle);\n      this.appendChild(style);\n    }\n\n    const userStyle = document.createElement('style');\n    if (this.templateUserStyle) {\n      userStyle.textContent = this.prepareCSS(this.templateUserStyle);\n    }\n    this.appendChild(userStyle);\n    this.#templateUserStyleElement = userStyle;\n  }\n\n  /**\n   * Transform function for {@link transformCSSClassRules} and\n   * {@link transformDOMClassAttributes}.\n   */\n  #transform = (className: string): string => {\n    return `${this.#seed}--${className}`;\n  };\n\n  prepareTemplate(template: HTMLTemplateElement): HTMLElement {\n    const element = template.content.firstElementChild;\n    return transformDOMClassAttributes(\n      element.cloneNode(true) as HTMLElement,\n      this.#transform\n    );\n  }\n\n  prepareCSS(css: string): string {\n    return transformCSSClassRules(css, this.#transform);\n  }\n\n  updateTemplateUserStyle(style: string): void {\n    if (!this.#templateUserStyleElement) {\n      return;\n    }\n    this.#templateUserStyleElement.textContent = this.prepareCSS(style);\n  }\n\n  querySelector<E extends Element = Element>(selectors: string): E {\n    return super.querySelector(\n      transformClassSelectors(selectors, this.#transform)\n    );\n  }\n\n  querySelectorAll<E extends Element = Element>(\n    selectors: string\n  ): NodeListOf<E> {\n    return super.querySelectorAll(\n      transformClassSelectors(selectors, this.#transform)\n    );\n  }\n\n  addEventListener<K extends keyof Events>(\n    type: K,\n    listener: (this: HTMLFormElement, ev: Events[K]) => unknown,\n    options?: boolean | AddEventListenerOptions\n  ): void;\n  addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions\n  ): void {\n    super.addEventListener(type, listener, options);\n  }\n\n  removeEventListener<K extends keyof Events>(\n    type: K,\n    listener: (this: HTMLFormElement, ev: Events[K]) => unknown,\n    options?: boolean | EventListenerOptions\n  ): void;\n  removeEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | EventListenerOptions\n  ): void {\n    super.removeEventListener(type, listener, options);\n  }\n\n  dispatchEvent<K extends keyof Events>(event: Events[K]): boolean {\n    return super.dispatchEvent(event);\n  }\n}\n","/**\n * `MapboxHTMLEvent` is an event dispatched by the Search Box and Autofill\n * components.\n *\n * @example\n * ```\n * const search = new MapboxSearchBox();\n * search.addEventListener('retrieve', (event: MapboxHTMLEvent<Suggestion>) => {\n *  console.log(event.detail);\n * });\n */\nexport class MapboxHTMLEvent<T> extends CustomEvent<T> {\n  constructor(type: string, detail?: T) {\n    super(type, {\n      composed: true,\n      detail\n    });\n  }\n\n  /**\n   * Returns a shallow copy of the event. This method is useful for\n   * manually bubbling events from a connected component.\n   *\n   * @param newTarget - Optional event target to assign to the clone\n   *\n   * @example\n   * `MapboxSearchBox` will call `event.clone()` on the `retrieve`\n   * event from `MapboxSearchListbox`, and then dispatch the cloned event.\n   */\n  clone(newTarget?: EventTarget): MapboxHTMLEvent<T> {\n    const eventClone = new MapboxHTMLEvent(this.type, this.detail);\n    if (newTarget) {\n      Object.defineProperty(eventClone, 'target', { value: newTarget });\n    }\n    return eventClone;\n  }\n}\n","import closeIcon from './icons/close.svg';\nimport questionIcon from './icons/question.svg';\nimport markerIcon from './icons/marker.svg';\n\nimport { version } from '../package.json';\nconst styleToggleSatelliteImg = `https://api.mapbox.com/search-js/v${version}/img/style-toggle-satellite.jpg`;\nconst styleToggleDefaultImg = `https://api.mapbox.com/search-js/v${version}/img/style-toggle-default.jpg`;\n\n/**\n * Reference:\n * https://getbootstrap.com/docs/5.0/layout/breakpoints/\n */\nexport const MOBILE_BREAKPOINT = 768 - 1;\nconst MOBILE_MEDIA_QUERY = `@media only screen and (max-width: ${MOBILE_BREAKPOINT}px)`;\n\n/**\n * Currently, the only expression supported is\n * `['mobile', mobile_value, tablet_and_desktop_value]`.\n *\n * @typedef Expression\n */\ntype Expression = ['mobile', string, string];\n\n/**\n * `ThemeVariables` are a collection of CSS variables that style Control Theme API\n * elements.\n *\n * @typedef ThemeVariables\n */\nexport interface ThemeVariables {\n  /** @section {Sizing} */\n\n  /**\n   * Unit is the base font size and can be referenced in other variables as multiples of `1em`.\n   *\n   * Analogous to [`font-size`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size).\n   */\n  unit?: string | Expression;\n  /**\n   * Unit header is a derivative of `unit` and is used for modal headers.\n   *\n   * Analogous to [`font-size`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size).\n   */\n  unitHeader?: string | Expression;\n\n  /**\n   * Minimum width of elements such as modals and listboxes.\n   *\n   * Analogous to CSS [`<length>`](https://developer.mozilla.org/en-US/docs/Web/CSS/length).\n   */\n  minWidth?: string;\n  /**\n   * Spacing between items in an element.\n   *\n   * Analogous to CSS [`<length>`](https://developer.mozilla.org/en-US/docs/Web/CSS/length).\n   */\n  spacing?: string;\n  /**\n   * Padding of items in an element.\n   *\n   * Analogous to CSS [`<length>`](https://developer.mozilla.org/en-US/docs/Web/CSS/length).\n   */\n  padding?: string;\n  /**\n   * Padding for contents of modal elements.\n   *\n   * Analogous to CSS [`<length>`](https://developer.mozilla.org/en-US/docs/Web/CSS/length).\n   */\n  paddingModal?: string;\n\n  /** @section {Colors} */\n\n  /**\n   * Color of the primary text.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: dark gray\n   */\n  colorText?: string;\n  /**\n   * Color of the primary accent color.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: variant of blue\n   */\n  colorPrimary?: string;\n  /**\n   * Color of the secondary accent color.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: blue-gray\n   */\n  colorSecondary?: string;\n\n  /**\n   * Background color for elements such as modals and listboxes.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: white\n   */\n  colorBackground?: string;\n  /**\n   * Background color for items on hover.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: light gray\n   */\n  colorBackgroundHover?: string;\n  /**\n   * Background color for items on press.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: dark gray\n   */\n  colorBackgroundActive?: string;\n\n  /**\n   * Backdrop color of body content behind modals.\n   *\n   * Analogous to CSS [`color`](https://developer.mozilla.org/en-US/docs/Web/CSS/color).\n   * **Default**: black with alpha value\n   */\n  colorBackdrop?: string;\n\n  /** @section {Borders and box shadows} */\n\n  /**\n   * Border color of elements such as modals and listboxes.\n   *\n   * Analogous to CSS [`border`](https://developer.mozilla.org/en-US/docs/Web/CSS/border).\n   */\n  border?: string;\n  /**\n   * Border radius of elements such as modals and listboxes.\n   *\n   * Analogous to CSS [`border-radius`](https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius).\n   */\n  borderRadius?: string;\n  /**\n   * Box shadow of elements such as modals and listboxes.\n   *\n   * Analogous to CSS [`box-shadow`](https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow).\n   */\n  boxShadow?: string;\n\n  /** @section {Typography} */\n\n  /**\n   * Line height.\n   *\n   * Analogous to CSS [`line-height`](https://developer.mozilla.org/en-US/docs/Web/CSS/line-height).\n   * **Default**: 1.2\n   */\n  lineHeight?: string;\n  /**\n   * Font family.\n   *\n   * Analogous to CSS [`font-family`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-family).\n   * **Default**: Sans-serif [system font stack](https://systemfontstack.com/)\n   */\n  fontFamily?: string;\n  /**\n   * Font weight for body text.\n   *\n   * Analogous to CSS [`font-weight`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight).\n   * **Default**: normal\n   */\n  fontWeight?: string;\n  /**\n   * Font weight for subheadings.\n   *\n   * Analogous to CSS [`font-weight`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight).\n   * **Default**: 600\n   */\n  fontWeightSemibold?: string;\n  /**\n   * Font weight for headings and item titles.\n   *\n   * Analogous to CSS [`font-weight`](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight).\n   * **Default**: bold\n   */\n  fontWeightBold?: string;\n\n  /** @section {Transitions} */\n\n  /**\n   * The duration to use for listbox animations.\n   *\n   * Analogous to CSS [`<time>`](https://developer.mozilla.org/en-US/docs/Web/CSS/time).\n   * **Default**: `150ms`\n   */\n  duration?: string;\n  /**\n   * The timing function to use for listbox animations.\n   *\n   * Analogous to CSS [`<easing-function>`](https://developer.mozilla.org/en-US/docs/Web/CSS/easing-function).\n   * **Default**: `ease-out`\n   */\n  curve?: string;\n}\n\n/**\n * `ThemeIcons` are [SVG icons](https://developer.mozilla.org/en-US/docs/Web/SVG)\n * that are used in Control Theme API elements.\n *\n * Roughly, icon names and their defaults are the same as\n * [Mapbox's Assembly](https://labs.mapbox.com/assembly/icons/).\n *\n * Values must be valid SVG plain-text. Unless otherwise noted,\n * icons should be 18px in size and have appropriate dimensions set.\n *\n * Icons can also be filled with 'currentColor'.\n *\n * @typedef ThemeIcons\n * @example\n * ```typescript\n * const icons = {\n *   close: `\n * <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n * <svg viewBox=\"0 0 18 18\" xmlns=\"http://www.w3.org/2000/svg\">\n *   <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.79289 3.79289C4.18342 3.40237 4.81658 3.40237 5.20711 3.79289L9 7.58579L12.7929 3.79289C13.1834 3.40237 13.8166 3.40237 14.2071 3.79289C14.5976 4.18342 14.5976 4.81658 14.2071 5.20711L10.4142 9L14.2071 12.7929C14.5976 13.1834 14.5976 13.8166 14.2071 14.2071C13.8166 14.5976 13.1834 14.5976 12.7929 14.2071L9 10.4142L5.20711 14.2071C4.81658 14.5976 4.18342 14.5976 3.79289 14.2071C3.40237 13.8166 3.40237 13.1834 3.79289 12.7929L7.58579 9L3.79289 5.20711C3.40237 4.81658 3.40237 4.18342 3.79289 3.79289Z\" fill=\"currentColor\"/>\n * </svg>\n * `\n * }\n * ```\n */\nexport interface ThemeIcons {\n  /**\n   * Close icon.\n   */\n  close?: string;\n  /**\n   * Question mark icon.\n   */\n  question?: string;\n\n  /**\n   * Icon for map markers. Can be any size.\n   */\n  marker?: string;\n}\n\n/**\n * `ThemeImages` are raster images that are used in Control Theme API elements.\n *\n * There are currently only two images, \"toggle default\" and \"toggle satellite,\"\n * which specify images for a Map/Satellite toggle button.\n *\n * Values must be valid URLs accessible by the expected browser environment. [Data URLs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs)\n * and [Blob URLs](https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL) are also supported.\n *\n * @typedef ThemeImages\n */\nexport interface ThemeImages {\n  /**\n   * Image for the \"Map\" of the Map/Satellite toggle button.\n   */\n  styleToggleDefault?: string;\n  /**\n   * Image for the \"Satellite\" of the Map/Satellite toggle button.\n   */\n  styleToggleSatellite?: string;\n}\n\n/**\n * The Control Theme API is a way to apply your own design system to\n * Mapbox Search JS Web elements.\n *\n * Control themes use a combination of CSS variables, custom scoped CSS, and\n * SVG icons.\n *\n * @typedef Theme\n * @example\n * ```typescript\n * const theme = {\n *   variables: {\n *     fontFamily: 'Avenir, sans-serif',\n *     unit: '14px',\n *     padding: '0.5em',\n *     borderRadius: '0',\n *     boxShadow: '0 0 0 1px silver',\n *   }\n * };\n *\n * autofill({ theme });\n * ```\n */\nexport interface Theme {\n  /**\n   * CSS variables to be applied to the control.\n   */\n  variables?: ThemeVariables;\n  /**\n   * SVG icon overrides to be applied to the control.\n   */\n  icons?: ThemeIcons;\n  /**\n   * Raster image URLs to be applied to the control.\n   */\n  images?: ThemeImages;\n  /**\n   * Optional CSS text to be inserted into Scoped CSS elements. As such, any\n   * CSS will not interact with the rest of the page.\n   *\n   * TODO: Class names are element-specific and have yet to be standardized. Breaking\n   * changes are likely and will be flagged in CHANGELOG.md.\n   */\n  cssText?: string;\n}\n\nconst DEFAULT_THEME: Theme = {\n  variables: {\n    // Added as font size on container, so em references this value.\n    unit: ['mobile', '16px', '14px'],\n    unitHeader: ['mobile', '24px', '18px'],\n\n    minWidth: 'min(300px, 100vw)',\n    spacing: '0.75em',\n    padding: '0.5em 0.75em',\n    paddingModal: '1.25em',\n\n    colorText: 'rgba(0, 0, 0, 0.75)',\n    colorPrimary: '#4264FB',\n    colorSecondary: '#667F91',\n\n    colorBackground: '#fff',\n    colorBackgroundHover: '#f5f5f5',\n    colorBackgroundActive: '#f0f0f0',\n\n    colorBackdrop: 'rgba(102, 127, 145, 0.3)',\n\n    border: 'none',\n\n    borderRadius: '4px',\n    boxShadow: `\n      0 0 10px 2px rgba(0, 0, 0, 0.05),\n      0 0 6px 1px rgba(0, 0, 0, 0.1),\n      0 0 0 1px rgba(0, 0, 0, 0.1)\n    `,\n\n    lineHeight: '1.2em',\n    /**\n     * Reference:\n     * https://systemfontstack.com/\n     */\n    fontFamily: `\n      -apple-system, BlinkMacSystemFont,\n      avenir next, avenir,\n      segoe ui,\n      helvetica neue, helvetica,\n      Ubuntu, roboto, noto, arial, sans-serif\n    `,\n    fontWeight: 'normal',\n    fontWeightSemibold: '600',\n    fontWeightBold: 'bold',\n\n    duration: '150ms',\n    curve: 'ease-out'\n  },\n  icons: {\n    close: closeIcon,\n    question: questionIcon,\n\n    marker: markerIcon\n  },\n  images: {\n    styleToggleDefault: styleToggleDefaultImg,\n    styleToggleSatellite: styleToggleSatelliteImg\n  }\n};\n\ntype CSSText = string;\n\n/**\n * Applies {@link Theme} to the given HTML element as CSS variables\n * in the style attribute.\n */\nexport function getThemeCSS(rootSelector: string, theme: Theme = {}): CSSText {\n  const variables = {\n    // Make sure to shallow apply default variables.\n    ...DEFAULT_THEME.variables,\n    ...(theme.variables || {})\n  };\n\n  let cssText = theme.cssText || '';\n  let rootVariables = '';\n\n  for (const [key, value] of Object.entries(variables)) {\n    // Is a literal, not an expression.\n    if (!Array.isArray(value)) {\n      rootVariables += `--${key}: ${value};`;\n      continue;\n    }\n\n    // Is an expression; only support \"mobile\" for now.\n    if (value[0] !== 'mobile') {\n      const valueStr = JSON.stringify(value);\n      throw new Error(\n        `Unsupported expression in theme variables: ${key} ${valueStr}`\n      );\n    }\n\n    const [, mobileValue, desktopValue] = value;\n\n    // On mobile, force the mobile value.\n    cssText += `${MOBILE_MEDIA_QUERY} { ${rootSelector} { --${key}: ${mobileValue} !important; } }`;\n    // Our default is still the desktop value.\n    rootVariables += `--${key}: ${desktopValue};`;\n  }\n\n  return cssText + `${rootSelector} { ${rootVariables} }`;\n}\n\nexport function getIcon<I extends keyof Theme['icons']>(\n  iconName: I,\n  theme: Theme = {}\n): string | undefined {\n  const icons = {\n    ...DEFAULT_THEME.icons,\n    ...(theme.icons || {})\n  };\n\n  const svgString = icons[iconName];\n  return svgString;\n}\n\nexport function getImage<I extends keyof Theme['images']>(\n  imageName: I,\n  theme: Theme = {}\n): string | undefined {\n  const images = {\n    ...DEFAULT_THEME.images,\n    ...(theme.images || {})\n  };\n\n  const imgString = images[imageName];\n  return imgString;\n}\n","/**\n * This is to make sure our custom \"buttons\" have appropriate\n * keyboard controls for WAI-ARIA.\n *\n * Reference: https://www.w3.org/TR/wai-aria-practices-1.1/#keyboard-interaction-3\n */\nexport function ariaButtonKeyDown(e: KeyboardEvent): void {\n  const el = e.currentTarget as HTMLElement;\n\n  if (e.key === ' ' || e.key === 'Enter') {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // Simulate a click event.\n    el.dispatchEvent(\n      new MouseEvent('click', {\n        bubbles: true,\n        composed: true\n      })\n    );\n  }\n}\n","import {\n  AutofillFeatureSuggestion,\n  AutofillRetrieveResponse,\n  AutofillSuggestion,\n  featureToSuggestion\n} from '@mapbox/search-js-core';\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\nimport { InputFormElement, isVisible, setValue } from './dom';\n\n/**\n * A list of WHATWG autofill tokens relevant to addresses. These will be used to\n * set the `autocomplete` attribute on the input element.\n *\n * Reference: https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofilling-form-controls:-the-autocomplete-attribute\n */\ntype AutofillTokens =\n  | 'street-address'\n  | 'address-line1'\n  | 'address-line2'\n  | 'address-line3'\n  | 'address-level4'\n  | 'address-level3'\n  | 'address-level2'\n  | 'address-level1'\n  | 'country'\n  | 'country-name'\n  | 'postal-code';\n\nexport const AUTOFILL_TOKENS = new Set<AutofillTokens>([\n  'street-address',\n  'address-line1',\n  'address-line2',\n  'address-line3',\n  'address-level4',\n  'address-level3',\n  'address-level2',\n  'address-level1',\n  'country',\n  'country-name',\n  'postal-code'\n]);\n\n/**\n * A list of WHATWG autofill tokens we can safely ignore when traversing\n * `autocomplete` attributes.\n */\nconst AUTOFILL_SKIP_TOKENS = new Set(['off', 'on', 'true', 'false']);\n\n/**\n * Finds the parent form element of the given element, if any.\n *\n * @returns The parent form element, or `null` if none was found.\n */\nexport function findParentForm(el: Element): HTMLFormElement | null {\n  let node = el.parentNode;\n  while (node) {\n    if (node instanceof HTMLFormElement) {\n      return node;\n    }\n    node = node.parentNode;\n  }\n\n  return null;\n}\n\n/**\n * Finds input elements that are eligible to be used for Address Autofill.\n * Eligible inputs include those with standard WHATWG autocomplete attribute values, either 'address-line1' or 'street-address'\n * @param form - If specified, searches within the given form instead of the whole document\n * @returns Array of input elements\n */\nexport function findAddressInputs(form?: HTMLFormElement): HTMLInputElement[] {\n  const parent = form || document;\n  return Array.from(\n    parent.querySelectorAll<HTMLInputElement>(\n      'input[autocomplete~=\"address-line1\"], input[autocomplete~=\"street-address\"]'\n    )\n  );\n}\n\nconst SECTION = 'section-';\n\nconst SECTION_DEFAULT = 'section-default';\nconst SECTION_SHIPPING = 'section-shipping';\nconst SECTION_BILLING = 'section-billing';\n\ntype FormStructure = {\n  input: InputFormElement;\n  section: string;\n  field: AutofillTokens;\n}[];\n\n/**\n * Implementation of \"autocomplete\" {@link FormStructure} that matches the\n * WHATWG spec and somewhat Chromium.\n *\n * `billing` and `shipping` are treated as special sections. The {@link SECTION_SHIPPING}\n * and {@link SECTION_BILLING} symbols are used to identify them.\n *\n * Any inputs without an `autocomplete` attribute are skipped.\n *\n * Reference: https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill\n * Reference: https://github.com/chromium/chromium/blob/18a1302acbf920bc692ec6bd986cacd41ae9c25c/components/autofill/core/browser/form_structure.cc#L1503\n */\nexport function parseFormStructure(form: HTMLFormElement): FormStructure {\n  const inputs = Array.from(\n    form.querySelectorAll<InputFormElement>('[autocomplete]')\n  ).filter((el) => {\n    const tagName = el.tagName.toLowerCase();\n    return (\n      tagName === 'input' || tagName === 'select' || tagName === 'textarea'\n    );\n  });\n\n  const res: FormStructure = [];\n\n  for (const input of inputs) {\n    if (!isVisible(input)) {\n      continue;\n    }\n\n    // Note: HTML <input> element has an HTMLInputElement.autocomplete reflection\n    // property, but <select> elements do not.\n    //\n    // This does **not** mean that autocomplete properties are not valid on\n    // selects. I verified this on a popular e-commerce checkout page.\n    const autocomplete = input.getAttribute('autocomplete') || '';\n    if (!autocomplete || AUTOFILL_SKIP_TOKENS.has(autocomplete)) {\n      continue;\n    }\n\n    const tokens = autocomplete.toLowerCase().split(' ');\n\n    // The tokens are parsed in reverse order. The expected pattern is:\n    // [section-*] [shipping|billing] [type_hint] field_type\n\n    // Address tokens can be a maximum length of 3. We don't need to check [type_hint].\n    if (tokens.length > 3) {\n      continue;\n    }\n\n    // The last token should be a part of our scheme.\n    const field = tokens[tokens.length - 1] as AutofillTokens;\n    if (!AUTOFILL_TOKENS.has(field)) {\n      continue;\n    }\n    tokens.pop();\n\n    let section: symbol | string = SECTION_DEFAULT;\n\n    // The second to last token /could/ be 'shipping' or 'billing'.\n    if (tokens.length) {\n      const sectionToken = tokens[tokens.length - 1];\n\n      if (sectionToken === 'shipping') {\n        section = SECTION_SHIPPING;\n        tokens.pop();\n      }\n\n      if (sectionToken === 'billing') {\n        section = SECTION_BILLING;\n        tokens.pop();\n      }\n    }\n\n    // The remaining tokens could be a section.\n    if (tokens.length) {\n      const sectionToken = tokens[tokens.length - 1];\n      if (sectionToken.startsWith(SECTION)) {\n        section = sectionToken;\n      }\n    }\n\n    res.push({\n      input,\n      section,\n      field\n    });\n  }\n\n  return res;\n}\n\nexport type AutofillInputMap = { [key in AutofillTokens]?: InputFormElement };\nexport type AutofillValueMap = { [key in AutofillTokens]?: string };\n\n/**\n * Reference: [chromium.md](../../../../docs/search_js_web/chromium.md)\n *\n * Implementation of autofill that closely matches Chromium, with a few noted differences:\n *\n * 1. There is no hueristic for inferring a match, so the\n *    WHATWG \"autocomplete\" attribute is required.\n * 2. This parser, unlike Chromium, doesn't allow more than one token type per\n *    section. Chromium **only** allows this if they are in the same order.\n */\nexport function findAddressAutofillInputs(\n  form: HTMLFormElement,\n  ref: HTMLInputElement\n): AutofillInputMap {\n  // Use an array-of-structs to improve performance.\n  // Reference: https://en.wikipedia.org/wiki/AoS_and_SoA#:~:text=Structure%20of%20arrays%20(SoA)%20is,one%20parallel%20array%20per%20field.\n  const logicalSections: AutofillInputMap[] = [];\n  const logicalSectionSections: (string | symbol)[] = [];\n\n  // Parse the form structure, then go through each node to create\n  // logical sections.\n  const formStructure = parseFormStructure(form);\n\n  // When we traverse through the form structure, we can check the input against\n  // ref to find the logical section we actually want.\n  let foundSection: AutofillInputMap = null;\n\n  for (const { input, section, field } of formStructure) {\n    let lastIndex = logicalSections.length - 1;\n\n    // 1. If we have no logical sections, create a new section.\n    // 2. If the current section is different from the last section, create a new section.\n    // 3. If the current field already exists in the last section, create a new section.\n    let createNewSection = false;\n    if (!logicalSections.length) {\n      createNewSection = true;\n    } else if (logicalSectionSections[lastIndex] !== section) {\n      createNewSection = true;\n    } else if (logicalSections[lastIndex][field]) {\n      createNewSection = true;\n    }\n\n    if (createNewSection) {\n      // If we have already found a logical section, creating new sections\n      // just wastes time.\n      if (foundSection) {\n        break;\n      }\n\n      logicalSections.push({\n        [field]: input\n      });\n\n      logicalSectionSections.push(section);\n      // Make sure to update lastIndex.\n      lastIndex++;\n    } else {\n      logicalSections[lastIndex][field] = input;\n    }\n\n    if (input === ref) {\n      foundSection = logicalSections[lastIndex];\n    }\n  }\n\n  return foundSection ?? {};\n}\n\n/**\n * Fills in the address form using HTML autocomplete attributes.\n *\n * This does a mapping from {@link AdministrativeUnitTypes} to corresponding WHATWG autocomplete types.\n *\n * Reference:\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete#values\n * https://docs.mapbox.com/api/search/search/#administrative-unit-types\n */\nexport function setFormAutofillValues(\n  form: HTMLFormElement,\n  ref: HTMLInputElement,\n  suggestion: AutofillSuggestion\n): void {\n  // Find the inputs that we should fill in.\n  const map = findAddressAutofillInputs(form, ref);\n\n  const streetAddress = [\n    suggestion.address_line1,\n    suggestion.address_line2,\n    suggestion.address_line3\n  ]\n    .filter((part) => Boolean(part))\n    .join(', ');\n\n  setValue(map['street-address'], streetAddress);\n  setValue(map['address-line1'], suggestion.address_line1 || '');\n\n  setValue(map['address-level1'], suggestion.address_level1 || '');\n  setValue(map['address-level2'], suggestion.address_level2 || '');\n  setValue(map['address-level3'], suggestion.address_level3 || '');\n\n  // Country in WHATWG refers to the country code, not the name.\n  // Example: 'jp' instead of 'Japan'.\n\n  // Note: Make sure to match case here. The country code is lower-case.\n  const countryCode = suggestion.metadata?.iso_3166_1 || '';\n  if (map.country && map.country instanceof HTMLSelectElement) {\n    const firstOption = map.country.querySelector(`option`).value;\n    const isUpperCase = firstOption === firstOption.toUpperCase();\n\n    setValue(\n      map['country'],\n      isUpperCase ? countryCode.toUpperCase() : countryCode\n    );\n  } else {\n    setValue(map['country'], countryCode);\n  }\n\n  setValue(map['country-name'], suggestion.country || '');\n  setValue(map['postal-code'], suggestion.postcode || '');\n}\n\n/**\n * Gets the current input values for address fields given a form and a reference input.\n *\n * @param form - HTML form that includes the autocomplete-compliant input fields\n * @param ref - An input element within the desired form address section\n * @returns A object mapping WHATWG autocomplete properties to their respective form field values\n *\n * @example\n * ```typescript\n * const form = document.querySelector(form);\n * const input = form.querySelector('input[autocomplete~=\"street-address\"]')\n * const valueMap = getFormAutofillValues(form, input);\n * console.log(valueMap);\n * // {\n * //   \"street-address\": \"123 Main\",\n * //   \"address-level2\": \"Boston\",\n * //   \"address-level1\": \"MA\",\n * //   \"postal-code\": \"02129\"\n * // }\n * ```\n */\nexport function getFormAutofillValues(\n  form: HTMLFormElement,\n  ref: HTMLInputElement\n): AutofillValueMap {\n  const map = findAddressAutofillInputs(form, ref);\n  const values: AutofillValueMap = {};\n  for (const [key, input] of Object.entries(map)) {\n    if (input?.value) {\n      values[key] = input.value;\n    }\n  }\n\n  return values;\n}\n\n/**\n * Converts an {@link AutofillValueMap} to a single line, suitable for\n * display in a text field.\n *\n * @param snapshot - An object mapping WHATWG autocomplete attribute values to their corresponding input field values\n * @returns A concatenated address string\n *\n * @example\n * ```typescript\n * const values = {\n *   'street-address': '123 Main St',\n *   'address-level1': 'CA',\n *   'address-level2': 'San Francisco',\n *   'address-level3': '',\n * };\n *\n * const searchText = getAutofillSearchText(values);\n * console.log(searchText); // '123 Main St, San Francisco, CA'\n * ```\n */\nexport function getAutofillSearchText(snapshot: AutofillValueMap): string {\n  const searchText = [];\n\n  if (snapshot['street-address']) {\n    searchText.push(snapshot['street-address']);\n  } else {\n    searchText.push(snapshot['address-line1'] || '');\n    searchText.push(snapshot['address-line2'] || '');\n    searchText.push(snapshot['address-line3'] || '');\n  }\n\n  searchText.push(snapshot['address-level3'] || '');\n  searchText.push(snapshot['address-level2'] || '');\n  searchText.push(snapshot['address-level1'] || '');\n  searchText.push(snapshot['postal-code'] || '');\n\n  if (snapshot['country-name']) {\n    searchText.push(snapshot['country-name']);\n  } else {\n    searchText.push(snapshot['country'] || '');\n  }\n\n  return searchText.filter((part) => Boolean(part)).join(', ');\n}\n\nexport function fillFormWithFeature(\n  feature: AutofillFeatureSuggestion,\n  input: HTMLInputElement\n): void {\n  const form = findParentForm(input);\n  if (!form) {\n    return;\n  }\n\n  const suggestion = featureToSuggestion(feature);\n  setFormAutofillValues(form, input, suggestion);\n}\n\n/**\n * Gets address property values from an Autofill feature.\n *\n * @param feature - A {@link AutofillFeatureSuggestion} object.\n * @returns A object mapping WHATWG autocomplete properties to their respective feature values\n */\nexport function featureToAutofillValueMap(\n  feature: AutofillFeatureSuggestion\n): AutofillValueMap {\n  const values: AutofillValueMap = {};\n\n  const streetAddress = [\n    feature.properties.address_line1,\n    feature.properties.address_line2,\n    feature.properties.address_line3\n  ]\n    .filter((part) => Boolean(part))\n    .join(', ');\n\n  values['street-address'] = streetAddress;\n  values['address-line1'] = feature.properties.address_line1;\n  values['address-line2'] = feature.properties.address_line2;\n  values['address-line3'] = feature.properties.address_line3;\n  values['address-level1'] = feature.properties.address_level1;\n  values['address-level2'] = feature.properties.address_level2;\n  values['address-level3'] = feature.properties.address_level3;\n  values['country'] = feature.properties.metadata?.iso_3166_1;\n  values['country-name'] = feature.properties.country;\n  values['postal-code'] = feature.properties.postcode;\n\n  return values;\n}\n\n/**\n * Checks if WHATWG address values from one object match those from another.\n *\n * Can be used to compare an HTML form state against the most recently retrieved Autofill feature\n * to determine if a form has been manually edited after a previous Autofill event.\n *\n * @param targetMap - An {@link AutofillValueMap} object.\n * @param referenceMap - An {@link AutofillValueMap} object.\n * @returns False if all values from the target map are equal to their corresponding value from the reference map.\n */\nexport function checkAutofillValuesChanged(\n  targetMap: AutofillValueMap,\n  referenceMap: AutofillValueMap\n): boolean {\n  for (const [key, value] of Object.entries(targetMap)) {\n    if (referenceMap[key] !== value) return true;\n  }\n  return false;\n}\n","import { AutofillFeatureSuggestion } from '@mapbox/search-js-core';\nimport { AutofillValueMap } from './autofill';\nimport { createElementFromString } from './dom';\n\n/**\n * @typedef AddressConfirmShowResult\n */\nexport type AddressConfirmShowResult =\n  | { type: 'change'; feature: AutofillFeatureSuggestion }\n  | { type: 'nochange' }\n  | { type: 'cancel' };\n\n/**\n * Creates a formatted, multi-line HTML element representing an address\n * @param autofillValues - A map of address `<input>` values by autocomplete attribute\n * @param baseAddress - A full address string. If provided, this will be used for the\n * first and last lines of the formatted address, and will be supplemented by any `address-line2`\n * and/or `address-line3` values provided through the `autofillValues` map.\n * @returns\n */\nexport function createAddressElement(\n  autofillValues: AutofillValueMap,\n  baseAddress?: string\n): HTMLElement {\n  if (baseAddress) {\n    const element = createElementFromString<HTMLSpanElement>(`\n        <span>\n          <span></span>\n          <br />\n          <span></span>\n        </span>\n      `);\n\n    const [firstLine, lastLine] = Array.from(\n      element.querySelectorAll<HTMLSpanElement>('span > span')\n    );\n\n    const parts = baseAddress.split(',');\n\n    firstLine.textContent = parts[0].trim();\n    lastLine.textContent = parts.slice(1).join(',').trim();\n\n    // Add any customer-entered address-line2, address-line3 input values\n    if (autofillValues['address-line2']) {\n      const span = document.createElement('span');\n      span.textContent = autofillValues['address-line2'];\n      element.insertBefore(span, lastLine);\n      element.insertBefore(document.createElement('br'), lastLine);\n    }\n    if (autofillValues['address-line3']) {\n      const span = document.createElement('span');\n      span.textContent = autofillValues['address-line3'];\n      element.insertBefore(span, lastLine);\n      element.insertBefore(document.createElement('br'), lastLine);\n    }\n\n    return element;\n  } else {\n    const firstLine =\n      autofillValues['street-address'] || autofillValues['address-line1'] || '';\n    const line2 = autofillValues['address-line2'];\n    const line3 = autofillValues['address-line3'];\n    const lastLine = [\n      autofillValues['address-level4'] || '',\n      autofillValues['address-level3'] || '',\n      autofillValues['address-level2'] || '',\n      `${autofillValues['address-level1'] || ''} ${\n        autofillValues['postal-code'] || ''\n      }`,\n      autofillValues.country || autofillValues['country-name'] || ''\n    ]\n      .filter(Boolean)\n      .join(', ');\n    const addressLines = [firstLine, line2, line3, lastLine].filter(Boolean);\n    const addressLinesHtml = addressLines\n      .map((val) => `<span>${val}</span>`)\n      .join('<br />');\n    const element = createElementFromString<HTMLSpanElement>(`\n        <span>${addressLinesHtml}</span>\n      `);\n    return element;\n  }\n}\n","import { SessionToken } from '@mapbox/search-js-core';\n\nclass Config {\n  /**\n   * A Mapbox access token used if one is not passed in explicitly to web components\n   */\n  accessToken: string;\n  /**\n   * If true, Autofill address or marker location corrections will be submitted to the Mapbox Contribute API to help improve our data accuracy. Defaults to true.\n   */\n  feedbackEnabled = true;\n\n  readonly autofillSessionToken = new SessionToken(); // Shared session token used among Autofill-related web components\n  autofillSessionEnabled = false; // True when Autofill has been initialized within the current page view\n}\n\n/**\n * Global configuration singleton object storing settings shared across Search JS Web components.\n *\n * @property {string} accessToken - A [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) used if one is not passed in explicitly to web components.\n * @property {boolean} feedbackEnabled - If true, Autofill address or marker location corrections will be submitted to the Mapbox Contribute API to help improve our data accuracy. Defaults to true.\n * @example\n * ```typescript\n * config.accessToken = 'pk.abc.123';\n * ...\n * // Don't need to explicitly pass in token to some components\n * autofill({});\n * confirmAddress(form);\n * ```\n */\nconst config = new Config();\n\n// Prevent autofillSessionToken from being overwritten\nObject.defineProperty(config, 'autofillSessionToken', {\n  configurable: false,\n  writable: false\n});\n\nexport { config };\n","import { isLocalServer, isMapboxDomain } from '.';\nimport { config } from '../config';\n\nimport { version } from '../../package.json';\n\nconst CONTRIBUTE_API_BASE_URL = 'https://contribute-api.mapbox.com/v1';\nconst CONTRIBUTE_API_STAGING_BASE_URL =\n  'https://contribute-api-staging.tilestream.net/v1';\nconst EDIT_SUGGESTION_ENDPOINT = 'edit-suggestion';\n\n/**\n * Object defining changes made to an address location feature.\n * Sent as part of payload to Contribute API.\n */\nexport interface ContributeChanges {\n  house?: string; // House number\n  street?: string; // Street name\n  address?: string; // Full address from Autofill SDK\n  location?: { longitude: number; latitude: number }; // Location of the user-adjusted pin\n}\n\nexport interface FeedbackArgs {\n  originalCoordinate: [number, number];\n  originalAddress: string;\n  changes: ContributeChanges;\n}\n\n/**\n * Sends feedback to the Mapbox Contribute API given an original Autofill API feature and a set of user-defined changes to the address or location.\n * @param accessToken - Mapbox access token\n * @param {FeedbackArgs} feedbackArgs - Data detailing the original address and location and any changes requested\n * @param {[number, number]} feedbackArgs.originalCoordinate - Original coordinate from the Autofill API\n * @param {string} feedbackArgs.originalAddress - Original full_address or place_name from the Autofill API\n * @param {ContributeChanges} feedbackArgs.changes - Address fields or location changed by a user\n */\nexport function sendFeedback(\n  accessToken: string,\n  feedbackArgs: FeedbackArgs\n): void {\n  // Skip sending feedback if disabled in global config\n  if (!config.feedbackEnabled) return;\n\n  // Direct feedback sent during development or from Mapbox site to staging server\n  const hostname = window.location.hostname;\n  const BASE_URL =\n    isLocalServer(hostname) || isMapboxDomain(hostname)\n      ? CONTRIBUTE_API_STAGING_BASE_URL\n      : CONTRIBUTE_API_BASE_URL;\n  const url = `${BASE_URL}/${EDIT_SUGGESTION_ENDPOINT}/address?access_token=${accessToken}`;\n\n  const { originalCoordinate, originalAddress, changes } = feedbackArgs;\n\n  const payload = {\n    action: 'update',\n    reason: 'incorrect_address',\n    location: {\n      // original location of the address (suggested by SDK/API)\n      longitude: originalCoordinate[0],\n      latitude: originalCoordinate[1]\n    },\n    userEmail: 'no-reply-autofill@mapbox.com',\n    changes,\n    placeName: originalAddress // Full (original) address from Autofill SDK\n  };\n\n  fetch(url, {\n    method: 'POST',\n    headers: new Headers({\n      'User-Agent': `mapbox-search-js.${version}.${navigator.userAgent}`,\n      'Content-Type': 'application/json'\n    }),\n    body: JSON.stringify(payload)\n  });\n}\n","import { AutofillFeatureSuggestion } from '@mapbox/search-js-core';\n\nimport { MapboxAddressMinimap } from './MapboxAddressMinimap';\nimport { HTMLScopedElement } from './HTMLScopedElement';\nimport {\n  AddressConfirmationEventTypes,\n  ConfirmationMinimapOptions\n} from './MapboxAddressConfirmation';\n\nimport { randomValidID } from '../utils';\nimport { bindElements, createElementFromString } from '../utils/dom';\nimport { ariaButtonKeyDown } from '../utils/aria';\nimport { AutofillValueMap, getAutofillSearchText } from '../utils/autofill';\nimport {\n  AddressConfirmShowResult,\n  createAddressElement\n} from '../utils/confirmation';\nimport { sendFeedback } from '../utils/contribute';\n\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\nimport { getIcon, getThemeCSS, Theme } from '../theme';\n\nimport style from '../style.css';\n\nconst TEMPLATE = createElementFromString<HTMLTemplateElement>(`\n<template>\n  <div class=\"MapboxAddressConfirmationFeature\">\n    <div class=\"Modal\" aria-modal=\"true\" role=\"dialog\">\n      <div class=\"ModalHeader\">\n        <svg viewBox=\"0 0 18 18\" class=\"Icon IconQuestion\"></svg>\n        <div class=\"ModalHeaderTitle\">Did you mean?</div>\n        <svg\n          viewBox=\"0 0 18 18\"\n          class=\"Icon IconClose\"\n          tabindex=\"0\"\n          role=\"button\"\n          title=\"Close\"\n          aria-label=\"Close\"\n          aria-expanded=\"true\"\n        ></svg>\n      </div>\n\n      <div class=\"ModalAddress ModalAddressApprove\"></div>\n            \n      <div class=\"ModalMap\">\n        <mapbox-address-minimap class=\"Minimap\"></mapbox-address-minimap>\n      </div>\n\n      <div\n        class=\"Button ButtonPrimary ButtonApprove\"\n        tabindex=\"0\"\n        role=\"button\"\n        aria-label=\"Yes\"\n      >\n        Yes\n      </div>\n      \n      <div\n        class=\"Button ButtonSecondary ButtonReject\"\n        tabindex=\"0\"\n        role=\"button\"\n        aria-label=\"No, use the address I provided\"\n      >\n        No, use the address I provided\n      </div>\n\n      <div class=\"ModalFooter\">\n          Your confirmation helps ensure your order is delivered correctly.\n      </div>\n    </div>\n  </div>\n</template>\n`);\n\ntype Binding = {\n  MapboxAddressConfirmationFeature: HTMLDivElement;\n  Modal: HTMLDivElement;\n  ModalHeaderTitle: HTMLDivElement;\n  ModalMap: HTMLDivElement;\n  Minimap: MapboxAddressMinimap;\n\n  IconQuestion: SVGSVGElement;\n  IconClose: SVGSVGElement;\n\n  ButtonApprove: HTMLDivElement;\n  ButtonReject: HTMLDivElement;\n\n  ModalAddressApprove: HTMLDivElement;\n};\n\n/**\n * {@link MapboxAddressConfirmationNoFeature} is a custom element that\n * will display a notification showing the closest suggested address to what a user has provided in the form.\n * Optionally, it can display a {@link MapboxAddressMinimap} for the suggesested address feature.\n *\n * This element is hosted by {@link MapboxAddressConfirmation} and should not be exposed to the user.\n */\nexport class MapboxAddressConfirmationFeature extends HTMLScopedElement<AddressConfirmationEventTypes> {\n  #binding: Binding;\n\n  get template(): HTMLTemplateElement {\n    return TEMPLATE;\n  }\n\n  get templateStyle(): string {\n    return style;\n  }\n\n  get templateUserStyle(): string {\n    return getThemeCSS('.MapboxAddressConfirmationFeature', this.theme);\n  }\n\n  #themeInternal: Theme = {};\n\n  get theme(): Theme {\n    return this.#themeInternal;\n  }\n\n  set theme(theme: Theme) {\n    this.#themeInternal = theme;\n\n    if (!this.#binding || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(\n      getThemeCSS('.MapboxAddressConfirmationFeature', theme)\n    );\n\n    const { IconQuestion, IconClose } = this.#binding;\n\n    IconQuestion.innerHTML = getIcon('question', theme);\n    IconClose.innerHTML = getIcon('close', theme);\n  }\n\n  minimap: boolean | ConfirmationMinimapOptions = false;\n  accessToken: string;\n\n  #feature: AutofillFeatureSuggestion;\n  #formValues: AutofillValueMap;\n\n  /**\n   * Update modal content with a given address suggestion\n   * @param feature - Suggested feature\n   * @param autofillValues - User-provided input values from address fields; used to backfill address-line2, address-line3\n   */\n  update = (\n    feature: AutofillFeatureSuggestion,\n    autofillValues: AutofillValueMap\n  ): void => {\n    this.#feature = feature;\n    this.#formValues = autofillValues;\n    const { ModalMap, Minimap, ModalAddressApprove } = this.#binding;\n    // Update minimap if enabled\n    if (this.minimap) {\n      ModalMap.removeAttribute('aria-hidden');\n      Minimap.accessToken = this.accessToken;\n      if (typeof this.minimap === 'object') {\n        const { defaultMapStyle, theme, mapStyleMode, satelliteToggle } =\n          this.minimap;\n        defaultMapStyle &&\n          (Minimap.defaultMapStyle = this.minimap.defaultMapStyle);\n        theme && (Minimap.theme = this.minimap.theme);\n        mapStyleMode && (Minimap.mapStyleMode = mapStyleMode);\n        satelliteToggle !== undefined &&\n          (Minimap.satelliteToggle = satelliteToggle);\n      }\n      Minimap.feature = feature;\n    } else {\n      ModalMap.setAttribute('aria-hidden', 'true');\n    }\n\n    const approveAddress =\n      feature.properties.place_name ||\n      feature.properties.full_address ||\n      feature.properties.address;\n\n    // Set the text of the approve address.\n    ModalAddressApprove.innerHTML = '';\n    ModalAddressApprove.appendChild(\n      createAddressElement(autofillValues, approveAddress)\n    );\n  };\n\n  #handleClose = (): void => {\n    this.dispatchEvent(\n      new MapboxHTMLEvent<AddressConfirmShowResult['type']>('result', 'cancel')\n    );\n  };\n\n  approve = (): void => {\n    this.dispatchEvent(\n      new MapboxHTMLEvent<AddressConfirmShowResult['type']>('result', 'change')\n    );\n  };\n\n  reject = (): void => {\n    this.dispatchEvent(\n      new MapboxHTMLEvent<AddressConfirmShowResult['type']>(\n        'result',\n        'nochange'\n      )\n    );\n    // Send feedback to Contribute API with the address from the user's preferred form values\n    sendFeedback(this.accessToken, {\n      originalCoordinate: this.#feature.geometry.coordinates as [\n        number,\n        number\n      ],\n      originalAddress: this.#feature.properties.full_address,\n      changes: {\n        address: getAutofillSearchText(this.#formValues)\n      }\n    });\n  };\n\n  // IDs to connect for ARIA.\n  #modalID = randomValidID();\n  #modalHeaderTitleID = randomValidID();\n  #modalAddressApproveID = randomValidID();\n\n  connectedCallback(): void {\n    super.connectedCallback();\n\n    this.#binding = bindElements<Binding>(this, {\n      MapboxAddressConfirmationFeature: '.MapboxAddressConfirmationFeature',\n      Modal: '.Modal',\n      ModalHeaderTitle: '.ModalHeaderTitle',\n      ModalMap: '.ModalMap',\n      Minimap: '.Minimap',\n\n      IconQuestion: '.IconQuestion',\n      IconClose: '.IconClose',\n\n      ButtonApprove: '.ButtonApprove',\n      ButtonReject: '.ButtonReject',\n\n      ModalAddressApprove: '.ModalAddressApprove'\n    });\n\n    const {\n      Modal,\n      ModalHeaderTitle,\n      IconClose,\n      ButtonApprove,\n      ButtonReject,\n      ModalAddressApprove\n    } = this.#binding;\n\n    // Setup IDREFs for WAI-ARIA.\n    Modal.setAttribute('aria-labelledby', this.#modalHeaderTitleID);\n    Modal.setAttribute('aria-describedby', this.#modalAddressApproveID);\n    IconClose.setAttribute('aria-controls', this.#modalID);\n\n    Modal.id = this.#modalID;\n    ModalHeaderTitle.id = this.#modalHeaderTitleID;\n    ModalAddressApprove.id = this.#modalAddressApproveID;\n\n    // Setup WAI-ARIA button keyboard events.\n    const buttons = Array.from(this.querySelectorAll('[role=\"button\"]'));\n    for (const button of buttons) {\n      button.addEventListener('keydown', ariaButtonKeyDown);\n    }\n\n    // Setup event listeners.\n    IconClose.addEventListener('click', this.#handleClose);\n    ButtonApprove.addEventListener('click', this.approve);\n    ButtonReject.addEventListener('click', this.reject);\n\n    const theme = this.theme;\n    if (theme) {\n      const { IconQuestion, IconClose } = this.#binding;\n\n      IconQuestion.innerHTML = getIcon('question', theme);\n      IconClose.innerHTML = getIcon('close', theme);\n    }\n  }\n\n  disconnectedCallback(): void {\n    const { IconClose, ButtonApprove } = this.#binding;\n\n    // Make sure to unbind event listeners.\n    IconClose.removeEventListener('click', this.#handleClose);\n    ButtonApprove.removeEventListener('click', this.approve);\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxAddressConfirmationFeature: typeof MapboxAddressConfirmationFeature;\n  }\n}\n\nwindow.MapboxAddressConfirmationFeature = MapboxAddressConfirmationFeature;\n\nif (!window.customElements.get('mapbox-address-confirmation-feature')) {\n  customElements.define(\n    'mapbox-address-confirmation-feature',\n    MapboxAddressConfirmationFeature\n  );\n}\n","import { HTMLScopedElement } from './HTMLScopedElement';\nimport { AddressConfirmationEventTypes } from './MapboxAddressConfirmation';\n\nimport { randomValidID } from '../utils';\nimport { bindElements, createElementFromString } from '../utils/dom';\nimport { ariaButtonKeyDown } from '../utils/aria';\nimport { AutofillValueMap } from '../utils/autofill';\nimport {\n  AddressConfirmShowResult,\n  createAddressElement\n} from '../utils/confirmation';\n\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\nimport { getIcon, getThemeCSS, Theme } from '../theme';\n\nimport style from '../style.css';\n\nconst TEMPLATE = createElementFromString<HTMLTemplateElement>(`\n<template>\n  <div class=\"MapboxAddressConfirmationNoFeature\">\n    <div class=\"Modal\" aria-modal=\"true\" role=\"dialog\">\n      <div class=\"ModalHeader\">\n        <svg viewBox=\"0 0 18 18\" class=\"Icon IconQuestion\"></svg>\n        <div class=\"ModalHeaderTitle\">Confirm address</div>\n        <svg\n          viewBox=\"0 0 18 18\"\n          class=\"Icon IconClose\"\n          tabindex=\"0\"\n          role=\"button\"\n          title=\"Close\"\n          aria-label=\"Close\"\n          aria-expanded=\"true\"\n        ></svg>\n      </div>\n      <div class=\"ModalDescription\">\n        We couldn't verify this address. Please check that your information is correct before continuing.\n      </div>\n      <br />\n      <div class=\"ModalSubheader\">\n        You entered\n      </div>\n      <div class=\"ModalAddress\"></div>\n      <div\n        class=\"Button ButtonPrimary\"\n        tabindex=\"0\"\n        role=\"button\"\n        aria-label=\"Use the address I provided\"\n      >\n        Use the address I provided\n      </div>\n    </div>\n  </div>\n</template>\n`);\n\ntype Binding = {\n  Modal: HTMLDivElement;\n  ModalHeaderTitle: HTMLDivElement;\n\n  IconQuestion: SVGSVGElement;\n  IconClose: SVGSVGElement;\n\n  ButtonReject: HTMLDivElement;\n\n  ModalAddress: HTMLDivElement;\n};\n\n/**\n * {@link MapboxAddressConfirmationNoFeature} is a custom element that\n * will display a notification when an address entered into an HTML form\n * does not return any features when queried against the Autofill API.\n *\n * This element is hosted by {@link MapboxAddressConfirmation} and should not be exposed to the user.\n */\nexport class MapboxAddressConfirmationNoFeature extends HTMLScopedElement<AddressConfirmationEventTypes> {\n  #binding: Binding;\n\n  get template(): HTMLTemplateElement {\n    return TEMPLATE;\n  }\n\n  get templateStyle(): string {\n    return style;\n  }\n\n  get templateUserStyle(): string {\n    return getThemeCSS('.MapboxAddressConfirmationNoFeature', this.theme);\n  }\n\n  #themeInternal: Theme = {};\n\n  get theme(): Theme {\n    return this.#themeInternal;\n  }\n\n  set theme(theme: Theme) {\n    this.#themeInternal = theme;\n\n    if (!this.#binding || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(\n      getThemeCSS('.MapboxAddressConfirmationNoFeature', theme)\n    );\n\n    const { IconQuestion, IconClose } = this.#binding;\n\n    IconQuestion.innerHTML = getIcon('question', theme);\n    IconClose.innerHTML = getIcon('close', theme);\n  }\n\n  /**\n   * Update modal content with user-provided address\n   * @param autofillValues - User-provided input values from address fields\n   */\n  update = (autofillValues: AutofillValueMap): void => {\n    // Set the text of the approve address.\n    const { ModalAddress } = this.#binding;\n    ModalAddress.innerHTML = '';\n    ModalAddress.appendChild(createAddressElement(autofillValues));\n  };\n\n  #handleClose = (): void => {\n    this.dispatchEvent(\n      new MapboxHTMLEvent<AddressConfirmShowResult['type']>('result', 'cancel')\n    );\n  };\n\n  reject = (): void => {\n    this.dispatchEvent(\n      new MapboxHTMLEvent<AddressConfirmShowResult['type']>(\n        'result',\n        'nochange'\n      )\n    );\n  };\n\n  // IDs to connect for ARIA.\n  #modalID = randomValidID();\n  #modalHeaderTitleID = randomValidID();\n  #modalAddressID = randomValidID();\n\n  connectedCallback(): void {\n    super.connectedCallback();\n\n    this.#binding = bindElements<Binding>(this, {\n      Modal: '.Modal',\n      ModalHeaderTitle: '.ModalHeaderTitle',\n\n      IconQuestion: '.IconQuestion',\n      IconClose: '.IconClose',\n\n      ModalAddress: '.ModalAddress',\n\n      ButtonReject: '.Button'\n    });\n\n    const { Modal, ModalHeaderTitle, IconClose, ModalAddress, ButtonReject } =\n      this.#binding;\n\n    // Setup IDREFs for WAI-ARIA.\n    Modal.setAttribute('aria-labelledby', this.#modalHeaderTitleID);\n    Modal.setAttribute('aria-describedby', this.#modalAddressID);\n    IconClose.setAttribute('aria-controls', this.#modalID);\n\n    Modal.id = this.#modalID;\n    ModalHeaderTitle.id = this.#modalHeaderTitleID;\n    ModalAddress.id = this.#modalAddressID;\n\n    // Setup WAI-ARIA button keyboard events.\n    const buttons = Array.from(this.querySelectorAll('[role=\"button\"]'));\n    for (const button of buttons) {\n      button.addEventListener('keydown', ariaButtonKeyDown);\n    }\n\n    // Setup event listeners.\n    IconClose.addEventListener('click', this.#handleClose);\n    ButtonReject.addEventListener('click', this.reject);\n\n    const theme = this.theme;\n    if (theme) {\n      const { IconQuestion, IconClose } = this.#binding;\n\n      IconQuestion.innerHTML = getIcon('question', theme);\n      IconClose.innerHTML = getIcon('close', theme);\n    }\n  }\n\n  disconnectedCallback(): void {\n    const { IconClose, ButtonReject } = this.#binding;\n\n    // Make sure to unbind event listeners.\n    IconClose.removeEventListener('click', this.#handleClose);\n    ButtonReject.removeEventListener('click', this.reject);\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxAddressConfirmationNoFeature: typeof MapboxAddressConfirmationNoFeature;\n  }\n}\n\nwindow.MapboxAddressConfirmationNoFeature = MapboxAddressConfirmationNoFeature;\n\nif (!window.customElements.get('mapbox-address-confirmation-no-feature')) {\n  customElements.define(\n    'mapbox-address-confirmation-no-feature',\n    MapboxAddressConfirmationNoFeature\n  );\n}\n","import {\n  AutofillFeatureSuggestion,\n  AutofillMatchCodeConfidence,\n  AutofillOptions,\n  MapboxAutofill\n} from '@mapbox/search-js-core';\nimport noScroll from 'no-scroll';\nimport { createFocusTrap, FocusTrap } from 'focus-trap';\n\nimport { HTMLScopedElement } from './HTMLScopedElement';\nimport { MapboxAddressConfirmationFeature } from './MapboxAddressConfirmationFeature';\nimport { MapboxAddressConfirmationNoFeature } from './MapboxAddressConfirmationNoFeature';\n\nimport { bindElements, createElementFromString } from '../utils/dom';\nimport { AutofillValueMap, getAutofillSearchText } from '../utils/autofill';\nimport { AddressConfirmShowResult } from '../utils/confirmation';\n\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\nimport { getThemeCSS, Theme } from '../theme';\n\nimport style from '../style.css';\nimport { config } from '../config';\nimport { MapboxAddressMinimap } from './MapboxAddressMinimap';\n\n/**\n * Styling and theming options for a {@link MapboxAddressMinimap} embedded inside a confirmation dialog.\n *\n * @typedef ConfirmationMinimapOptions\n * @example\n * ```typescript\n * const result = await confirmAddress(form, {\n *   accessToken: 'abc-123',\n *   minimap: {\n *     defaultMapStyle: ['mapbox', 'outdoors-v11'],\n *     theme: { icons: { marker: MARKER_SVG } },\n *     mapStyleMode: 'default',\n *     satelliteToggle: true\n *   }\n * });\n * ```\n */\nexport type ConfirmationMinimapOptions = Partial<\n  Pick<\n    MapboxAddressMinimap,\n    'defaultMapStyle' | 'theme' | 'mapStyleMode' | 'satelliteToggle'\n  >\n>;\n\n/**\n * @typedef AddressConfirmOptions\n */\nexport interface AddressConfirmOptions {\n  /**\n   * Mapbox access token used for the Autofill and Static Image APIs\n   */\n  accessToken?: string;\n  /**\n   * CSS variables and icons\n   */\n  theme?: Theme;\n  /**\n   * Autofill API configuration options\n   * {@link AutofillOptions}\n   */\n  options?: Partial<AutofillOptions>;\n  /**\n   * If true, a static minimap showing the suggested address location will be displayed in the modal dialog.\n   * If an object, a minimap will be displayed with the specified styling and theming configuration.\n   * Defaults to false.\n   */\n  minimap?: boolean | ConfirmationMinimapOptions;\n  /**\n   * An array of section names used within form element `autocomplete` attributes to identify and group one address section from another, e.g. \"section-shipping\" or \"section-billing\".\n   * These are often used when a single <form> contains multiple logical sections.\n   * If left undefined, all discoverable sections will be processed.\n   */\n  sections?: string[];\n  /**\n   * A callback used to pre-confirm an address and skip the UI modal.\n   * The feature argument contains all address components, as well as an {@link AutofillMatchCode} object,\n   * which are used to express the confidence of an address match.\n   * The callback must return a boolean, with `true` indicating that the address has been pre-confirmed,\n   * and the UI modal will be skipped and will not be presented to the end-user.\n   */\n  skipConfirmModal?: (feature: AutofillFeatureSuggestion) => boolean;\n}\n\nconst TEMPLATE = createElementFromString<HTMLTemplateElement>(`\n<template>\n  <div class=\"MapboxAddressConfirmation\" aria-hidden=\"true\">\n    <mapbox-address-confirmation-feature class=\"ContentFeature\"></mapbox-address-confirmation-feature>\n    <mapbox-address-confirmation-no-feature class=\"ContentNoFeature\"></mapbox-address-confirmation-no-feature>\n  </div>\n</template>\n`);\n\ntype Binding = {\n  MapboxAddressConfirmation: HTMLDivElement;\n  ContentFeature: MapboxAddressConfirmationFeature;\n  ContentNoFeature: MapboxAddressConfirmationNoFeature;\n};\n\nexport type AddressConfirmationEventTypes = {\n  result: MapboxHTMLEvent<AddressConfirmShowResult['type']>;\n};\n\n/**\n * {@link MapboxAddressConfirmation} is a custom element that\n * will display the \"Did you mean...\" message when the user\n * enters an address that doesn't match any of the results\n * returned by the Mapbox Autofill API.\n *\n * This element is used by {@link MapboxAddressAutofill} and the {@link autofill}\n * method, and should not be exposed to the user.\n */\nexport class MapboxAddressConfirmation extends HTMLScopedElement<AddressConfirmationEventTypes> {\n  #show = false;\n\n  #binding: Binding;\n  #focusTrap: FocusTrap | null;\n\n  get template(): HTMLTemplateElement {\n    return TEMPLATE;\n  }\n\n  get templateStyle(): string {\n    return style;\n  }\n\n  get templateUserStyle(): string {\n    return getThemeCSS('.MapboxAddressConfirmation', this.theme);\n  }\n\n  #themeInternal: Theme = {};\n\n  get theme(): Theme {\n    return this.#themeInternal;\n  }\n\n  set theme(theme: Theme) {\n    this.#themeInternal = theme;\n\n    if (!this.#binding || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(\n      getThemeCSS('.MapboxAddressConfirmation', theme)\n    );\n\n    // Pass theme down into content elements\n    const { ContentFeature, ContentNoFeature } = this.#binding;\n    ContentFeature.theme = theme;\n    ContentNoFeature.theme = theme;\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n\n    this.#binding = bindElements<Binding>(this, {\n      MapboxAddressConfirmation: '.MapboxAddressConfirmation',\n      ContentFeature: '.ContentFeature',\n      ContentNoFeature: '.ContentNoFeature'\n    });\n\n    const { MapboxAddressConfirmation } = this.#binding;\n    MapboxAddressConfirmation.setAttribute('aria-hidden', 'true');\n\n    const theme = this.theme;\n    if (theme) {\n      const { ContentFeature, ContentNoFeature } = this.#binding;\n      ContentFeature.theme = theme;\n      ContentNoFeature.theme = theme;\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.#focusTrap = null;\n  }\n\n  hide(): void {\n    this.#show = false;\n\n    if (!this.#binding) {\n      return;\n    }\n\n    const { MapboxAddressConfirmation } = this.#binding;\n    // Update accessibility flags.\n    MapboxAddressConfirmation.setAttribute('aria-hidden', 'true');\n\n    this.#focusTrap?.deactivate();\n    noScroll.off();\n  }\n\n  async show(\n    autofillValues: AutofillValueMap,\n    optionsArg: AddressConfirmOptions,\n    feature?: AutofillFeatureSuggestion\n  ): Promise<AddressConfirmShowResult> {\n    if (!this.#binding) {\n      return { type: 'cancel' };\n    }\n\n    const { MapboxAddressConfirmation, ContentFeature, ContentNoFeature } =\n      this.#binding;\n\n    const { accessToken, minimap = false, theme } = optionsArg;\n\n    // Update theme in this and child custom elements\n    this.theme = theme;\n\n    // Set content and visibility depending on feature definition\n    if (feature) {\n      ContentFeature.removeAttribute('aria-hidden');\n      ContentNoFeature.setAttribute('aria-hidden', 'true');\n\n      ContentFeature.minimap = minimap;\n      ContentFeature.accessToken = accessToken;\n\n      ContentFeature.update(feature, autofillValues);\n    } else {\n      ContentFeature.setAttribute('aria-hidden', 'true');\n      ContentNoFeature.removeAttribute('aria-hidden');\n\n      ContentNoFeature.update(autofillValues);\n    }\n\n    this.#show = true;\n\n    // Update accessibility flags.\n    MapboxAddressConfirmation.removeAttribute('aria-hidden');\n\n    noScroll.on();\n\n    const activeContentElement = feature ? ContentFeature : ContentNoFeature;\n\n    this.#focusTrap = createFocusTrap(MapboxAddressConfirmation, {\n      fallbackFocus: activeContentElement,\n      escapeDeactivates: (): boolean => {\n        this.hide();\n        return true;\n      }\n    });\n\n    this.#focusTrap?.activate();\n\n    // Wait for next result event, hide and then return.\n    return new Promise((resolve) => {\n      const eventHost = activeContentElement;\n      const fn = (\n        e: MapboxHTMLEvent<AddressConfirmShowResult['type']>\n      ): void => {\n        eventHost.removeEventListener('result', fn);\n\n        const result = e.detail;\n        this.hide();\n\n        if (result === 'change') {\n          resolve({\n            type: 'change',\n            feature\n          });\n        } else {\n          resolve({\n            type: result\n          });\n        }\n      };\n\n      eventHost.addEventListener('result', fn);\n    });\n  }\n\n  /**\n   * Attempts to show an address confirmation dialog by comparing form input values with the closest match via the Autofill API.\n   * @param autofillValues - Map of form `<input>` values for each address component\n   * @param optionsArg - Options object defining API options, UI controls, and callback defining when to bypass the dialog\n   * @returns A promise indicating the action taken from the confirmation dialog\n   */\n  async tryShow(\n    autofillValues: AutofillValueMap,\n    optionsArg: AddressConfirmOptions\n  ): Promise<AddressConfirmShowResult> {\n    if (!this.#binding) {\n      return { type: 'cancel' };\n    }\n\n    const { accessToken, options = {} } = optionsArg;\n\n    const autofill = new MapboxAutofill({\n      accessToken: accessToken,\n      ...options\n    });\n\n    // Get the form's new autofill values to compare against.\n    const searchText = getAutofillSearchText(autofillValues);\n    const featureCollection = await autofill.retrieve(searchText, {\n      sessionToken: config.autofillSessionToken\n    });\n\n    const feature = featureCollection.features[0];\n\n    // Pre-validate feature from optional callback, or default to checking for exact match on match_code.\n    // If pre-validated, return \"nochange\" early\n    if (feature) {\n      const defaultValidation = (feature: AutofillFeatureSuggestion) =>\n        feature.properties.match_code.confidence ===\n        AutofillMatchCodeConfidence.exact;\n      const { skipConfirmModal = defaultValidation } = optionsArg;\n      if (skipConfirmModal(feature)) {\n        return { type: 'nochange' };\n      }\n    }\n\n    return await this.show(autofillValues, optionsArg, feature);\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxAddressConfirmation: typeof MapboxAddressConfirmation;\n  }\n}\n\nwindow.MapboxAddressConfirmation = MapboxAddressConfirmation;\n\nif (!window.customElements.get('mapbox-address-confirmation')) {\n  customElements.define(\n    'mapbox-address-confirmation',\n    MapboxAddressConfirmation\n  );\n}\n","import {\n  AutofillOptions,\n  AutofillRetrieveResponse,\n  AutofillSuggestion,\n  AutofillSuggestionResponse,\n  MapboxAutofill,\n  SearchSession\n} from '@mapbox/search-js-core';\n\nimport { MapboxSearchListbox } from './MapboxSearchListbox';\nimport { HTMLScopedElement } from './HTMLScopedElement';\n\nimport { tryParseJSON } from '../utils';\nimport { fillFormWithFeature } from '../utils/autofill';\n\nimport { Theme } from '../theme';\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\nimport { config } from '../config';\n\nexport type MapboxSearchListboxAutofillType = MapboxSearchListbox<\n  AutofillOptions,\n  AutofillSuggestion,\n  AutofillSuggestionResponse,\n  AutofillRetrieveResponse\n>;\n\ntype AutofillEventTypes = {\n  /**\n   * Fired when the user is typing in the input and provides a list of suggestions.\n   *\n   * The underlying response from {@link MapboxAutofill} is passed as the event's detail.\n   *\n   * @event suggest\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @type {AutofillSuggestionResponse}\n   * @example\n   * ```typescript\n   * autofill.addEventListener('suggest', (event) => {\n   *   const suggestions = event.detail.suggestions;\n   *   // ...\n   * });\n   * ```\n   */\n  suggest: MapboxHTMLEvent<AutofillSuggestionResponse>;\n  /**\n   * Fired when {@link MapboxAutofill} has errored providing a list of suggestions.\n   *\n   * The underlying error is passed as the event's detail.\n   *\n   * @event suggesterror\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @type {Error}\n   * @example\n   * ```typescript\n   * autofill.addEventListener('suggesterror', (event) => {\n   *   const error = event.detail;\n   *   // ...\n   * });\n   * ```\n   */\n  suggesterror: MapboxHTMLEvent<Error>;\n  /**\n   * Fired when the user has selected a suggestion, before the form is autofilled.\n   *\n   * The underlying response from {@link MapboxAutofill} is passed as the event's detail.\n   *\n   * @event retrieve\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @type {AutofillRetrieveResponse}\n   * @example\n   * ```typescript\n   * autofill.addEventListener('retrieve', (event) => {\n   *   const featureCollection = event.detail;\n   *   // ...\n   * });\n   * ```\n   */\n  retrieve: MapboxHTMLEvent<AutofillRetrieveResponse>;\n};\n\n/**\n * `MapboxAddressAutofill`, also available as the element `<mapbox-address-autofill>`,\n * is an element that wraps an address [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text) element with\n * intelligent, location-aware autocomplete functionality.\n *\n * To use this element, you must have a [Mapbox access token](https://www.mapbox.com/help/create-api-access-token/).\n *\n * This element must be a descendant of a [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form) element, and the form\n * must have inputs with proper HTML `autocomplete` attributes. If your application works with browser autofill, you may already have\n * this functionality.\n * - [The HTML autocomplete attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n * - [Autofill](https://web.dev/learn/forms/autofill/)\n *\n * @class MapboxAddressAutofill\n * @example\n * <form>\n *   <mapbox-address-autofill access-token=\"<your access token here>\">\n *     <input type=\"text\" name=\"address\" autocomplete=\"shipping street-address\" />\n *   </mapbox-address-autofill>\n * </form>\n */\nexport class MapboxAddressAutofill extends HTMLScopedElement<AutofillEventTypes> {\n  /**\n   * This is read by the Web Components API to affect the\n   * {@link MapboxAddressAutofill.attributeChangedCallback} below.\n   *\n   * All of these are passthroughs to the underlying {@link MapboxSearchListbox}.\n   *\n   * @ignore\n   */\n  static observedAttributes: string[] = [\n    // Access token.\n    'access-token',\n    // Theming, CSS.\n    'theme',\n    'css-text',\n    // Underlying Autofill API options.\n    'language',\n    'country',\n    'bbox',\n    'limit',\n    'proximity'\n  ];\n\n  #autofill = new MapboxAutofill();\n  #session = new SearchSession(this.#autofill);\n\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   *\n   * @name accessToken\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @example\n   * ```typescript\n   * autofill.accessToken = 'pk.my-mapbox-access-token';\n   * ```\n   */\n  get accessToken(): string {\n    return this.#autofill.accessToken;\n  }\n  set accessToken(newToken: string) {\n    this.#autofill.accessToken = newToken;\n  }\n\n  #input: HTMLInputElement;\n  #listbox: MapboxSearchListboxAutofillType = new MapboxSearchListbox();\n\n  /**\n   * Options to pass to the underlying {@link MapboxAutofill} interface.\n   *\n   * @name options\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @type {AutofillOptions}\n   * @example\n   * ```typescript\n   * autofill.options = {\n   *  language: 'en',\n   *  country: 'US',\n   * };\n   * ```\n   */\n  get options(): Partial<AutofillOptions> {\n    return this.#listbox.options;\n  }\n  set options(newOptions: Partial<AutofillOptions>) {\n    this.#listbox.options = newOptions;\n  }\n\n  /**\n   * The {@link Theme} to use for styling the autofill component.\n   *\n   * @name theme\n   * @instance\n   * @memberof MapboxAddressAutofill\n   * @type {Theme}\n   * @example\n   * ```typescript\n   * autofill.theme = {\n   *   variables: {\n   *     colorPrimary: 'myBrandRed'\n   *   }\n   * };\n   * ```\n   */\n  get theme(): Theme {\n    return this.#listbox.theme;\n  }\n  set theme(theme: Theme) {\n    this.#listbox.theme = theme;\n  }\n\n  #handleSuggest = (e: MapboxHTMLEvent<AutofillSuggestionResponse>): void => {\n    // Manually bubble up the event.\n    this.dispatchEvent(e.clone());\n  };\n\n  #handleSuggestError = (e: MapboxHTMLEvent<Error>): void => {\n    // Manually bubble up the event.\n    this.dispatchEvent(e.clone());\n  };\n\n  #handleRetrieve = (e: MapboxHTMLEvent<AutofillRetrieveResponse>): void => {\n    // Manually bubble up the event.\n    this.dispatchEvent(e.clone());\n\n    if (!this.#input) {\n      return;\n    }\n\n    const featureCollection = e.detail;\n    if (\n      !featureCollection ||\n      !featureCollection.features ||\n      !featureCollection.features.length\n    ) {\n      return;\n    }\n\n    fillFormWithFeature(featureCollection.features[0], this.#input);\n  };\n\n  // Called when content changes.\n  #handleObserve = (): void => {\n    try {\n      const input: HTMLInputElement = this.querySelector('input') ?? null;\n\n      this.#input = input;\n      this.#listbox.input = input;\n    } catch (e) {\n      this.#input = null;\n      this.#listbox.input = null;\n\n      console.error(e.message || e);\n    }\n  };\n\n  #observer = new MutationObserver(this.#handleObserve);\n\n  connectedCallback(): void {\n    super.connectedCallback();\n\n    config.autofillSessionEnabled = true;\n\n    // Bind the listbox to the session.\n    this.#listbox.session = this.#session;\n    this.#listbox.session.sessionToken = config.autofillSessionToken;\n\n    this.#listbox.addEventListener('suggest', this.#handleSuggest);\n    this.#listbox.addEventListener('suggesterror', this.#handleSuggestError);\n    this.#listbox.addEventListener('retrieve', this.#handleRetrieve);\n\n    document.body.appendChild(this.#listbox);\n\n    // Setup observer handler.\n    this.#observer.observe(this, {\n      subtree: true,\n      childList: true\n    });\n\n    this.#handleObserve();\n  }\n\n  disconnectedCallback(): void {\n    this.#listbox.remove();\n\n    this.#listbox.removeEventListener('suggest', this.#handleSuggest);\n    this.#listbox.removeEventListener('suggesterror', this.#handleSuggestError);\n    this.#listbox.removeEventListener('retrieve', this.#handleRetrieve);\n\n    this.#observer.disconnect();\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (name === 'access-token') {\n      this.#autofill.accessToken = newValue;\n      return;\n    }\n\n    if (name === 'theme') {\n      this.theme = tryParseJSON(newValue);\n      return;\n    }\n\n    // Convert to the proper name for options.\n    // Example: eta-type => eta_type\n    const optionName = name.split('-').join('_');\n\n    if (!newValue) {\n      delete this.#listbox.options[optionName];\n    }\n\n    // Otherwise, assume it's a Search API option.\n    this.#listbox.options[optionName] = newValue;\n  }\n\n  /** @section {Methods} */\n\n  /**\n   * Focuses the wrapped input element.\n   */\n  focus(): void {\n    this.#listbox.focus();\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxAddressAutofill: typeof MapboxAddressAutofill;\n  }\n}\n\nwindow.MapboxAddressAutofill = MapboxAddressAutofill;\n\nif (!window.customElements.get('mapbox-address-autofill')) {\n  customElements.define('mapbox-address-autofill', MapboxAddressAutofill);\n}\n","import {\n  featureToSuggestion,\n  LngLatBounds,\n  MapboxSearch,\n  Options,\n  RetrieveResponse,\n  Suggestion,\n  SuggestionResponse,\n  SearchSession\n} from '@mapbox/search-js-core';\nimport mapboxgl from 'mapbox-gl';\n\nimport bbox from '@turf/bbox';\nimport bboxPolygon from '@turf/bbox-polygon';\n\nimport { MapboxSearchListbox } from './MapboxSearchListbox';\nimport { HTMLScopedElement } from './HTMLScopedElement';\n\nimport { FlatLngLatBounds, tryParseJSON } from '../utils';\nimport { createElementFromString } from '../utils/dom';\nimport { bboxViewport, FLY_TO_SPEED, getMaxZoom } from '../utils/map';\n\nimport { Theme, getThemeCSS } from '../theme';\nimport { MapboxHTMLEvent } from '../MapboxHTMLEvent';\n\nimport style from '../style.css';\n\n/**\n * Proximity is designed for local scale. If the user is looking at the whole world,\n * it doesn't make sense to factor in the arbitrary center of the map.\n */\nconst MAX_ZOOM = 9;\n\nconst TEMPLATE = createElementFromString<HTMLTemplateElement>(`\n<template>\n  <input class=\"Input\" type=\"text\" />\n</template>\n`);\n\nexport type MapboxSearchListboxSearchType = MapboxSearchListbox<\n  Options,\n  Suggestion,\n  SuggestionResponse,\n  RetrieveResponse\n>;\n\ntype SearchEventTypes = {\n  /**\n   * Fired when the user is typing and is provided a list of suggestions.\n   *\n   * The underlying response from {@link MapboxSearch} is passed as the event's detail.\n   *\n   * @event suggest\n   * @instance\n   * @memberof MapboxSearchBox\n   * @type {SuggestionResponse}\n   * @example\n   * ```typescript\n   * search.addEventListener('suggest', (event) => {\n   *   const suggestions = event.detail.suggestions;\n   *   // ...\n   * });\n   * ```\n   */\n  suggest: MapboxHTMLEvent<SuggestionResponse>;\n  /**\n   * Fired when {@link MapboxSearch} has errored providing a list of suggestions.\n   *\n   * The underlying error is passed as the event's detail.\n   *\n   * @event suggesterror\n   * @instance\n   * @memberof MapboxSearchBox\n   * @type {Error}\n   * @example\n   * ```typescript\n   * search.addEventListener('suggesterror', (event) => {\n   *   const error = event.detail;\n   *   // ...\n   * });\n   * ```\n   */\n  suggesterror: MapboxHTMLEvent<Error>;\n  /**\n   * Fired when the user has selected a suggestion.\n   *\n   * The underlying response from {@link MapboxSearch} is passed as the event's detail.\n   *\n   * @event retrieve\n   * @instance\n   * @memberof MapboxSearchBox\n   * @type {RetrieveResponse}\n   * @example\n   * ```typescript\n   * search.addEventListener('retrieve', (event) => {\n   *   const featureCollection = event.detail;\n   *   // ...\n   * });\n   * ```\n   */\n  retrieve: MapboxHTMLEvent<RetrieveResponse>;\n  input: MapboxHTMLEvent<unknown>;\n};\n\n/**\n * `MapboxSearchBox`, also available as the element `<mapbox-search-box>`,\n * is an element that lets you search for places, addresses, and landmarks using\n * the [Mapbox Search API](https://docs.mapbox.com/api/search/search).\n *\n * It can control a [Mapbox GL JS](https://docs.mapbox.com/mapbox-gl-js/guides/) map\n * to zoom to the selected result.\n *\n * Additionally, `MapboxSearchBox` implements the [IControl](https://www.mapbox.com/mapbox-gl-js/api/markers/#icontrol)\n * interface.\n *\n * To use this element, you must have a [Mapbox access token](https://www.mapbox.com/help/create-api-access-token/).\n *\n * @class MapboxSearchBox\n * @example\n * ```typescript\n * const search = new MapboxSearchBox();\n * search.accessToken = '<your access token here>';\n * map.addControl(search);\n * ```\n * @example\n * <mapbox-search-box\n *   access-token=\"<your access token here>\"\n *   proximity=\"0,0\"\n * >\n * </mapbox-search-box>\n */\nexport class MapboxSearchBox\n  extends HTMLScopedElement<SearchEventTypes>\n  implements mapboxgl.IControl\n{\n  /**\n   * This is read by the Web Components API to affect the\n   * {@link MapboxSearchBox#attributeChangedCallback} below.\n   *\n   * All of these are passthroughs to the underlying {@link MapboxSearchListbox}.\n   *\n   * @ignore\n   */\n  static observedAttributes: string[] = [\n    // Access token.\n    'access-token',\n    // Theming.\n    'theme',\n    // Underlying Search API options.\n    'language',\n    'country',\n    'bbox',\n    'limit',\n    'navigation-profile',\n    'origin',\n    'proximity',\n    'eta-type',\n    'types'\n  ];\n\n  #search = new MapboxSearch({});\n  #session = new SearchSession(this.#search);\n\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   *\n   * @name accessToken\n   * @instance\n   * @memberof MapboxSearchBox\n   * @example\n   * ```typescript\n   * search.accessToken = 'pk.my-mapbox-access-token';\n   * ```\n   */\n  get accessToken(): string {\n    return this.#search.accessToken;\n  }\n  set accessToken(newToken: string) {\n    this.#search.accessToken = newToken;\n  }\n\n  /**\n   * The value of the input element.\n   *\n   * @name value\n   * @instance\n   * @memberof MapboxSearchBox\n   * @example\n   * ```typescript\n   * console.log(search.value);\n   * ```\n   */\n  get value(): string {\n    return this.#input.value;\n  }\n  set value(newValue: string) {\n    this.#input.value = newValue;\n  }\n\n  #map: mapboxgl.Map | null = null;\n\n  #input: HTMLInputElement;\n  #listbox: MapboxSearchListboxSearchType = new MapboxSearchListbox();\n\n  protected override get template(): HTMLTemplateElement {\n    return TEMPLATE;\n  }\n\n  protected override get templateStyle(): string {\n    return style;\n  }\n\n  protected override get templateUserStyle(): string {\n    return getThemeCSS('.Input', this.#listbox.theme);\n  }\n\n  /**\n   * Options to pass to the underlying {@link MapboxSearch} interface.\n   *\n   * @name options\n   * @instance\n   * @memberof MapboxSearchBox\n   * @type {Options}\n   * @example\n   * ```typescript\n   * search.options = {\n   *  language: 'en',\n   *  country: 'US',\n   * };\n   * ```\n   */\n  get options(): Partial<Options> {\n    return this.#listbox.options;\n  }\n  set options(newOptions: Partial<Options>) {\n    this.#listbox.options = newOptions;\n  }\n\n  /**\n   * The {@link Theme} to use for styling the suggestion box and search box.\n   *\n   * @name theme\n   * @instance\n   * @memberof MapboxSearchBox\n   * @type {Theme}\n   * @example\n   * ```typescript\n   * search.theme = {\n   *   variables: {\n   *     colorPrimary: 'myBrandRed'\n   *   },\n   *   cssText: \".Input:active { opacity: 0.9; }\"\n   * };\n   * ```\n   */\n  get theme(): Theme {\n    return this.#listbox.theme;\n  }\n  set theme(theme: Theme) {\n    this.#listbox.theme = theme;\n\n    const input = this.#input;\n    if (!input) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(getThemeCSS('.Input', theme));\n    this.#listbox.updatePopover();\n  }\n\n  #handleSuggest = (e: MapboxHTMLEvent<SuggestionResponse>): void => {\n    // Manually bubble up the event.\n    this.dispatchEvent(e.clone());\n  };\n\n  #handleSuggestError = (e: MapboxHTMLEvent<Error>): void => {\n    // Manually bubble up the event.\n    this.dispatchEvent(e.clone());\n  };\n\n  #handleRetrieve = async (\n    e: MapboxHTMLEvent<RetrieveResponse>\n  ): Promise<void> => {\n    // Manually bubble up the event.\n    this.dispatchEvent(e.clone());\n\n    const featureCollection = e.detail;\n    if (!featureCollection || !featureCollection.features.length) {\n      return;\n    }\n\n    // Set value of the input.\n    const suggestion = featureToSuggestion(featureCollection.features[0]);\n    this.#input.value = suggestion.feature_name;\n\n    const map = this.#map;\n    if (!map) {\n      return;\n    }\n\n    const features = featureCollection.features;\n    // Handle single feature.\n    if (features.length === 1) {\n      const feature = features[0];\n      const placeType = feature.properties.place_type?.[0];\n\n      const bounds = feature.bbox;\n      if (bounds) {\n        map.flyTo(\n          bboxViewport(map, LngLatBounds.convert(bounds).toFlatArray())\n        );\n      } else {\n        const center = feature.geometry.coordinates as mapboxgl.LngLatLike;\n        const zoom = getMaxZoom(placeType);\n\n        map.flyTo({\n          center,\n          zoom,\n          speed: FLY_TO_SPEED\n        });\n      }\n\n      return;\n    }\n\n    // Get the bounds of the feature, bbox if available.\n    const geoAccurateFeatures = featureCollection.features.map((feature) => {\n      if (feature.bbox) {\n        return bboxPolygon(LngLatBounds.convert(feature.bbox).toFlatArray());\n      }\n\n      return feature;\n    });\n\n    const bounds = bbox({\n      type: 'FeatureCollection',\n      features: geoAccurateFeatures\n    });\n    map.flyTo(bboxViewport(map, bounds as FlatLngLatBounds));\n  };\n\n  #handleInput = (e: InputEvent): void => {\n    const event = new MapboxHTMLEvent('input');\n    Object.assign(event, {\n      ...e\n    });\n\n    this.dispatchEvent<'input'>(event);\n  };\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n\n    const input = this.querySelector<HTMLInputElement>('.Input');\n    input.addEventListener('input', this.#handleInput);\n\n    this.#input = input;\n\n    // Bind the listbox to the session.\n    this.#listbox.session = this.#session as SearchSession<\n      Options,\n      Suggestion,\n      SuggestionResponse,\n      RetrieveResponse\n    >;\n    this.#listbox.input = input;\n    this.#listbox.addEventListener('suggest', this.#handleSuggest);\n    this.#listbox.addEventListener('suggesterror', this.#handleSuggestError);\n    this.#listbox.addEventListener('retrieve', this.#handleRetrieve);\n\n    document.body.appendChild(this.#listbox);\n  }\n\n  disconnectedCallback(): void {\n    this.#listbox.remove();\n    this.#listbox.input = null;\n\n    this.#listbox.removeEventListener('suggest', this.#handleSuggest);\n    this.#listbox.removeEventListener('suggesterror', this.#handleSuggestError);\n    this.#listbox.removeEventListener('retrieve', this.#handleRetrieve);\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (name === 'access-token') {\n      this.#search.accessToken = newValue;\n      return;\n    }\n\n    if (name === 'theme') {\n      this.theme = tryParseJSON(newValue);\n      return;\n    }\n\n    // Convert to the proper name for options.\n    // Example: eta-type => eta_type\n    const optionName = name.split('-').join('_');\n\n    if (!newValue) {\n      delete this.#listbox.options[optionName];\n    }\n\n    // Otherwise, assume it's a Search API option.\n    this.#listbox.options[optionName] = newValue;\n  }\n\n  /** @section {Methods} */\n\n  /**\n   * Focuses the input element.\n   */\n  focus(): void {\n    this.#listbox.focus();\n  }\n\n  #handleMoveEnd = (): void => {\n    const map = this.#map;\n    const options = { ...this.#listbox.options };\n\n    if (map.getZoom() <= MAX_ZOOM) {\n      delete options.proximity;\n      this.#listbox.options = options;\n\n      return;\n    }\n\n    const center = map.getCenter();\n    this.#listbox.options = {\n      ...options,\n      proximity: center\n    };\n  };\n\n  /** @section {Map binding} */\n\n  /**\n   * Connects the search box to a [Map](https://docs.mapbox.com/mapbox-gl-js/api/#map),\n   * which handles both setting proximity and zoom after a suggestion click.\n   *\n   * @example\n   * ```typescript\n   * const search = new MapboxSearchBox();\n   * search.bindMap(map);\n   * ```\n   */\n  bindMap(map: mapboxgl.Map): void {\n    if (this.#map) {\n      this.#map.off('moveend', this.#handleMoveEnd);\n    }\n\n    if (map) {\n      map.on('moveend', this.#handleMoveEnd);\n    }\n\n    this.#map = map;\n  }\n\n  /**\n   * Unbinds the search box from a [Map](https://docs.mapbox.com/mapbox-gl-js/api/#map).\n   */\n  unbindMap(): void {\n    this.bindMap(null);\n  }\n\n  // IControl interface.\n\n  // eslint-disable-next-line custom-elements/no-method-prefixed-with-on\n  onAdd(map: mapboxgl.Map): HTMLElement {\n    this.bindMap(map);\n    this.remove();\n\n    const container = document.createElement('div');\n    container.className = 'mapboxgl-ctrl';\n    container.style.width = '300px';\n    container.appendChild(this);\n\n    return container;\n  }\n\n  // eslint-disable-next-line custom-elements/no-method-prefixed-with-on\n  onRemove(): void {\n    this.remove();\n    this.unbindMap();\n  }\n\n  getDefaultPosition(): string {\n    return 'top-right';\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxSearchBox: typeof MapboxSearchBox;\n  }\n}\n\nwindow.MapboxSearchBox = MapboxSearchBox;\n\nif (!window.customElements.get('mapbox-search-box')) {\n  customElements.define('mapbox-search-box', MapboxSearchBox);\n}\n","import { LngLat, LngLatLike } from '@mapbox/search-js-core';\n\nimport { HTMLScopedElement } from './HTMLScopedElement';\n\nimport {\n  bindElements,\n  createElementFromString,\n  getElementSize\n} from '../utils/dom';\nimport {\n  Anchor,\n  MapStyleMode,\n  MarkerController,\n  MAX_IMAGE_DIM\n} from '../utils/minimap';\nimport { getStaticBaseUrl } from '../utils/map';\n\nimport {\n  AUTOFILL_SKU_TOKEN_PREFIX,\n  STATIC_BASE_URL_SATELLITE\n} from '../constants';\nimport { getIcon, getImage, getThemeCSS, Theme } from '../theme';\n\nimport style from '../style.css';\nimport logo from '../icons/mapboxgl-ctrl-logo.svg';\nimport { deepEquals } from '../utils';\nimport { sendFeedback } from '../utils/contribute';\n\nimport { config } from '../config';\n\n// TODO: Scale by device pixel ratio?\nconst ZOOM = 16;\n\nconst TEMPLATE = createElementFromString<HTMLTemplateElement>(`\n<template>\n  <div class=\"MapboxAddressMinimap\" aria-hidden=\"true\">\n    <div class=\"MinimapImageContainer\">\n      <img class=\"MinimapImage\" draggable=\"false\"></img>\n      <div class=\"MinimapInnerFrame\">\n        <div class=\"MinimapMarker\"></div>\n        <div class=\"MinimapAttribution\">\n          <div class=\"MinimapAttributionLogo\">\n            <a target=\"_blank\" rel=\"noopener nofollow\" href=\"https://www.mapbox.com/\" aria-label=\"Mapbox logo\">\n              ${logo}\n            </a>\n          </div>\n          <div class=\"MinimapAttributionText\">\n            <a target=\"_blank\" href='https://www.mapbox.com/about/maps/'>© Mapbox</a><a target=\"_blank\" href='http://www.openstreetmap.org/copyright'>© OpenStreetMap</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n`);\n\nconst STYLE_TOGGLE_TEMPLATE = createElementFromString<HTMLTemplateElement>(`\n<template>\n  <button type=\"button\" class=\"MinimapStyleToggle\"></button>\n</template>\n`);\n\nconst FOOTER_TEMPLATE = createElementFromString<HTMLTemplateElement>(`\n<template>\n  <div class=\"MinimapFooter\">Adjust the marker on the map if it doesn't precisely match your location. This helps your delivery reach you faster.</div>\n</template>\n`);\n\nconst EDIT_BUTTONS_TEMPLATE = createElementFromString<HTMLTemplateElement>(`\n<template>\n  <div class=\"MinimapEditButtons\">\n    <div class=\"Button ButtonPrimary MinimapButtonAdjust\">Adjust pin</div>\n    <div class=\"Button ButtonPrimary MinimapButtonSave\" aria-hidden=\"true\">Save</div>\n    <div class=\"Button MinimapButtonCancel\" aria-hidden=\"true\">Cancel</div>\n  </div>\n</template>\n`);\n\ntype Binding = {\n  MapboxAddressMinimap: HTMLElement;\n  ImageContainer: HTMLElement;\n  Image: HTMLImageElement;\n  Marker: HTMLElement;\n  MapStyleToggle?: HTMLElement;\n  EditButtons?: HTMLElement;\n  ButtonAdjust?: HTMLButtonElement;\n  ButtonSave?: HTMLButtonElement;\n  ButtonCancel?: HTMLButtonElement;\n};\n\n/**\n * `MapboxAddressMinimap`, also available as the element `<mapbox-address-minimap>`,\n * is a component that displays a marker for confirmation purposes.\n *\n * Optionally, this marker is editable. When editable, the marker can be moved\n * around the map and the updated location is sent back to the Mapbox Contribute\n * workflow.\n *\n * The goal of `MapboxAddressMinimap` is to reduce delivery error in shipping and\n * local dispatching contexts.\n *\n * `MapboxAddressMinimap` expands to fill its container, and is hidden unless\n * {@link MapboxAddressMinimap#feature} is truthy. Setting {@link MapboxAddressMinimap#feature}\n * to `null` hides the component.\n *\n * @class MapboxAddressMinimap\n * @example\n * ```typescript\n * const minimap = new MapboxAddressMinimap();\n * containerElement.appendChild(minimap);\n * minimap.feature = {\n *   type: 'Feature',\n *   geometry: {\n *     type: 'Point',\n *     coordinates: [-122.4194, 37.7749]\n *   },\n *   properties: {}\n * };\n * ```\n */\nexport class MapboxAddressMinimap extends HTMLScopedElement {\n  static observedAttributes: string[] = [\n    'access-token',\n    'can-adjust-marker',\n    'keep-marker-centered',\n    'marker-anchor',\n    'satellite-toggle'\n  ];\n\n  #canAdjustMarkerInternal = false;\n\n  /** @section {Markers} */\n\n  /**\n   * If `true`, the marker can be moved around the map. Defaults to `false`.\n   *\n   * When editable, the marker can be moved around the map and the updated\n   * location can be referenced from the {@link MapboxAddressMinimap#onSaveMarkerLocation} callback.\n   *\n   * @name canAdjustMarker\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {boolean}\n   */\n  get canAdjustMarker(): boolean {\n    return this.#canAdjustMarkerInternal;\n  }\n  set canAdjustMarker(val: boolean) {\n    this.#canAdjustMarkerInternal = val;\n    val ? this.#addMarkerEditControls() : this.#removeMarkerEditControls();\n  }\n  /**\n   * If `true`, the map when panned moves around the marker, keeping the marker\n   * centered. Defaults to `false`.\n   *\n   * @name keepMarkerCentered\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {boolean}\n   */\n  keepMarkerCentered = false;\n  /**\n   * The anchor of the marker, relative to center of the expanded size. Defaults to `'bottom'`.\n   *\n   * @name markerAnchor\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {Anchor}\n   */\n  markerAnchor: Anchor = 'bottom';\n  /**\n   * A client-defined callback that is triggered when the \"Save\" button is clicked in the editing interface,\n   * and gives access to the adjusted marker coordinate.\n   *\n   * @name onSaveMarkerLocation\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {function}\n   */\n  onSaveMarkerLocation: (coordinate: [number, number]) => void;\n\n  #isAdjustMarkerEditing = false;\n\n  #imageLoaded = false;\n\n  #feature: GeoJSON.Feature<GeoJSON.Point>;\n  #url = '';\n\n  #width: number;\n  #height: number;\n\n  #binding: Binding;\n\n  #markerController: MarkerController;\n\n  #accessToken: string;\n\n  /** @section {Input data} */\n\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   *\n   * If not explicitly set on the component, this will reference the value in the global config object.\n   *\n   * @name accessToken\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @example\n   * ```typescript\n   * minimap.accessToken = 'pk.my-mapbox-access-token';\n   * ```\n   */\n  get accessToken(): string {\n    return this.#accessToken || config.accessToken;\n  }\n  set accessToken(newToken: string) {\n    this.#accessToken = newToken;\n  }\n\n  /**\n   * A [GeoJSON](https://docs.mapbox.com/help/glossary/geojson/) Feature representing\n   * a [Point](https://geojson.org/geojson-spec.html#point) geometry.\n   *\n   * The minimap is hidden unless\n   * {@link MapboxAddressMinimap#feature} is truthy. Setting {@link MapboxAddressMinimap#feature}\n   * to `null` hides the component.\n   *\n   * @name feature\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {Feature}\n   */\n  get feature(): GeoJSON.Feature<GeoJSON.Point> {\n    return this.#feature;\n  }\n  set feature(feature: GeoJSON.Feature<GeoJSON.Point>) {\n    this.#feature = feature;\n\n    if (!feature) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  get template(): HTMLTemplateElement {\n    return TEMPLATE;\n  }\n\n  get templateStyle(): string {\n    return style;\n  }\n\n  get templateUserStyle(): string {\n    return getThemeCSS('.MapboxAddressMinimap', this.theme);\n  }\n\n  #themeInternal: Theme = {};\n  #satelliteToggleInternal = false;\n\n  /** @section {Appearance} */\n\n  /**\n   * If `true`, the map will have an image toggle between Map and Satellite styles.\n   *\n   * @name satelliteToggle\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {boolean}\n   */\n  get satelliteToggle(): boolean {\n    return this.#satelliteToggleInternal;\n  }\n  set satelliteToggle(val: boolean) {\n    this.#satelliteToggleInternal = val;\n    val ? this.#addSatelliteToggle() : this.#removeSatelliteToggle();\n  }\n\n  /**\n   * The {@link Theme} to use for styling the editing interface.\n   *\n   * @name theme\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {Theme}\n   * @example\n   * ```typescript\n   * autofill.theme = {\n   *   variables: {\n   *     colorPrimary: 'myBrandRed'\n   *   }\n   * };\n   * ```\n   */\n  get theme(): Theme {\n    return this.#themeInternal;\n  }\n  set theme(theme: Theme) {\n    this.#themeInternal = theme;\n\n    if (!this.#binding || !theme) {\n      return;\n    }\n\n    this.updateTemplateUserStyle(getThemeCSS('.MapboxAddressMinimap', theme));\n\n    const { Marker, MapStyleToggle } = this.#binding;\n    Marker.innerHTML = getIcon('marker', theme);\n    if (MapStyleToggle) {\n      MapStyleToggle.style.backgroundImage = this.#getToggleBackgroundImageUrl(\n        this.mapStyleMode === 'default' ? 'satellite' : 'default'\n      );\n    }\n  }\n\n  #mapStyleMode: MapStyleMode = 'default';\n\n  /**\n   * The map style to use, either `'default'` or `'satellite'`. The default map\n   * style is configurable with {@link MapboxAddressMinimap#defaultMapStyle}.\n   *\n   * @name mapStyleMode\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {'default' | 'satellite'}\n   */\n  get mapStyleMode(): MapStyleMode {\n    return this.#mapStyleMode;\n  }\n  set mapStyleMode(styleMode: MapStyleMode) {\n    const prevStyleMode = this.#mapStyleMode;\n    this.#mapStyleMode = styleMode;\n    if (!this.#binding) {\n      return;\n    }\n\n    // Update toggle button background image\n    const { MapStyleToggle } = this.#binding;\n    if (!MapStyleToggle) {\n      return;\n    }\n\n    MapStyleToggle.style.backgroundImage =\n      this.#getToggleBackgroundImageUrl(prevStyleMode);\n    // Update title attribute\n    MapStyleToggle.setAttribute(\n      'title',\n      `Switch to ${prevStyleMode === 'satellite' ? 'Satellite' : 'Default'}`\n    );\n    this.#updateImageSrc();\n  }\n\n  #defaultMapStyle: [string, string] = ['mapbox', 'streets-v11'];\n\n  /**\n   * The map style to use for the default map style. Defaults to `['mapbox', 'streets-v11']`.\n   *\n   * @name defaultMapStyle\n   * @instance\n   * @memberof MapboxAddressMinimap\n   * @type {[string, string]}\n   */\n  get defaultMapStyle(): [string, string] {\n    return this.#defaultMapStyle;\n  }\n  set defaultMapStyle(style: [string, string]) {\n    this.#defaultMapStyle = style;\n    this.#updateImageSrc();\n  }\n\n  /**\n   * @deprecated Use `container` instead.\n   */\n  #container: HTMLElement | null;\n\n  get container(): HTMLElement | null {\n    return this.#container;\n  }\n\n  set container(newContainer: HTMLElement | null) {\n    if (newContainer) {\n      newContainer.style.position = 'relative';\n      this.#container = newContainer;\n    }\n  }\n\n  /** @section {Methods} */\n\n  /**\n   * If {@link MapboxAddressMinimap#feature} is truthy, show the minimap.\n   */\n  show(): void {\n    if (!this.#feature) {\n      return;\n    }\n\n    const lngLat = this.#feature.geometry.coordinates;\n    this.#markerController.coordinate = lngLat as [number, number];\n\n    this.#url = this.#getImageUrl(lngLat as [number, number]);\n\n    // Update image.\n    const { MapboxAddressMinimap, Image } = this.#binding;\n    Image.src = this.#url;\n\n    MapboxAddressMinimap.removeAttribute('aria-hidden');\n  }\n\n  /**\n   * Hide the minimap.\n   */\n  hide(): void {\n    const { MapboxAddressMinimap } = this.#binding;\n    MapboxAddressMinimap.setAttribute('aria-hidden', 'true');\n  }\n\n  #toggleMarkerEditing = (): void => {\n    const { ImageContainer, ButtonAdjust, ButtonSave, ButtonCancel } =\n      this.#binding;\n    if (this.#isAdjustMarkerEditing) {\n      ImageContainer.classList.add(`${this.dataset.seed}--draggable`);\n      this.#markerController.isActive = true;\n      ButtonAdjust.setAttribute('aria-hidden', 'true');\n      ButtonSave.removeAttribute('aria-hidden');\n      ButtonCancel.removeAttribute('aria-hidden');\n    } else {\n      ImageContainer.classList.remove(`${this.dataset.seed}--draggable`);\n      this.#markerController.isActive = false;\n      ButtonAdjust.removeAttribute('aria-hidden');\n      ButtonSave.setAttribute('aria-hidden', 'true');\n      ButtonCancel.setAttribute('aria-hidden', 'true');\n    }\n  };\n\n  #handleStartMarkerEditing = (): void => {\n    this.#isAdjustMarkerEditing = true;\n    this.#toggleMarkerEditing();\n  };\n\n  #handleSaveMarkerEditing = (): void => {\n    // Send feedback to Contribute API if feature includes address info, and the marker location has changed\n    if (\n      this.feature.properties.full_address &&\n      !deepEquals(\n        this.feature.geometry.coordinates,\n        this.#markerController.coordinate\n      )\n    ) {\n      const [lng, lat] = this.#markerController.coordinate;\n      sendFeedback(this.accessToken, {\n        originalCoordinate: this.feature.geometry.coordinates as [\n          number,\n          number\n        ],\n        originalAddress: this.feature.properties.full_address,\n        changes: {\n          location: { longitude: lng, latitude: lat }\n        }\n      });\n    }\n    // Client-defined callback\n    if (this.onSaveMarkerLocation) {\n      this.onSaveMarkerLocation(this.#markerController.coordinate);\n    }\n    // Update component state\n    this.#isAdjustMarkerEditing = false;\n    this.#toggleMarkerEditing();\n  };\n\n  #handleCancelMarkerEditing = (): void => {\n    this.#markerController.reCenter();\n    this.#isAdjustMarkerEditing = false;\n    this.#toggleMarkerEditing();\n  };\n\n  #handleToggleMapStyle = (): void => {\n    this.mapStyleMode =\n      this.mapStyleMode === 'default' ? 'satellite' : 'default';\n  };\n\n  #handleImageLoad = (): void => {\n    if (!this.#imageLoaded) {\n      this.#markerController.reCenter();\n    }\n    this.#imageLoaded = true;\n  };\n\n  #handleImageError = (): void => {\n    this.#imageLoaded = false;\n  };\n\n  /**\n   * Get the Static Image API URL for a given coordinate.\n   * Attempts to get an image twice as large as the container to enable panning,\n   * while constraining to the static API size limits.\n   * @param lngLatLike - The coordinate representing the center of the image\n   * @returns\n   */\n  #getImageUrl = (lngLatLike: LngLatLike): string => {\n    // Return empty string if height or width is 0 to prevent 422 error\n    if (this.#width === 0 || this.#height === 0) return '';\n\n    const [username, styleId] = this.defaultMapStyle;\n    const defaultBaseUrl = getStaticBaseUrl(username, styleId);\n    const baseUrl =\n      this.mapStyleMode === 'default'\n        ? defaultBaseUrl\n        : STATIC_BASE_URL_SATELLITE;\n    const skuToken =\n      AUTOFILL_SKU_TOKEN_PREFIX + config.autofillSessionToken.toString();\n    let imgUrl =\n      baseUrl +\n      LngLat.convert(lngLatLike).toArray().join(',') +\n      ',' +\n      ZOOM +\n      ',0/' +\n      Math.min(this.#width * 2, MAX_IMAGE_DIM) +\n      'x' +\n      Math.min(this.#height * 2, MAX_IMAGE_DIM) +\n      '?access_token=' +\n      this.accessToken +\n      '&attribution=false' +\n      '&logo=false';\n    if (config.autofillSessionEnabled) {\n      imgUrl += `&sku=${skuToken}`;\n    }\n    return imgUrl;\n  };\n\n  #updateImageSrc = (): void => {\n    if (this.#feature) {\n      const lngLat = this.#feature.geometry.coordinates;\n      this.#url = this.#getImageUrl(lngLat as [number, number]);\n      const { Image } = this.#binding;\n      Image.src = this.#url;\n    }\n  };\n\n  #getToggleBackgroundImageUrl = (styleMode: MapStyleMode): string => {\n    return `url(\"${getImage(\n      styleMode === 'default' ? 'styleToggleDefault' : 'styleToggleSatellite',\n      this.theme\n    )}\")`;\n  };\n\n  #setSize = (): void => {\n    const { MapboxAddressMinimap, ImageContainer } = this.#binding;\n    const { width, height } = getElementSize(this.container);\n    this.#width = Math.min(width, MAX_IMAGE_DIM); // Constrain to Static Image API limit\n    this.#height = Math.min(height, MAX_IMAGE_DIM); // Constrain to Static Image API limit\n    MapboxAddressMinimap.style.setProperty('width', `${this.#width}px`);\n    ImageContainer.style.setProperty('height', `${this.#height}px`);\n    ImageContainer.style.setProperty('width', `${this.#width}px`);\n    // Update the image source URL based on the new size\n    this.#updateImageSrc();\n  };\n\n  #addMarkerEditControls = (): void => {\n    // Footer\n    const existingFooter = this.querySelector('.MinimapFooter');\n    if (existingFooter) return;\n    const footerElement = this.prepareTemplate(FOOTER_TEMPLATE);\n    const minimapElement = this.querySelector('.MapboxAddressMinimap');\n    if (!minimapElement) return;\n    minimapElement.appendChild(footerElement);\n\n    // Edit buttons\n    const existingEditBtns = this.querySelector('.MinimapEditButtons');\n    if (existingEditBtns) return;\n    const editButtonsElement = this.prepareTemplate(EDIT_BUTTONS_TEMPLATE);\n    const innerFrame = this.querySelector('.MinimapInnerFrame');\n    innerFrame.appendChild(editButtonsElement);\n\n    // Add to or update object binding\n    this.#binding = {\n      ...this.#binding,\n      EditButtons: this.querySelector('.MinimapEditButtons'),\n      ButtonAdjust: this.querySelector('.MinimapButtonAdjust'),\n      ButtonSave: this.querySelector('.MinimapButtonSave'),\n      ButtonCancel: this.querySelector('.MinimapButtonCancel')\n    };\n\n    // Bind callbacks to button click events\n    const { ButtonAdjust, ButtonSave, ButtonCancel } = this.#binding;\n    ButtonAdjust.addEventListener('click', this.#handleStartMarkerEditing);\n    ButtonSave.addEventListener('click', this.#handleSaveMarkerEditing);\n    ButtonCancel.addEventListener('click', this.#handleCancelMarkerEditing);\n  };\n\n  #removeMarkerEditControls = (): void => {\n    if (!this.#binding) return;\n    const { EditButtons, ButtonAdjust, ButtonSave, ButtonCancel } =\n      this.#binding;\n\n    const existingFooter = this.querySelector('.MinimapFooter');\n    existingFooter?.remove();\n    EditButtons?.remove();\n    if (ButtonAdjust) {\n      ButtonAdjust.remove();\n      ButtonAdjust.removeEventListener('click', this.#handleStartMarkerEditing);\n    }\n    if (ButtonSave) {\n      ButtonSave.remove();\n      ButtonSave.removeEventListener('click', this.#handleSaveMarkerEditing);\n    }\n    if (ButtonCancel) {\n      ButtonCancel.remove();\n      ButtonCancel.removeEventListener(\n        'click',\n        this.#handleCancelMarkerEditing\n      );\n    }\n\n    delete this.#binding.EditButtons;\n    delete this.#binding.ButtonAdjust;\n    delete this.#binding.ButtonSave;\n    delete this.#binding.ButtonCancel;\n  };\n\n  #addSatelliteToggle = (): void => {\n    const existingToggle = this.querySelector('.MinimapStyleToggle');\n    if (existingToggle) return;\n\n    // Add element to DOM\n    const toggleElement = this.prepareTemplate(STYLE_TOGGLE_TEMPLATE);\n    const innerFrame = this.querySelector('.MinimapInnerFrame');\n    if (!innerFrame) return;\n    innerFrame.appendChild(toggleElement);\n\n    // Add to or update object binding\n    this.#binding.MapStyleToggle = toggleElement;\n\n    // Bind callback\n    toggleElement.addEventListener('click', this.#handleToggleMapStyle);\n    // Initialize background image\n    toggleElement.style.backgroundImage = this.#getToggleBackgroundImageUrl(\n      this.mapStyleMode === 'default' ? 'satellite' : 'default'\n    );\n    toggleElement.setAttribute(\n      'title',\n      `Switch to ${this.mapStyleMode === 'default' ? 'Satellite' : 'Default'}`\n    );\n  };\n\n  #removeSatelliteToggle = (): void => {\n    if (!this.#binding) return;\n    const { MapStyleToggle } = this.#binding;\n    if (!MapStyleToggle) return;\n\n    MapStyleToggle.remove();\n    MapStyleToggle.removeEventListener('click', this.#handleToggleMapStyle);\n\n    delete this.#binding.MapStyleToggle;\n  };\n\n  connectedCallback(): void {\n    super.connectedCallback();\n\n    this.#binding = bindElements<Binding>(this, {\n      MapboxAddressMinimap: '.MapboxAddressMinimap',\n      ImageContainer: '.MinimapImageContainer',\n      Image: '.MinimapImage',\n      Marker: '.MinimapMarker',\n      MapStyleToggle: '.MinimapStyleToggle',\n      EditButtons: '.MinimapEditButtons',\n      ButtonAdjust: '.MinimapButtonAdjust',\n      ButtonSave: '.MinimapButtonSave',\n      ButtonCancel: '.MinimapButtonCancel'\n    });\n\n    // Update toggle button background image.\n    this.mapStyleMode = this.#mapStyleMode;\n\n    // Initialize theme if not set before connectedCallback\n    this.theme = { ...this.theme };\n\n    // Append buttons and footer if adjustable\n    if (this.canAdjustMarker) {\n      this.#addMarkerEditControls();\n    }\n\n    // Append style toggle if enabled\n    if (this.satelliteToggle) {\n      this.#addSatelliteToggle();\n    }\n\n    // Calculate size and listen for changes\n    this.container = this.parentElement;\n    const resizeObserver = new ResizeObserver(this.#setSize);\n    resizeObserver.observe(this.container);\n    this.#setSize();\n\n    const { MapboxAddressMinimap, ImageContainer, Image, Marker } =\n      this.#binding;\n\n    // Initialize marker controller\n    this.#markerController = new MarkerController(\n      ImageContainer,\n      Marker,\n      this.keepMarkerCentered,\n      ZOOM,\n      this.markerAnchor\n    );\n    this.#markerController.reCenter();\n    Image.onload = this.#handleImageLoad;\n    Image.onerror = this.#handleImageError;\n\n    Image.src = this.#url;\n\n    if (this.#feature) MapboxAddressMinimap.removeAttribute('aria-hidden');\n    else MapboxAddressMinimap.setAttribute('aria-hidden', 'true');\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ): void {\n    if (name === 'access-token') {\n      this.accessToken = newValue;\n    } else if (name === 'can-adjust-marker') {\n      this.canAdjustMarker = newValue === 'true';\n    } else if (name === 'keep-marker-centered') {\n      this.keepMarkerCentered = newValue === 'true';\n    } else if (name === 'marker-anchor') {\n      const newAnchor = newValue as Anchor;\n      this.markerAnchor = newAnchor;\n      this.#markerController && (this.#markerController.anchor = newAnchor);\n    } else if (name === 'satellite-toggle') {\n      this.satelliteToggle = newValue === 'true';\n    }\n  }\n}\n\ndeclare global {\n  interface Window {\n    MapboxAddressMinimap: typeof MapboxAddressMinimap;\n  }\n}\n\nwindow.MapboxAddressMinimap = MapboxAddressMinimap;\n\nif (!window.customElements.get('mapbox-address-minimap')) {\n  customElements.define('mapbox-address-minimap', MapboxAddressMinimap);\n}\n","import SphericalMercator from '@mapbox/sphericalmercator';\nimport { deepEquals, round } from '.';\nimport { getElementSize } from './dom';\n\nexport type MapStyleMode = 'default' | 'satellite';\n\n/**\n * @typedef Anchor\n */\nexport type Anchor =\n  | 'center'\n  | 'top-left'\n  | 'top-right'\n  | 'bottom-left'\n  | 'bottom-right'\n  | 'top'\n  | 'bottom'\n  | 'left'\n  | 'right';\n\n// eslint-disable-next-line\n// @ts-ignore\nconst merc = new SphericalMercator({ size: 512, antimeridian: true });\n\nexport const MAX_IMAGE_DIM = 1280;\n\ninterface MarkerTransform {\n  anchorX: number;\n  anchorY: number;\n  globalX: number;\n  globalY: number;\n}\n\n/**\n * Get the [X,Y] pixel offset for a given SVG marker and anchor definition\n * @param marker - An SVG element used as the marker\n * @param anchor - The anchor point of the marker to put closest to the marked coordinate\n * @returns [X,Y] pixel coordinate\n */\nexport function getAnchorOffset(\n  marker: HTMLElement,\n  anchor: Anchor\n): [number, number] {\n  const { width, height } = getElementSize(marker, true);\n  switch (anchor) {\n    case 'center':\n      return [0, 0];\n    case 'top':\n      return [0, height / 2];\n    case 'bottom':\n      return [0, (-1 * height) / 2];\n    case 'left':\n      return [width / 2, 0];\n    case 'right':\n      return [(-1 * width) / 2, 0];\n    case 'top-left':\n      return [width / 2, height / 2];\n    case 'top-right':\n      return [(-1 * width) / 2, height / 2];\n    case 'bottom-left':\n      return [width / 2, (-1 * height) / 2];\n    case 'bottom-right':\n      return [(-1 * width) / 2, (-1 * height) / 2];\n  }\n}\n\n/**\n * Manages positioning of a static map image and marker relative to\n * pixel and geographical coordinates. Handles pointer events for\n * interactive/adjustable instances.\n */\nexport class MarkerController {\n  imgContainerElement: HTMLElement;\n  markerElement: HTMLElement;\n  keepMarkerCentered: boolean;\n  zoom: number;\n\n  /** X-offset for the marker element to account for its positioning anchor */\n  anchorOffsetX: number;\n  /** Y-offset for the marker element to account for its positioning anchor */\n  anchorOffsetY: number;\n\n  /** Current X pixel of the pointer on the page */\n  curPointerXPos: number;\n  /** Current Y pixel of the pointer on the page */\n  curPointerYPos: number;\n  /** X-pixels deviation of marker position from the current map/feature center point */\n  markerDeltaX: number;\n  /** Y-pixels deviation of marker position from the current map/feature center point */\n  markerDeltaY: number;\n\n  /** Lng/lat of image center represented as screen pixels */\n  imgCenterPx: [number, number];\n  /** Lng/lat of adjusted image center as screen pixels */\n  imgCenterAdjustedPx: [number, number];\n\n  /**\n   *\n   * @param imageContainer - The parent element of the <img>\n   * @param marker - SVG Element used as the map marker\n   * @param keepMarkerCentered - If true, the marker will stay centered within the frame while the map moves behind it\n   * @param zoom - The zoom level of the static map, used to calculate between screen pixel and lng/lat\n   * @param anchor - The part of the marker that should be positioned closest to the coordinate\n   */\n  constructor(\n    imageContainer: HTMLElement,\n    marker: HTMLElement,\n    keepMarkerCentered: boolean,\n    zoom: number,\n    anchor: Anchor\n  ) {\n    this.markerElement = marker;\n    this.imgContainerElement = imageContainer;\n    this.keepMarkerCentered = keepMarkerCentered;\n    this.zoom = zoom;\n    this.anchor = anchor;\n\n    this.curPointerXPos = 0;\n    this.curPointerYPos = 0;\n    this.markerDeltaX = 0;\n    this.markerDeltaY = 0;\n\n    this.imgContainerElement.addEventListener(\n      'pointerdown',\n      this.#onPointerDownImage\n    );\n\n    if (!this.keepMarkerCentered) {\n      this.markerElement.addEventListener(\n        'pointerdown',\n        this.#onPointerDownMarker\n      );\n    }\n\n    // Listen for changes to anchor size\n    const resizeObserver = new ResizeObserver(this.#handleAnchorResize);\n    resizeObserver.observe(this.markerElement);\n  }\n\n  #anchor: Anchor;\n\n  get anchor(): Anchor {\n    return this.#anchor;\n  }\n\n  set anchor(newAnchor: Anchor) {\n    this.#anchor = newAnchor;\n    [this.anchorOffsetX, this.anchorOffsetY] = getAnchorOffset(\n      this.markerElement,\n      newAnchor\n    );\n    this.markerTransform = {\n      anchorX: this.anchorOffsetX,\n      anchorY: this.anchorOffsetY\n    };\n  }\n\n  #handleAnchorResize = (): void => {\n    [this.anchorOffsetX, this.anchorOffsetY] = getAnchorOffset(\n      this.markerElement,\n      this.anchor\n    );\n    this.markerTransform = {\n      anchorX: this.anchorOffsetX,\n      anchorY: this.anchorOffsetY\n    };\n  };\n\n  #markerTransform: MarkerTransform = {\n    anchorX: 0,\n    anchorY: 0,\n    globalX: 0,\n    globalY: 0\n  };\n\n  get markerTransform(): MarkerTransform {\n    return this.#markerTransform;\n  }\n\n  set markerTransform(val: Partial<MarkerTransform>) {\n    this.#markerTransform = {\n      ...this.#markerTransform,\n      ...val\n    };\n    this.#updateMarkerTransform();\n  }\n\n  #isActive = false;\n\n  /** True if the marker is currently in edit mode */\n  get isActive(): boolean {\n    return this.#isActive;\n  }\n\n  /** Set to true to enable editing of the marker */\n  set isActive(val: boolean) {\n    this.imgContainerElement.style.touchAction = val ? 'none' : '';\n    this.#isActive = val;\n  }\n\n  /** Height of the <img> element */\n  get imgHeight(): number {\n    return Math.min(this.imgContainerElement.clientHeight * 2, MAX_IMAGE_DIM);\n  }\n\n  /** Width of the <img> element */\n  get imgWidth(): number {\n    return Math.min(this.imgContainerElement.clientWidth * 2, MAX_IMAGE_DIM);\n  }\n\n  #originalCoordinate: [number, number];\n\n  /** Lng/lat of the current marker location */\n  get coordinate(): [number, number] {\n    const adjustedPx: [number, number] = this.keepMarkerCentered\n      ? this.imgCenterAdjustedPx\n      : [\n          this.imgCenterPx[0] - this.markerDeltaX,\n          this.imgCenterPx[1] + this.markerDeltaY\n        ];\n\n    // If the screen pixel hasn't changed, use the original coordinate so as not to incur any precision rounding during translation\n    if (deepEquals(adjustedPx, this.imgCenterPx)) {\n      return this.#originalCoordinate;\n    } else {\n      const lngLat = merc.ll(adjustedPx, this.zoom);\n      return [round(lngLat[0], 6), round(lngLat[1], 6)];\n    }\n  }\n\n  /** Set the lng/lat corresponding to the initial marker and image center location */\n  set coordinate(lngLat: [number, number]) {\n    this.#originalCoordinate = lngLat;\n    this.imgCenterPx = this.imgCenterAdjustedPx = merc.px(lngLat, this.zoom);\n  }\n\n  // Marker dragging event handlers\n  #onPointerDownMarker = (m: PointerEvent): void => {\n    if (!this.isActive) return;\n\n    m.preventDefault();\n    m.stopPropagation();\n\n    this.#updatePointerPosition(m);\n\n    window.addEventListener('pointermove', this.#onPointerMoveMarker);\n    window.addEventListener('pointerup', this.#onPointerUpMarker);\n  };\n\n  #onPointerUpMarker = (): void => {\n    window.removeEventListener('pointermove', this.#onPointerMoveMarker);\n    window.removeEventListener('pointerup', this.#onPointerUpMarker);\n  };\n\n  #onPointerMoveMarker = (m: PointerEvent): void => {\n    m.preventDefault();\n    m.stopPropagation();\n\n    // Calculate change in pointer position\n    const diffX = this.curPointerXPos - m.pageX;\n    const diffY = this.curPointerYPos - m.pageY;\n\n    // Update relative marker positioning\n    this.markerDeltaX += diffX;\n    this.markerDeltaY -= diffY;\n    // Clamp to image bounds\n    this.markerDeltaX = Math.max(\n      Math.min(this.imgWidth / 2, this.markerDeltaX),\n      (this.imgWidth / 2) * -1\n    );\n    this.markerDeltaY = Math.max(\n      Math.min(this.imgHeight / 2, this.markerDeltaY),\n      (this.imgHeight / 2) * -1\n    );\n\n    // Calculate X/Y transforms\n    const imageOffsetX = this.imgCenterPx[0] - this.imgCenterAdjustedPx[0];\n    const imageOffsetY = this.imgCenterPx[1] - this.imgCenterAdjustedPx[1];\n    const deltaX = this.markerDeltaX - imageOffsetX;\n    const deltaY = this.markerDeltaY + imageOffsetY;\n\n    this.markerTransform = { globalX: deltaX, globalY: deltaY };\n\n    // Update pointer position\n    this.#updatePointerPosition(m);\n  };\n\n  // Image dragging event handlers\n  #onPointerDownImage = (m: PointerEvent): void => {\n    if (!this.isActive) return;\n\n    m.preventDefault();\n    m.stopPropagation();\n\n    this.#updatePointerPosition(m);\n\n    window.addEventListener('pointermove', this.#onPointerMoveImage);\n    window.addEventListener('pointerup', this.#onPointerUpImage);\n  };\n\n  #onPointerUpImage = (): void => {\n    window.removeEventListener('pointermove', this.#onPointerMoveImage);\n    window.removeEventListener('pointerup', this.#onPointerUpImage);\n  };\n\n  #onPointerMoveImage = (m: PointerEvent): void => {\n    m.preventDefault();\n\n    // Calculate and constrain updated scroll position\n    let top = Math.round(\n      this.imgContainerElement.scrollTop + (this.curPointerYPos - m.pageY)\n    );\n    // Clamp to container bounds\n    top = Math.max(\n      Math.min(this.imgHeight - this.imgContainerElement.clientHeight, top),\n      0\n    );\n    let left = Math.round(\n      this.imgContainerElement.scrollLeft + (this.curPointerXPos - m.pageX)\n    );\n    // Clamp to container bounds\n    left = Math.max(\n      Math.min(this.imgWidth - this.imgContainerElement.clientWidth, left),\n      0\n    );\n    this.imgContainerElement.scrollTop = top;\n    this.imgContainerElement.scrollLeft = left;\n\n    // Update adjusted center location\n    const diffX = Math.round(\n      left - (this.imgWidth - this.imgContainerElement.clientWidth) / 2\n    );\n    const diffY = Math.round(\n      (this.imgHeight - this.imgContainerElement.clientHeight) / 2 - top\n    );\n    this.imgCenterAdjustedPx = [\n      this.imgCenterPx[0] + diffX,\n      this.imgCenterPx[1] - diffY\n    ];\n\n    if (!this.keepMarkerCentered) {\n      // Move marker in sync with image to maintain visual positioning on map\n      const deltaX = this.markerDeltaX + diffX;\n      const deltaY = this.markerDeltaY + diffY;\n      this.markerTransform = { globalX: deltaX, globalY: deltaY };\n    }\n\n    // Update pointer position\n    this.#updatePointerPosition(m);\n  };\n\n  #updatePointerPosition = (m: PointerEvent): void => {\n    this.curPointerXPos = m.pageX;\n    this.curPointerYPos = m.pageY;\n  };\n\n  #updateMarkerTransform = (): void => {\n    const { anchorX, anchorY, globalX, globalY } = this.#markerTransform;\n    const transformX = anchorX - globalX;\n    const transformY = anchorY + globalY;\n    this.markerElement.style.transform = `translate(calc(-50% + ${transformX}px), calc(-50% + ${transformY}px))`;\n  };\n\n  /** Re-center the marker on the map at its original location */\n  reCenter = (): void => {\n    // Set scroll values to center image in its container\n    const top = (this.imgHeight - this.imgContainerElement.clientHeight) / 2;\n    const left = (this.imgWidth - this.imgContainerElement.clientWidth) / 2;\n    this.imgContainerElement.scrollTop = top;\n    this.imgContainerElement.scrollLeft = left;\n\n    // Reset adjusted image center screen coordinate to match original\n    this.imgCenterAdjustedPx = this.imgCenterPx;\n\n    // Reset marker transform in case it was changed\n    this.markerDeltaX = this.markerDeltaY = 0;\n    this.markerTransform = { globalX: 0, globalY: 0 };\n  };\n}\n","import {\n  AutofillOptions,\n  AutofillRetrieveResponse,\n  AutofillSuggestionResponse,\n  Evented,\n  MapboxAutofill,\n  SearchSession\n} from '@mapbox/search-js-core';\n\nimport { MapboxSearchListboxAutofillType } from './components/MapboxAddressAutofill';\nimport { MapboxSearchListbox } from './components/MapboxSearchListbox';\nimport { MapboxHTMLEvent } from './MapboxHTMLEvent';\nimport { Theme } from './theme';\nimport { deepEquals } from './utils';\nimport { fillFormWithFeature, findAddressInputs } from './utils/autofill';\n\nimport { config } from './config';\n\n/**\n * @class AutofillInstance\n */\nexport class AutofillInstance {\n  #input: HTMLInputElement;\n  #collection: AutofillCollectionType;\n\n  listbox: MapboxSearchListboxAutofillType = new MapboxSearchListbox();\n\n  constructor(\n    collection: AutofillCollectionType,\n    input: HTMLInputElement,\n    autofillRef: MapboxAutofill\n  ) {\n    this.#input = input;\n    this.#collection = collection;\n    this.listbox.input = this.#input;\n\n    // Bind the listbox to the session.\n    this.listbox.session = new SearchSession(autofillRef);\n    this.listbox.session.sessionToken = config.autofillSessionToken;\n\n    this.listbox.addEventListener('suggest', this.#handleSuggest);\n    this.listbox.addEventListener('suggesterror', this.#handleSuggestError);\n    this.listbox.addEventListener('retrieve', this.#handleRetrieve);\n\n    document.body.appendChild(this.listbox);\n  }\n\n  remove(): void {\n    this.listbox.remove();\n    this.listbox.removeEventListener('suggest', this.#handleSuggest);\n    this.listbox.removeEventListener('suggesterror', this.#handleSuggestError);\n    this.listbox.removeEventListener('retrieve', this.#handleRetrieve);\n  }\n\n  #handleSuggest = (e: MapboxHTMLEvent<AutofillSuggestionResponse>): void => {\n    // Manually bubble up the event.\n    this.#collection.fire('suggest', e.clone(this.#input));\n  };\n\n  #handleSuggestError = (e: MapboxHTMLEvent<Error>): void => {\n    // Manually bubble up the event.\n    this.#collection.fire('suggesterror', e.clone(this.#input));\n  };\n\n  #handleRetrieve = (e: MapboxHTMLEvent<AutofillRetrieveResponse>): void => {\n    // Manually bubble up the event.\n    this.#collection.fire('retrieve', e.clone(this.#input));\n\n    if (!this.#input) {\n      return;\n    }\n\n    const featureCollection = e.detail;\n    if (\n      !featureCollection ||\n      !featureCollection.features ||\n      !featureCollection.features.length\n    ) {\n      return;\n    }\n\n    fillFormWithFeature(featureCollection.features[0], this.#input);\n  };\n}\n\ninterface AutofillCollectionOptions {\n  accessToken?: string;\n  options?: Partial<AutofillOptions>;\n  theme?: Theme;\n}\n\ninterface EventTypes<AutofillSuggestionResponse, AutofillRetrieveResponse> {\n  /**\n   * Fired when the user is typing in the input and provides a list of suggestions.\n   *\n   * The underlying response from {@link MapboxAutofill} is passed as the event's detail,\n   * while the responsible input is passed as the event's target.\n   *\n   * @event suggest\n   * @instance\n   * @memberof AutofillCollection\n   * @type {AutofillSuggestionResponse}\n   * @example\n   * ```typescript\n   * collection.addEventListener('suggest', (event) => {\n   *   const suggestions = event.detail.suggestions;\n   *   const inputEl = event.target;\n   *   // ...\n   * });\n   * ```\n   */\n  suggest: MapboxHTMLEvent<AutofillSuggestionResponse>;\n  /**\n   * Fired when {@link MapboxAutofill} has errored providing a list of suggestions.\n   *\n   * The underlying error is passed as the event's detail,\n   * while the responsible input is passed as the event's target.\n   *\n   * @event suggesterror\n   * @instance\n   * @memberof AutofillCollection\n   * @type {Error}\n   * @example\n   * ```typescript\n   * collection.addEventListener('suggesterror', (event) => {\n   *   const error = event.detail;\n   *   const inputEl = event.target;\n   *   // ...\n   * });\n   * ```\n   */\n  suggesterror: MapboxHTMLEvent<Error>;\n  /**\n   * Fired when the user has selected a suggestion, before the form is autofilled.\n   *\n   * The underlying response from {@link MapboxAutofill} is passed as the event's detail,\n   * while the responsible input is passed as the event's target.\n   *\n   * @event retrieve\n   * @instance\n   * @memberof AutofillCollection\n   * @type {AutofillRetrieveResponse}\n   * @example\n   * ```typescript\n   * autofill.addEventListener('retrieve', (event) => {\n   *   const featureCollection = event.detail;\n   *   const inputEl = event.target;\n   *   // ...\n   * });\n   * ```\n   */\n  retrieve: MapboxHTMLEvent<AutofillRetrieveResponse>;\n}\n\ntype AutofillCollectionType = AutofillCollection<\n  AutofillSuggestionResponse,\n  AutofillRetrieveResponse\n>;\n\n/**\n * Underlying collection object class returned by the {@link autofill} function.\n *\n * @class AutofillCollection\n */\nexport class AutofillCollection<\n  AutofillSuggestionResponse,\n  AutofillRetrieveResponse\n> extends Evented<\n  EventTypes<AutofillSuggestionResponse, AutofillRetrieveResponse>\n> {\n  instances: AutofillInstance[] = [];\n  #currentInputs: HTMLInputElement[];\n\n  #autofill = new MapboxAutofill();\n\n  constructor({ accessToken, options, theme }: AutofillCollectionOptions) {\n    super();\n\n    config.autofillSessionEnabled = true;\n\n    this.accessToken = accessToken || config.accessToken;\n    options && (this.options = options);\n    theme && (this.theme = theme);\n    this.update();\n  }\n\n  /**\n   * The [Mapbox access token](https://docs.mapbox.com/help/glossary/access-token/) to use for all requests.\n   *\n   * @example\n   * ```typescript\n   * autofill.accessToken = 'pk.my-mapbox-access-token';\n   * ```\n   */\n  get accessToken(): string {\n    return this.#autofill.accessToken;\n  }\n  set accessToken(newToken: string) {\n    this.#autofill.accessToken = newToken;\n  }\n\n  #options: Partial<AutofillOptions>;\n\n  /**\n   * Options to pass to the underlying {@link MapboxAutofill} interface.\n   *\n   * @example\n   * ```typescript\n   * autofill.options = {\n   *  language: 'en',\n   *  country: 'US',\n   * };\n   * ```\n   */\n  get options(): Partial<AutofillOptions> {\n    return this.#options;\n  }\n  set options(newOptions: Partial<AutofillOptions>) {\n    this.#options = { ...this.#options, ...newOptions };\n    this.instances.forEach((instance) => {\n      instance.listbox.options = { ...instance.listbox.options, ...newOptions };\n    });\n  }\n\n  #theme: Theme;\n\n  /**\n   * The {@link Theme} to use for styling the autofill component.\n   *\n   * @example\n   * ```typescript\n   * autofill.theme = {\n   *   variables: {\n   *     colorPrimary: 'myBrandRed'\n   *   }\n   * };\n   * ```\n   */\n  get theme(): Theme {\n    return this.#theme;\n  }\n  set theme(newTheme: Theme) {\n    this.#theme = newTheme;\n    this.instances.forEach((instance) => {\n      instance.listbox.theme = newTheme;\n    });\n  }\n\n  /** @section {Methods} */\n\n  /**\n   * Updates autofill collection based on the current DOM state.\n   * @example\n   * ```typescript\n   * collection.update();\n   * ```\n   */\n  update(): void {\n    // STEP 0: Remove and clean up any existing autofill instances\n    this.instances.forEach((instance) => {\n      instance.remove();\n    });\n    // STEP 1: Find the input element(s)\n    this.#currentInputs = findAddressInputs();\n    // STEP 2: Create a new autofill instance for each input\n    this.instances = [];\n    this.#currentInputs.forEach((input) => {\n      const autofillInstance = new AutofillInstance(\n        this,\n        input,\n        this.#autofill\n      );\n      autofillInstance.listbox.options = this.options;\n      autofillInstance.listbox.theme = this.theme;\n      this.instances.push(autofillInstance);\n    });\n  }\n\n  // TODO: optimize this!\n  // Called when content changes.\n  #handleObserve = (): void => {\n    // TODO: add test to make sure this comparison works\n    if (!deepEquals(findAddressInputs(), this.#currentInputs)) {\n      this.update();\n    }\n  };\n\n  #observer = new MutationObserver(this.#handleObserve);\n\n  /**\n   * Listen for changes to the DOM, and update autofill instances when autofill-able inputs are added/removed.\n   *\n   * **IMPORTANT:** For performance reasons, it is recommended to carefully control\n   * when this is called and to call {@link AutofillCollection#unobserve} when finished.\n   *\n   * @example\n   * ```typescript\n   * collection.observe();\n   * ```\n   */\n  observe(): void {\n    // Setup observer handler.\n    this.#observer.observe(document, {\n      subtree: true,\n      childList: true\n    });\n\n    this.#handleObserve();\n  }\n\n  /**\n   * Stop listening for changes to the DOM. This only has an effect if called\n   * after {@link AutofillCollection#observe}.\n   *\n   * @example\n   * ```typescript\n   * collection.unobserve();\n   * ```\n   */\n  unobserve(): void {\n    this.#observer.disconnect();\n  }\n}\n\n/**\n * Entry point for Mapbox Address Autofill, for use on standard HTML input elements.\n *\n * Compared to {@link MapboxAddressAutofill}, this function automatically attaches\n * to eligible [`<input>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text) elements in-place.\n *\n * You must have a [Mapbox access token](https://www.mapbox.com/help/create-api-access-token/).\n *\n * Eligible inputs must be a descendant of a [`<form>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form) element, and the form\n * must have inputs with proper HTML `autocomplete` attributes. The input itself must be of autocomplete `\"street-address\"` or `\"address-line1\"\"`.\n *\n * If your application works with browser autofill, you may already have this functionality.\n * - [The HTML autocomplete attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n * - [Autofill](https://web.dev/learn/forms/autofill/)\n *\n * @param optionsArg\n * @param {string} optionsArg.accessToken - A [Mapbox access token](https://www.mapbox.com/help/create-api-access-token/).\n * @param {Partial<AutofillOptions>} [optionsArg.options] - Options to set on the underlying Autofill API.\n * @example\n * <input type=\"text\" autocomplete=\"street-address\" />\n * <script>\n * mapboxsearch.autofill({\n *   accessToken: 'pk.my.token',\n *   options: { country: 'us' }\n * };\n * </script>\n * @example\n * ```typescript\n * const collection = autofill({\n *   accessToken: 'pk.my.token',\n *   options\n * })\n *\n * myClientSideRouter.on('route', () => collection.update());\n * ```\n */\nexport function autofill(\n  optionsArg: AutofillCollectionOptions\n): AutofillCollectionType {\n  const { accessToken, options } = optionsArg;\n  return new AutofillCollection({\n    accessToken,\n    options\n  });\n}\n","import {\n  AutofillFeatureSuggestion,\n  featureToSuggestion\n} from '@mapbox/search-js-core';\nimport { MapboxSearchListboxAutofillType } from './components/MapboxAddressAutofill';\nimport {\n  AddressConfirmOptions,\n  MapboxAddressConfirmation\n} from './components/MapboxAddressConfirmation';\nimport { config } from './config';\n\nimport {\n  featureToAutofillValueMap,\n  findAddressInputs,\n  getFormAutofillValues,\n  checkAutofillValuesChanged,\n  parseFormStructure,\n  setFormAutofillValues\n} from './utils/autofill';\nimport { AddressConfirmShowResult } from './utils/confirmation';\n\nconst confirmation = new MapboxAddressConfirmation();\n\n/**\n * A utility that can be run prior to form submission that allows a user to correct or confirm an address.\n *\n * This parses and compares an address entered into form fields with the closest address suggestion from the Mapbox Autofill API.\n * Unless an exact match or a custom comparison callback evaluates to true, the user will be shown a modal dialog\n * asking if they would like to use the suggested address.\n *\n * When a suggested address is accepted, the values are automatically updated in the form fields.\n * @param form - HTML form that includes the autocomplete-compliant input fields\n * @param optionsArg - {@link AddressConfirmOptions} Object defining options for Autofill API, UI, form parsing, and address comparison\n * @returns A promise resolving with a result object indicating the decision made by the user\n * @example\n * ```typescript\n * form.addEventListener(\"submit\", async (e) => {\n *   e.preventDefault();\n *   const result = await confirmAddress(form, {\n *     minimap: true,\n *     skipConfirmModal: (feature) =>\n *       ['exact', 'high'].includes(\n *         feature.properties.match_code.confidence\n *       )\n *   });\n *   if (result.type === 'nochange') submitForm();\n * });\n * ```\n */\nexport async function confirmAddress(\n  form: HTMLFormElement,\n  optionsArg: AddressConfirmOptions = {}\n): Promise<AddressConfirmShowResult> {\n  const { sections = [] } = optionsArg;\n\n  if (!confirmation.parentNode) {\n    document.body.appendChild(confirmation);\n  }\n\n  let collectedResult: AddressConfirmShowResult = { type: 'nochange' };\n\n  const inputs = findAddressInputs(form);\n  const structure = parseFormStructure(form);\n\n  const listboxComponents = Array.from(\n    document.querySelectorAll<MapboxSearchListboxAutofillType>(\n      'mapbox-search-listbox'\n    )\n  );\n\n  for (const input of inputs) {\n    // If we have sections, filter by the form structure.\n    if (sections.length) {\n      const structureRef = structure.find((s) => s.input === input);\n      if (!structureRef) {\n        continue;\n      }\n\n      if (!sections.includes(structureRef.section)) {\n        continue;\n      }\n    }\n\n    // Get the form's new autofill values to compare against.\n    const autofillValues = getFormAutofillValues(form, input);\n\n    // Compare form values against the latest Autofill snapshot (if any);\n    // If form values have not changed since last snapshot, skip showing confirmation.\n    const listbox = listboxComponents.find((lb) => lb.input === input);\n    if (listbox) {\n      const lastRetrievedFeature =\n        listbox.retrieveFeature as AutofillFeatureSuggestion;\n      if (lastRetrievedFeature) {\n        const snapshot = featureToAutofillValueMap(lastRetrievedFeature);\n        if (!checkAutofillValuesChanged(autofillValues, snapshot)) {\n          continue;\n        }\n      }\n    }\n\n    // Show the confirmation with the first feature.\n    const accessToken = optionsArg.accessToken || config.accessToken;\n    const result = await confirmation.tryShow(autofillValues, {\n      ...optionsArg,\n      accessToken\n    });\n\n    // If changed, autofill the form.\n    if (result.type === 'change') {\n      input.dataset['mapboxSuccess'] = 'true';\n      const suggestion = featureToSuggestion(result.feature);\n      setFormAutofillValues(form, input, suggestion);\n      if (listbox) {\n        /**\n         * Imperatively update feature snapshot on listbox to keep it in sync with\n         * feature used by confirmation process to update form value.\n         */\n        listbox.retrieveFeature = result.feature;\n      }\n    }\n\n    // Set to changed if changed and not cancelled.\n    if (result.type === 'change' && collectedResult.type !== 'cancel') {\n      collectedResult = result;\n    }\n\n    // Set to cancelled if cancelled.\n    if (result.type === 'cancel') {\n      collectedResult = result;\n    }\n  }\n\n  return collectedResult;\n}\n"]},"metadata":{},"sourceType":"module"}